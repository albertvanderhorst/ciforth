dnl $Id: xina64.cfg,v 5.1 2022/03/14 11:22:11 albert Exp $
dnl Copyright(2000): Albert van der Horst, HCC FIG Holland by GNU Public License
divert(-1)dnl

                        CONFIGURATION FILE
                  FOR OSX VERSION
                       FOR NASM AND GNU as

include(prelude.m4)
define( {_HOSTED_OSX_}, _yes )
define( {_BITS64_}, _yes)
dnl Do not increase to or above 0x80000000
dnl GNU-linux ungracefully mishandles this
dnl Problems have been observed for moderate large values
dnl too. Experience suggests a relation with the
dnl size of the swap space.
define({M4_EM},(0x4000000))
define( {_TASK_}, _yes)dnl
define( {_ALIGNED_}, _yes)
define( {_THREADS_}, _no)
dnl define( {_ISO_IN_}, _yes)dnl
dnl define( {_SECURITY_}, _no)dnl
dnl define( {_LOAD_}, _no)dnl
dnl define( {_SOURCEFIELD_}, _no)dnl
define( {_EXTRAFIELD_}, _yes)dnl
include(postlude.m4)dnl
dnl
dnl This only makes sense after the postlude
dnl define({_NEXT},{JMP NEXT})
