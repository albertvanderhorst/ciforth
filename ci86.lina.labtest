1 LOAD
dnl  $Id$
dnl Copyright(2013): Albert van der Horst, HCC FIG Holland by GNU Public License
divert(4)dnl
wordtest( {D0<},
{ { "D0<" WANTED },{},
  {  0 0 D0< . },{0},
  {  1 0 D0< . },{0},
  {  0 1 D0< . },{0},
  {  -1 0 D0< . },{0},
  {  -1 -1 D0< . },{-1},
  {  0 -1 D0< . },{-1}
})
wordtest( {D<},
{ { "D<" WANTED },{},
  {  0. 0. D< . },{0},
  {  1. 0. D< . },{0},
  {  0. 1. D< . },{-1},
  {  -1. 0. D< . },{-1},
})

wordtest( {D<},
{ { "D<" WANTED },{},
  {  -1. -1. D< . },{0},
  {  0. -1. D< . },{0},
  {  1. -1. D< . },{0},
  {  -1. 1. D< . },{-1},
  {  1. INVERT -1. INVERT D< . },{-1},
  {  -1. INVERT 1. INVERT D< . },{0}
})
wordtest( {<=},
{ { "<=" WANTED },{},
{1 2 <= .},{_T_},
 {-1 -2 <= .},{0},
 {0 -1 <= .},{0},
 {1 1 <= .},{_T_} },
)
wordtest( {>=},
{ { ">=" WANTED },{},
 {1 2 >= .},{0},
 {-1 -2 >= .},{_T_},
 {0 -1 >= .},{_T_},
 {1 1 >= .},{_T_} },
})
wordtest( {ROLL},
{ { "ROLL" WANTED},{},
 {2 1 1 ROLL . . },{2 1 },
 {3 2 1 0 3 ROLL . . . . },{3 0 1 2 },
 {4 3 2 1 0 4 ROLL . . . . . },{4 0 1 2 3 },
})
wordtest( {REFILL},
{ {  "REFILL" WANTED}, {SOURCE : ISN'T UNIQUE },
 { : _G13 2DUP OVER + SWAP DO I C@ &| = IF ^J I C! THEN LOOP ;},{},
 { " 1 2 3 4 REFILL| 1 . 3 .| .| . . . . " _G13 EVALUATE },{1 3 -1 4 3 2 1 },
})
wordtest( {0>IN},
{ {  "0>IN" WANTED}, {SOURCE : ISN'T UNIQUE },
{: _G14 DUP IF 1- 0>IN THEN ;},{},
 { : _G13 2DUP OVER + SWAP DO I C@ &| = IF ^J I C! THEN LOOP ;},{},
 { " 4| DUP . _G14 | 9 + . " _G13 EVALUATE},{4 3 2 1 0 9},
 { " 1 2 3 4| DUP . _G14 |. . . ." _G13 EVALUATE},{4 3 2 1 0 0 3 2 1 },
 { " 1 2 3 4| DUP . _G14|. . . ." _G13 EVALUATE},{4 3 2 1 0 0 3 2 1 },
})
wordtest( {READ-LINE},
{
    {"READ-LINE" WANTED "R/W" WANTED },{},
    {"hello.frt" R/W OPEN-FILE . CONSTANT FD},{0},
    {PAD DUP 100 FD READ-LINE THROW . TYPE},{-1 "Hello world!" TYPE},
    {FD CLOSE-FILE . },{0},
} )
wordtest( {INCLUDE-FILE},
{
    {"INCLUDE-FILE" WANTED },{NAME : ISN'T UNIQUE},
    {include hello.frt },{Hello world!},
})
wordtest( {CI-DIGIT},
{
    {"CI-DIGIT" WANTED},{},
    { &0 10 DIGIT . . },{-1  0 },
    { &A 10 DIGIT . . },{0  10 },
    { &F 16 DIGIT . . },{-1 15 },
    { &G 16 DIGIT . . },{0  16 },
})
wordtest( {CASE-INSENSITIVE},
{
 { "CASE-INSENSITIVE" WANTED},{},
 { CASE-INSENSITIVE },{},
 { 4321 2 drop . },{4321},
 { hex 1af . decimal },{1AF},
 { CASE-SENSITIVE },{},
})
wordtest( {NOOP},
{
    { NOOP },{},
})
