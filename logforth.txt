2000 jan 17
10:30 Finaly started. directory structure created and readme's.
goals for today
- directory tree and its readme's
- Getting a preliminary backup in order with floppy's
- internet connection running
- fetching fig forth for MSDOS

2000 jan 19 (wed)
managed to get connection to the internet again


2000 jan 21 (fri)

Fetched nasm from the internet
And the classical fig86 forth. To be called classic.asm.
This one runs under MSDOS after assembling with MASM/TLINK
Th
2000 jan 26 (wed)

Nasm installed under unix.
Massaged clasic.asm such that is is assembled by nasm.


2000 jan 29 (fri)
classic.asm edited such that it is yieds the same
.com file if assembler by nasm as previously by MASM.
The last bits had to be done in this way:
generate both files and disassemble them.
compare the disassemblies. if the binaries are different
and the assembly code is the same, then approve.
This results from the bizarre circumstance that Intel
has lot of duplicate ways to encode instructions even
not counting different instruction lengths.
Last non trivial difference was found this way:
in DW X,<expression containing $>
Nasm interprets the program counter like it was at the
start of the line. MASM uses it as if it was at the last
comma (at least with DW).
The resulting executable was tested and runs sueccessfully.

2000 jan 30
1h think
1h doc
5h contributing back (nasm version of fig86)
11:00 The source has been badly mould through my escapades.
I want a version that is very close to the original, then
sent it back to the archives where I got it from.
I have created strt/archive/fetched with a copy of the archives I used.
13:00

13:30
Created a neat version of Fig86.asm that compiles under NASM.
Placed in archive forth/classic/RCS/classic.asm,v
17:30

21:30
Nadenken over de manier waarop we verder moeten.
22:30

2000 jan 31
4h5 System management (make)
4h5 contributing back
8:30
The first action is to make a version that generates via m4 a
MASM as wel as an ASM version.
Made a framework: makefile and empty version of *.m4 files.
13:00
13:30
fig86.gnr now generates a MASM and a NASM version.
16:30
To be done output of the masm version compare with the original.
23:00
Still some errors : BYTE, WRD PTR, an extra nop.
Now it really compares okay.
00:40

2000 feb 1 (thues)
2h5 System management (mail/news)
2h5 sm (m4)
4h  Headers.
8:00
Panick: it looked like news feed and mail did no longer work
on sparc. Rebooting and checking. Removed GATEWAY from rc.*
scripts.
10:30
Version 0.5 of fig86.gnr generates the classic fig forth
for MSDOS for bot assemblers. This has really be tested okay.
This has given the SANSHEADER label because no labels have
been generated automatically.
Wrestling with m4 for the headers
13:00
......
13:20
putting HEADER in.
17:30
More and finished.!
18:30
......
20:00
Getting the BRANCH stuff into a macro. Done!
So most OFFSET removed from fig86.gnr.
21:30
Studying the FCB. It is perfectly unclear how an MSDOS
program gets a filename from the command line.
23:00
And also the OFFSET removed from fig86.gnr related to XLOOP.
23:30

2000 feb 2 (wed)
7h5 hesitation.
8:45
Think about how to change the I/O
11:45
.....
13:00
Compared the old forth.ps and the new fig86.gnr.
It is clear that we can get rid of the printer stuff.
Further I want all I/O as either BDOS or BIOS functions.
Nobody is working with two floppy drives nowadays.
We can firmly establish a block as a 512 byte sector.
It is even dubious whether it is worth while to
make a distinction between sectors and blocks.
15:00
...
17:00
Made up my mind about what the next step is.
Removed some things from the generic version.
18:30
...
20.00
Some more thinking. A few of those headers contained
a colon address with a comma. Oh well.
22.00

2000 feb 3 (thu)
9h5 thinking
10:15
Night: it becomes clear that
1. a msdos version should use files. It then has no
longer problems with blocks lengths: you can read at one time
whatever you want.
2. a bios version must use sectors, of course.
Throughout MSDOS sectors are 512 bytes. Strange because
sectors are imposed by the medium. Well.
3. an msdos version should use the EXPECT/TYPE system as
basic. So
: KEY BUFFER 1 EXPECT BUFFER c@ ;
: EMIT BUFFER c! BUFFER 1 TYPE ;
4. A bios version should contain a full load of files
occupying one track.

JEE! lost an edit session, where I reconfigured
fig86.gnr
But the steps become clearer now:
1 make an MSDOS version with the dependant stuff screened off
by conditional compilation.
2. Test this version, more or less.
Or still better, put in equivalent definitions, test those
and then get rid of the old ones.
3. Check whether the remainder is the same as some part of
the old forth.ps
4. redefine the screened off definition for BIOS
12:00
13:00
MSDOS version checked in, i.e. a version functionally equivalent
to the classical but with the system dependant stuff together
and made dependant from _____USEDOS__
and some m4 stuff done.
I have compare the new version with the working BIOS version
but that was not very enlightening.
Now putting the working BIOS stuff back into this.
So we have an assembling version.
18:30
...
20:00
Testing : there is somethong wrong (no carriage return).
Also after several pages of output the systems crash (alone and msdos)
The masm version did not assembler
Studying different layout of disks.
22:00
2000 feb 4 (fri)
20:30
Testing and bugs. A default configuration is made where msdos/bios
specialise on
23:00
2000 feb 4 (sat)
9:20
More thoughts, the 32 bits symbols.
Checked in and labeled. 4 configs. To be added another orthogonal
switch alone/hosted (using a bootsector on a floppy, and not).
And the I/O system could be enhanced with a MODERN version were
there is character i/o at line level and EMIT derived from TYPE,
KEY from ACCEPT / EXPECT.
The orthogonal definitions have been added and some cosmetics is
done to improve the generated files, manipulation of the
link field of the FORTH vocabulary etc.
MSDOSBIOS label attached to this version that is truely generating
2 times 2 version, that work.
15:00
17:00
Incorparated the booting but this doesn't work yet.
19:00
20:00
Surprising: there is no assembler instruction in Intel to multiply by
a constant. I didn't realise that so I didn't believe the message nasm
was giving.

21:00
2000 feb 6 (sun)
Rest!
2000 feb 7
10:00
Made a backup to wards the sparc machine.
Now going to compare the boot floppy generated with the one we already had.
and getting it going.
Yes, de stuff boots. Lots of cosmetics done, in preparation of eliminating lots of
magic constants such as related to data with a fixed distance to the origin.
Discovered the dirty word +ORIGIN. Should not be used.
But first a check whether it is also a proper MASM version.

15:30
...
16:15
It turns out that the new version doesnot assemble cleanly under
MASM/TASM. Some fixed have to be done such a
RESB -> NEWORIGIN also the SAR AH,5 turns out to be in fact an
assembler feature of TASM. It should give the message. Constant 5
out of range (must be 1, or CL). The JMP to ORIG is also problematic.
Because the result is a PROC.
Managed to get the ASM effect running again.
18:30
Een feestje bij Coos. Een paar vrienden va hem waren redelijk
geinteresseerd.
2000 feb 8
11:00
De following tasks can be addressed immediately
- working on outline
- experience with TEX
- version that boots from floppy simple without strange boot layout
* version that boots from floppy that is still recognized by MSDOS
- version that uses only modern features of MSDOS
- bootable version that goes 32 bits
- getting webside back
- building the STNT, buying and assembling
- version that boots from floppy that handles hard disk.
- decompiling to get a still smaller kernel
- getting posting of news running
- getting the portable available for experiments
- hanging the digital on the local network
- getting KDE

A lot of fiddling around with those problematic booting procedures of DOS.
At least the bios version gives a cr with each lf again.
18:00
......
20:00
Bootable version generation
23:00
2000 feb 9
3:00
The bootable version is tested and works.
Labeled BOOTABLE.
Backupped
6:30

2000 feb 9
14:00
I tend to go working on this aspect now:
- version that uses only modern features of MSDOS
This is a nice mile stone to have published on the net.
Starting first with rewrinting the character I/O
19:00
...
22:00
While testing the MODERN version I discover
The _USEDOS_1_ somehow doesnot work anymore.
I get confused when testing
0:30
2000 feb 10
9:30
Forget about the modern version. First debug what there is
now.
Done, and there are no problems.
13:00
..
13:30
Buying a hard disk (20Gbyte) floppy drive TEAC
(not as nice solid as I expected, NEC CD player,
PCI video card. 56 k modem.
ready with stuying the new stuff.
18:00

2000 feb 11
9:30
* getting the portable available for experiments
Trying to at least get at the point where the duplicate versions
of the character I/O can be shown to work.
It works. The MODERN Disk i/o can be programmed
Fixed the batteries on the portable.
It turns out that the there is some disturbance
resulting from the change from the filosofy
a block is a sector to a block is a screen.
I think it is programmed correctly such that the
values can be changed.
17:30
...
20:15
Programmed disk I/O
20:30
21:00
Checked and test MODERN disk I/O.
It can now list blocks from a file.
But changing it is difficult.
The listings looked terrible, because the CR LF
pair was not sent. Now they look terrific.
There is a weird error, as if the data is not written to disk properly.

23:00

2000 feb 12
8:40
What can I get going before the HCC meeting today.
9:30

2000 feb 13
12:30
USEDOS and MODERN versin of disk io debugged.
USEBIOS had the problem that it read only one sector.
This has now been fixed and is ready for testing.
16:45

2000 feb 14
9:30
Testing the bios version
The following bytes me:
mformat -k restores the sectors/fat to 1.
This means that if I copy a file to a: it will not
always start at a block boundary. Which is inconvenient.
I filed a bug report for that.
At last all three I/O systems for disk work.
12:30
...
13:00
16:15

2000 feb 15
11:30
Strugling yo het my home page on the internet again.
I need Diane's help to reactivate my account.
After a lot of work I decide that it is impossible to
to get the account without somebody with a working internet
explorer. Diane doesn't have one, but the neighbours
(Seepers) have one.
17:15
Evening : managed to get my secret code for the HCC
thanks to Seepers.

2000 feb 16
9:20
Internet account ppp working on hccnet also.
12:30
...
13:30
Serving on the internet is possible.
Also using the mail, I have ordered the infamous THINKING forth
by MPE.
Internet account ppp working on hccnet also.
Got 168 messages from kadernet.
It is possible to switch the internet servers by the scripts
kadernet and hccnet.
It is necessory to change the pop server switching from
kadernet to hccnet as follows :
kadernet    0000405 mail.hobby.nl
hccnet      a.w.m.van.der.horst pop.hccnet.nl
19:30
....
20:00

2000 feb 17
11:00
Internet page updated, in order to recieve the new stuff.
At last found everything together that we want there.

17:50
....
20:00
So at last my home page is up and running again.
* getting webside back
23:00
2000 feb 18
10:00
I now can put my first result on the net.
I think I should combine this with the 68K assembler listings.
First what should be in there :
readme with
    ad for nasm
    explanation of three version I/O, two version layout, two version
    booting
    Out of the 12 version 4 the booted versions that require MSDOS
    are not useful.
    motivation
A hosted modern version, and a booted bios version
The generic source and all the .m4 files.
(Preferably the FIG glossary.)
readme.txt has been finished.
13:00
13:30
Using zip to generate a release.
Testing reveals that lacking the block file, weird things happen.
genboot.bat was no good and also has ; as a RCS comment.
MASM cannot handle unix text files.
RESB is not accepted by MASM/TASM.
16:00
...
17:00
sat worked hard to get my floppies from cp/m read.
sun  "
mon 21
tues  "
wed   built system, floppy doesn't work
thurs  Bought 500 MHz Pentium IIIe system
fri    floppy still doesn't work
* hanging the digital on the local network
sat careful recheck. Two floppy driver were broke, the new one
    could not stand jumpering to DS0. (0 ohm SMD R).
sun filosofing about a Pentium assembler.
mon more "      "       "
    can write to UDMA66 drive.
29 feb 2000 tues
11:00
* building the STNT, buying and assembling
Have worked iregularly these last weeks.
Cleaned the 360 K drive for Artemis and got it working.
But, it is better to have a block file on a 1m44 floppy,
copied from 360K drive. Inspecting 360 drives per se not very
useful.
19:00
.....
20:00
I now want to do the simple screen editor.
Not so.
1:00

1 mar 2000
9:30
Trying to get the orignal cp/m figforth floppy read.
At last I killed my second 360 kbyte drive. Ths side 1
head reads but no longer writes.
13:30
...
14:00
More experiments and cleaning of the 360 kbyte drive.
It will still work in the Osborne....
16:00
Start with the editor.
The P editor is available.
17:30
18:30
...
19:30
The editor works somewhat, i.e. I can roam around the
screen and type characters.
23:00
1 mar 2000
9:30
Deleting and undeling lines added to the system.
12:30
...
13:30
More things.
18:30
22:30
Splitting and joining. other things improved.
1:00
6 mrt 2000
10:00
* simple screen editor
* adding the mini string package
TOday we must debug the assembler.and use it.
Lets first get the $. stuff.
Done
Adding the deleting of words to the editor.
I would like to have my ultimate debugger handy for this.
Debugging the assembler. Opcode sometimes will not load
with mysterious message. I can now run a code definition
that only does "next" (a macro.).
Quick reference card made.
1:00
2000 march 7 (tue)
9:30
* improving on the quick reference card.
* adding the second age instrucitons
* comparing the qr with the code
* assembler is practically finished.

Quick reference card now also contains the second byte opcode
instructions. And all checked against the book.
A note made for publishing it on the internet.

12:30
* version that boots from floppy that handles hard disk.
Another sweep through the notes.
Backupped. Carefully checked.
Now the hard disk. Function 4100 bx=55aa .. int 13H works and tells
that the disk supports all the clever things. EDD-3.0
42 --4e functions of hardware interrupt 13h

Continuing  harddisk
18:30
19:30
Can boot from hard disk! (With the help of C. Haak.)
Helped with debugging assembler.
BOOTHD boots from hd but still uses the blocks from floppy.
version 2.24
1:00
2000 march 8 (wed)
10:00
* make a system that uses hard disk I/O
* make something on floppy to copy (an other)
 floppy to hard disk.

Idea make backup systems using offset. = xK
Have boot sector refer to x.
Make r/w restricted to offset + 1k blocks
Split the system over 32 backups rotating. Each 256K.
From that 50K for the system.
Normally writing a system will not write the bootsector.
So the old system still boots. Than in the old system you may
either copy the newly written system and the current screen to
a new mark and than update the boot sector. Or you may write
the current system and current screen to a new mark and update
the boot sector. later on we could add a way to boot from any of the
available systems.
Have made a system that uses hard disk io after booting.
Going to test.
12:30
..
13:00
Much messing around. It is no use to manipulte half blocks.
(The first file on a 1.44 floppy disk starts at an odd sector
boundary.)
19:00
...
20:00
Boots pleasantly from hard disk. Use restricted to 255 blocks.
22:42
2000 march 9 (thur)
11:00
Made a backup system for the screens
And used it to have a reasonable backup.

12:00
The guys of the Forth gg are here for a meeting
. The assembler got Willem interested.
At the end of the meeting there I show how the system boots and the editor
. There must be a mailing list with Willem Coos and Ben.

22:00
made READ-BLOCK double precision.
Copied a piece of NUNI going to protected mode and back.
3:00
2000 march 10 (frid)
11:00
Wasted my time with 64 bits musings.
12:0
..
13:00
Seen the light. Just suround BIOS with DISI en ENI. And a same pair in next.
Then you can do protected mode with impunity.
17:00
...
22:00
First of all. Lets introduce a 16/32 configuration thingy.
Much done like introducing DC, CELL and CELLP.
23:45
2000 march 10 (satd)
9:30
- putting 16 bits Forth in protected mode
- doing more 16-32 portabilty issues

Alterntatives
  - testing 32 bits Forth directly, with protected mode.
  - testing 32 bits Forth under Linux without protected mode measures
  - testing 32 bits Forth directly not in protected mode by playing assembler tricks
    in nasm

The problem is, I want to go 32 bits, bu really I got to test protected mode first.
Over last week , see also notes.txt in the FIG86 directory.
14:30
...
15:30
De conclusie is onomkoombaar Setting van protected mode via MOV CR0,DX
werkt gewoon niet.
17:30
2000 march 11 (sun)
15:00
19:00
...
21:00
Some vague experimenting resulting in the printing on the screen of an 'N'
by incrementing a memory location. The second time it fails, it looks like
the return somehow resulted in a change of the data segment. Apparently the
code segment sticks. Which is queer.
23:00
2000 marc 12 (mon)
9:00
Trying what happens if I just do not fill in the data segment, like
I didnot fill in the code segment. This just works!
I can run in protected mode! The delete key doesn't work in editing a line.
And of course the editor itself doesnot work.
12:30
..
13:00
Some experiments. It looks like the gdt is not filled in at all
18:30
2000 marc 13 (thu)
10:00
I can store the gdt back in memory and it looks all right.
I realize the system is now working in a strange mode.
The control content of CS and DS agrees with a real mode content of
7C0 (two times). However the content of these register in protected
mode is also 7c0, but there is no descriptor at 7C0 to be found.
This means that CS and DS cannot be loaded, or the switching between
real mode and protected mode breaks down. There is however a chance to use
ES as long at is restricted to one mode. The bizar consequence is that
while accessing video memory we are switching back to real mode.
12:00
13:00
If I can manage to put in a switch at L@ too, I am prepared to have
the protected mode stuff into the official version.
But none of the protected mode programs I saved run any more.
So I start with cleaning up the mess around +ORIGIN.
+ORIGIN can now be used to fetch statrup values for the user variable.s
Everything is put into the user variables, such that they are increased
to 100H (keeping in mind that they are going to be increased to 32 bits.)

It turns out that the buffer for READ-BLOCK cannot start at an odd addres.
(probably a DMA thing.)
The reason I thought the saved versions didnot work was that ?TERMINAL
always returned true, such that vlist reported an empty dictionary.
Test done with CHFORTH. Byte benchmark 5 ms on ARTEMIS-0 .
FIGFORTH takes 11 ms.
The kernel code of Linux has been studied. It reveals that for a decent
system the interrupts at low numbers must be moved, such that all the
system traps become available. There is however nice code for that.
An attempt is made to run 32 bit protected mode code, but it was
even unsure whether it really was 32 bit.
23:59
2000 mar 16
9:00
At last a strategy develops :
1. first make a gdt such that loading the descriptor from 0x7c0 into
the code segment results in a code segment at 0x7c0, i.e. switching
between real and protected mode can be done, and, while in protected
mode, a jump to some other segment can be done, and back, as long as it is
done before switching to real mode again.
2. add a stack segment, such that in real mode the stack is at a free place
( not overwriting anything.
The above can be tested from a working Forth system.
The memory layout becomes
00
..   whatever
7c00
..   Forth
17c00
17c00
.... BIOS stack while Forthing
18000
....    GDT
20000
[ if the forth is started from MSDOS, 7c00 is replaced by the load address. ]
3.
Change the code segment to a 32 bit segment and debug the forth.
In this way the constant reloading of the code segment is circumvented, which is
much too time consuming.
Testing in Forthis succesful. Screen 41 .. 44 show how to create a
16 bits and 32 bits code segment. Experiments show that you can only
switch from a 16 bits code segmen to real mode. But it is possible
to jump to a 32 bits segment then to 16 bits and then switch to real
mode.
In screen 1 there is now a nice dump for general segments.
The normal dump was improved too.
There were problems with listing block 255. It turns out that masking
the block number to restirct it to 255 must not be used in BUFFER
which is using absolute block numbers. (Only in BLOCK itself.).
Thank you, Coos.
23:00
2000 mar 17
9:30
Succeeded in temporarily changing the data segment.
Two improtant errors found in the assembler :
C|, used ! instead of C! to store the ored result back.
If W| is not the first fixup this leads to distastrous results.
Furthermore the groups containing CLI/STI were advertised as two
byte opcodes.
Added a group of Pentium opcodes (TO-REAL,) and the facility to
have three bytes opcodes.
TO-PROT now switches to a 32 bit code segment. Then loads
a 32 bit data segment, uses that to put an 'a' on the screen,
then switches back. The switching involves disabling interrupts,
setting the protected mode bit and saving the data segment (and
back).
17:00
20:00
Introduced LEA ..,[..+CELL] instead of INC ..
This is of course compatible with the 32 bits, and need
then no more change. However. It turns out that LOAD-GDT
starts crashing once you do this. Everything else works
okay. Through version 2.29..2.31
23:00
2000 mar 18 (fri)
11:00
More experimenting, especially surrounding the load-gdt with nop's and
running it with interupts disabled and surrounded with nop's such that
chances of overwrioting code diminish.
It crashes after the load-gdt finishes.
12:00
..
13:30
Experiments reveal that if the load-gdt is replaced by nop's it crashes in the
same way. This means that the problem has started with version 2.31.
Solved! Because next has changed, it must change in the assembler too.
17:00 ..
22:00
Timing of the switching and of the innner interpreter.
Switching takes 0.7 uS. Including jumping to the 16 bit code segment and
jumping back. Eliminating that makes hardly a difference. TO-prot, as found
in screen 44 with some more hoolabaloo (writing to screen, loading data
segment some nops), takes a full uS. The inner interpreter test (nested
DOCOLS take 10 us for a 2^10 nested call, ultimately executng the empty ": A0
;" a thousand times.
he stack segment must get a 64 kbyte space clear from the real stack.
The handling of the stack segments in the source is okay provided that
you go with the interpretation in protected mode that segments are pointers
into the GDT (or LDT for that matter.).
25:00
2000 mar 19 (sat)
sat 8:00
Decided to do the switching first in the Forth itself. Made nice and clean
screens to do the switch. At last installed the version with the improved next
and intepreter handler on the hard disk.
12:00..
15:30
Disapointment : the switch doesnot work.
19:00
some thinking
21:00
2000 mar 19 (sun)
13:00
I really must be more disciplined. Like getting up at 7 a.m. and do some
exercice. Doing aikido every wednesday. Trying to get even with the paper
work every monday. Use thuesday (unless SP activities) to improve the
houshold. in a technical sense. Start the day with some clean up, like the
most urgen thingies. If things go bad, read the Forth news, or Nature. Keep
the still to read things near my bed such that I can get rid of things that
can be thrown away. Make a box withincoming stuff and clean that out at
least every monday.

It becomes clear what goes wrong. I really cannot do without at least
initialising the codesegment and data segment properly, because (FIND)
intialises the extra segment from the data segment. However zooming in
on this problem reveals little. I have very carefully checked the switching
and it keeps on crashing. So I guess I start with the save versions that
allowed to switch to protected mode. Than built gradually everything in.

19:30
..
20:30
The simple version works. After getting rid of superfluous asignments
to segment registers. 2.35
23:00
2000 mar 20 (mon)
9:40
Made a mess out of it. Di not realize I had to use STOSW instead of
LODSW. That it uses DI instead of SI, and that it goes to ES:
instead of DS. So..
12:30
...
13:00
But at last I can check that GDT is filled in more or less
at its proper place. --> 2.36
19:00
21:00
23:00
2000 mar 21 (mar)
10:30
Debugging the 32 bit version. Made an auxiliary to  shwo the
SI. Works except for the mass storage.
19:00

20:30
It is clear what was wrong. The code segment must be
set for you can hope to get blocks from disk.
With the help of Coos sorted out which numbers in the
structured programmig words were magic.
25:00

2000 mar 22 (wed)

8:30
Much cleanups for the 16 bit version.
The segments better defined.
It turns out to be possible to do conditional code with the
_yes _no mechanism.
13:30
14:00
Debugging. It is a bit frustrating but the 32 bit version wil not
run. It looks very solid. There seems no reason it should have more
problems than the 16 bit version. But after the cleanups the 32 bit version
works no more.
19:00
20:00
version 2.42 can now handle hard disk io. It is a candidate for putting
it 16 bit protected mode version on disk.
I have copied the screens 90 97 and 91 to the hard disk.
21:40

2000 mar 23 (thur)
9:00
2.42 must now be put correctly on the backups.
First compile HD version. called 2.43
Now I have the buffers handled correctly for protected mode.


13:00
Working
Found back a working 32 bit version and labeled it PROT32
19:00
21:00
BAsed on PROT32 a whole chain of versions approaching PROT16
is written, in order to find out were the difficulty lies.
22:00
(stukje geschreven voor robotica blad.
23:00
It turns out that setting the datasegment before calling the bios
makes the system crash. It is correctly restored afterwards in protected
mode, but that doesnot help.
But YOU MUST REALIZE THAT IT IS 16 BIT CODE. Just putting code there results
in an extra 0000H interpreted as an instruction, and a total mismatch of
everything. And indeed it now works. gehackte baddespray. What a success!
I become not good! Version 2.40.1.5
26:00
2000 mar 24 (fri)
* bootable version that goes 32 bits
10:00
First thing : backing it up.
Second thing sending a message.
Now I wasted some time composing a message about CASE.
Putting the knowledge about what was wrong in the latest version
leads to something that can load screens. The editor however doesnot
work and the assembler crashes presumably because it patches at a wrong
location. I think I just must put the words CELL+ in the
basic Forth. and CELLS in the 100 screen.
Problems areas :
L@ L!
VLIST ID. (?)
BEGIN WHILE REPEAT constructs

The L@ L! is the most urging because it applies to the editor.
The version 2.46 has the L@ L! problems fixed, by completely recoding the
words such that they are in protected mode equivalent ro the real mode, i.e.
the editor works again vlist (and probably ID. as it is used by VLIST
work.) The assembler doesnot work. Executing a word generated by the compiling
word VOCABULARY leads to an immediate crash.
For the moment the loading of screen 96 (assembler) is suppressed.
CELL+ is added to the system and CELLS CELL is added to screen 100.
This has been done in the disk version.
This improved version is stored with the label PROTA.
It turns out that the L@ L! definitions need improved. They don't work
with 16 protected mode. (In fact the even did not compiler.

13:30
Fixed L! L@ such that it works for real and both protected modes.
Editing screens now works. Also fixed LFA such that VLIST and ID.
now work. Version 2.47 installed on hard disk. This agrees with total
RCS version PROTB.

18:00

2000 mar 25 (sat)
9:00
Tried to fix the vocabulary's. Phoned with Coos.
Apparently 810A must be interpreted as characters. Done that.
It turns out that making CELLP into TWOP in DOVOC helps.
Now at least the FORTH vocabulary runs.
It still crashes of creating a vocabulary AAP.
inspecting reveals that such a vocabulary point halfway the
cfa of FORTH. This must be wrong.
14:30
Other events :
Went off showing the results to Coos. It turns out that
I made a wrong version (HD instead of FD). BUt I got the
installation manual for scanning, in order to add some documentation
to fig-FORTH.
New floppies made. But only given to Diane yet.
Trying to scan at Diane's. But here OCR program is no good, and
you have no idea what resolution to use.
2000 mar 26 (sun)
10:00
After a lot of experimenting it looks like this is the way:
Do not use the very small print of the A5 fig Installation booklet.
It turns out that scanning the larger (A4)

fotocopy I have (although dirty
and old) gives better results. Still such A4 contains four pages of
type writer text in two columns. The scanning resolution is set at
600 dpi. The scanning intertwined with OCR leads to crashes.
So the procedure is :
Scan all pages (each resulting in a 4Mbyte file 1 bit per pixel!).
Done From Corel Draw Aquire.
Flip them such that they are upside down and mirror image.
Start Up READIRIS.
Configure :
1. page lay out, rectangle defining text (use the floating 3 button
item in the right hand corner for this.)
2. Make sure to set text (fixed font), source (from disk), output file
name( and appending, not creating), maximum safety, interactive and
learning, retain paragraph and line information.
3. save this configuration under some name. (Windows tends to crash.)

Even with the poor quality print the OCR works reasonably well.
(Many a's are closed to the point they resemble 8. m have a large lower
serif's that tend to close. I have yet to see a = where the two line
are separate. A w seldomly has a differentiated middle part. Some char's
have holes. All this means a lot of interactive work.)
At the end of the sunday the installation manual and the glossary
are scanned. As well as the picture.

Making fotocopies with the Artiscan and the desk jet :
Scan at 300 dpi b/w. Then just print at 300 dpi. All possible
from Corel Draw.

2000 mar 27 (mon)
13:00
Do not know what to do now.
Some improvements to the Fig documentation.
19:00
21:00
Coos Haak helps again. Now the vocabulary problem is solved.
It turns out that the word CFA was used to skip backwards over
the dummy namefield of the vocabularies. However this must be
" 2 - " and is then portable to 32 bits.
Ventilated the idea of eles to Coos Haak.
24:30
2000 mar 28 (tue)
8:30
Going on with ispell.
glossary.txt and figdoc.txt are now spelling checked and formated.
For 'JMP NEXT' the macro _NEXT has been introducedd (2.49)
The OFFSET has been placed at user variable 11. U0 has been introduced
as user variable one. RUBOUT is user variable 2. Both at their sure place
now.
13:30
..
14:00
The both jumps in the bootup area take 2 cells each.
The version numbers are supposed to take 2 cells.
So the initialisation of the parameters start at 6 CELLS +ORIGIN.
OFFSET gets the more modest offset of 11.
This is approved and put into version 2.50
In 2.51 now all user variables are in the correct position.
Remains to be done the FIGREL and JMP CLD stuff.
15:00
22:00
Searched the internet for assembly language forths.
Found two at mhx's site.
24:00
2000 mar 29 (wed)
11:00
Looking into a Unix version.
Study reveals that Marcel just does the following

For his EFORTH. Put the code at some address, that is apparently
allocated automatically, then jump to it.

It turns out to be very difficult to arrive at ?TERMINAL
(?KEY in ANSI parlance.) All my attempts to find an example of where
there is a look unto some pipe failed. Fetching the stat structure
of file descriptor 0 or 1 gives always 0 for the size. I may be doing
something wrong. MArcel Hendrix code is incomprehensible as always.
There is no need to save BX BP SI DI as they may not be use by
C routines without saving them first.

(16:00 )
Cleanup before starting the Linux version
19:00
...
20:00
* getting the ORIGIN parameters set up according to the model
All boot parameters (17 cells) precisely according to the fig model.
Testing of 32 bit protected 16 bit protected real bootin and msdos mode.
All works resulting in version 2.51.
M4_CELLWIDTH introduced.
21:00
2000 mar 30 (thu)
11:00
A figforth that at least does KEY and EMIT and TYPE.
Acording to the MHX system, via something that is loaded at a mysterious
address.

24:00
2000 mar 31 (fri)
10:00
Looking into gcc and the linker and nasm doc reveals that there is
no problem in getting a setup.
There is one small advantage to Marcel's setup (possibly).
SAVESYSTEM could be made more portable.
13:30
..14:00
Added the block action to the file. And handling of ^C break
and ^\ interrupt. Unfortunately the stuff still crashes.
Trying to link it such a way that the sections wanted are consecutive.
Unfortunately this doesnot succeed.
The GNU linker is absolutely frustrating. It will not
put things together unless you specify everything in the link file.
You may attach the two segments together but then there are
zero's filled in.
2000 apr 1 (sat) JRC
2000 apr 2 (sun)
13:00 18:00 trying to get a working mapping.
23:00 25:00 Still failing.
2000 apr 3 (mon)
11:00 decided to do the whole memeory map by hand.
Got all the segments from gdb. Then start the program at the correct
range. Works. Now debugging. Crash occurs in ?TERMINAL, It specifies
DOCOL instead of being a code header. Then still an infinite loop in
VLIST. This is because the header of EXPECT in comment is expanded and
results in the header of EXPECT to link to _EXPEC instead of _TYPE.
18:00
25:00 27:00 It turns out that the Linux interface can easily be
called from the assembler level. This would result in the LINUX_LOW
version.
2000 apr 4 (thu)
10:45
Preparation of the announce post.
11:45
....
12:15
* screen with disclaimer
* string package
* getting the ministring version where $I and $S works on constant strings
* getting qterm in linux c
* catching SYSSEGV in Linux
All this resulted in version 2.62.
18:00
..
21:00
The figforth version can do a warm restart.
But second and following QUIT signals are never caught.
Once a WARM restart has been done BYE no longer works.
22:00
2000 apr 5 (wed)
8:00
Saved the block from Artemis.
Reinstalled the 32 bits booting from harddisk thingy again on artemis.
toblock.c and splitblock.c made and tested.
Version 2.63 installed on hard disk.
The environment saved after a long jump is always the same.
So there is no need to circumvent the saving on a warm boot.
Nor is there a reason to do the saving if that means work.
The following problems remain whether or not I save again at
a warm start.:
    But second and following QUIT signals are never caught.
    Once a WARM restart has been done BYE no longer works.
The SIGQUIT signal is not mentionned in the Kernel Hackers Guide.

11:00
...
11:30
* configuration management under better control.
The above item results in a zip file that indeed can reproduce
all of the generated files.
One item still is not pleasant. The linux version is not
PROTECTED ! This came about because Linux doesnot need the switching
and so needed a special treatment within the PROTECTED world.
All the confiugaration stuff is now under control.
But after a syssegv caught, the system doesn't want to execute a
BYE command.
17:30
...
19:30
Adding the assembler version of Linux I/O.
BLOCK-INIT and BLOCK-EXIT work now with LINOS.
23:30
..
25:00
The whole block stuff works.
26:00
2000 apr 6
* defining M4_CELLWIDTH M4_EM M4_ORIG in the configuration file.
10:00
Documentation first and backup.
The TYPE is easy enough.
12:00
..
12:30
Finding out about terminal i/o.
The termio thingy is in linux/asm/termbits.h
What we need to do is easy enough:
One ioctl to get the struct.
TOGGLE a flag.
One ioctl to return the struct.
However you need the source to find out what to do.
It turns out that strace is a most useful program for this.
In general it is a fantastic tool for debugging system calls.
TCGETS works. 0 aap tcgets ioctl linos
19:00
..
20:00
* making a LINUX plain version
Getting also KEY and ?TERMINAL to work. First via the screens
than directly. Works.
The total version is now 12 K.
25:30
2000 april 7
Vrijaf genomen. Nog wel even gekeken naar signals.
2000 april 8
Forth user group. Talked about strings.
2000 april 9
Sunday:resting.
2000 april 10 (mon)
Created a layout for the website and thought about how to generate
links automatically. Here it turned out to be rather problematic.
2000 april 10 (tue)
13:00
What can be done. I think I must bite the bullet and create some
site generating software in forth.
Making the specs. (14:00)
This is not problematic. However it turns out that it will
be difficult to use Forth as an interpreter.
1. Without measures, it probably reads in the whole file at
a stretch, or at least filling tib each time.
2. #! /../lina
doesn't work, but
lina <<END
END
does.

18:30
20:00
Visit of Coos Haak. The luxury sieve now works for 32 bit.
(Problem with the mask arrays.) The experiment with the TCGETS sits
safely in the blocks.
24:00
2000 april 11 (wed)
11:00
Problem : aparently there is no way to work with lines in
raw mode.
Solution : the assembler version must work through key.
Otherwise you get code like (home brew buffered i/o )
: QUERY
   INBUF $@ \n $I 0= IF
      INBUF $@ DUP >R
      + 80 R> - EXPECT
      ( COUNT) INBUF C+!
   THEN
   INBUF $@ \n $I 0= 23 ?ERROR
   INBUF $@ \N $S DUP >R
   TIB SWAP CMOVE
   R> TIB + 0 SWAP C!
   INBUF $!
;
Been working on a program for websites.
2000 april 12 (thu)
10:00
First make the sets and relations working on Artemis.
(THough she is not intended for this kind of develpoment work.
Created SET SET-HTML and RELATION-HTML.
Instead of a DO LOOP I introduced ALL-FOR-SET END-A-F-S.
18:00
...
22:00 24:30
2000 april 13 (fri)
11:00
Get teh Pentium architecture book from Ben Koehorst.
A curious book. It is aimed at insight for students but I wonder
wether one can get any real work done with this book alone.
Interesting the RDTSC instruction, counts clock cycles.
Test done for lina and figforth. lina works on Linux 1.2.13 without problems.
figforth seems to have a problem with ?terminal.
18:00

2000 april 14 (sat)
Just fooling around with the alpha.
Its date is just plain wrong. I have now a good connection between the machines
except for the remote mounting. Somehow the apple and pear refuse their disk
to be remotely mounted. I could not boot pear for an instant, but
that was solved by updating the bios. THis system is definitely EV4.

2000 april 15 (sun)
8:15
* getting posting of news running
Made a rant about LOCALS considered harmful.
Plans for today :
  comparing gforth on alpha and on Pentium 90.
Posted an article about the benchmarks.
I have now more control about the cd player.
I can write audio cd's.

2000 april 16 (mon)
11:00 Managed to make a multi-session cd with backups.

2000 april 17 (tue)
11:00
Wasted my time with the bug in ld.

Introduced _NEXT _PUSH _PUSH2
I.a. an automatic inline next for all 32 bit versions.
On the Pentium 90:
120 ms for the byte benchmark before a witch to 32 bit mode.
110 ms for the byte benchmark with an in line next.
2000 april 17 (wed)
On Artemis the benchmark of screen 89 runs around 11.5 ms +- 0.1 ms
if aligned. Else some 700 us more. This is version 2.68 where we still
jump to next.
Automatic procedure to each day backup to the directory sparc:~albert/backup.strt
.
Version 2.72 didnot work on hd, but 2.71 does.
It turns out that the disk buffers must be aligned.
In fact I knew this, but it took quite some debugging.
This is fixed in version 2.73.
The benchmark now runs at 7.0 ms when aligned. And otherwise
plus 700 us to 1300 uS. (Only the code of DO-PRIME is aligned.)
I must decide against introducing alignment. This must be left until
the Artemis program.
25:00
2000 apr 21 (thu)
* LISTC -> LLIST  DUPE--> LDUP
* lina will not work using redirection
12:00
I probably must decide against vectored execution in lina.
Instead I must use a flag.
Made labels LINUX_HD . This is a version that runs Linux and also boots
from hard disk.
Apparently the benchmark went down to 100 mS with the inlining of the code
on the 90 Mhz Pentium.
The redirection problem in lina must be solved as follows:
1. If getterm reports failure the system must be patched.
2. STTERM must be patched with DROP DROP SEMIS
3. EXPECT must be patched with OVER OVER 1+ ERASE 0 DO KEY
           DUP LF = IF LEAVE ELSE I C! THEN  LOOP ;
But for now I must set up my side using the Fig script and just use
figforth.
I finally have replaced all labels with stupid conventions like
doubling the last letter by a L prefix.
 lina now works when using redirection. It is binary portable from
 1.2.13 to 2.0.34
Made an example program (wc)
2000 april 21 (fri)
9:00
The new EXPECT had a bug. It left a LF on the stack, making it impossible
to do mulitple line definitions in a script (or via any pipe).
At last wc1 works. Leads to two improvements in $f :
EXPECT left an LF in pipe mode. ?LINUX-ERROR is improved.
wc1 counts fig.gnr in 3.97 seconds. wc in 0.4
Removing 0=/= : 3.83 seconds.
Well at last the example program worked.
Developed the magic 7 theory.
21:00
... (Coos Haak)
25:30
First attempt at using gas.
26:00
2000 april 22 (sat)
gas is usable witht the comment symbol !.
BYTE "sss" must be replaced by .ASCII
It is not possible to put a string and a byte in the same
data declaration.
The end byte must be
.BYTE '('+0x80
This can be handled by the sed rule (not tested)
s/\"\(.\)\"\+/'\1'+/
2000 april 22 (mon)
14:00
The following has to be done
1. Introduce GAS beside MASM/TASM (with extension .ps beside .asm .msm)
2. Replace DB for strings in header.m4 with a combinatin of DS and
  DB, where there is no longer a mix of single characters and quoted
  strings. Now check the resulting binary against old versions.
  Use the extension .ps because before we have .s preprocessing is needed
  using transform. But now transform can be smaller.
3. Build up gas.m4 and transforms up to the point that the gas linux version
compiles. Try to put as much as possible in gas.m4.
4. Get rid of any discrepancies with the nasm version.
1. has been done. All binaries have been saved, and all old asm things.
transform has been introduced.
2.
After replacing the resulting *.asm and *.msm have been checked casually.
They agree. The resulting fig86.alone.bin fig86.msdos.bin, lina and
figforth agree perfectly.
made a target cmp to compare the old versions
Made a label TEMP: for all rcs files involved.

2000 april 25 (tue)
12:00
Succeeded in at least getting the stuff assembled by gas.
So we are now at point 4 finding out what is the difference with a working
version. A problem is that we seem not be able to control the sections
with the gnu assembler, at least the NASM options are not accepted.
The other options like present in the documentation are accepted neither.
They are not in agreement with the docs. I forgot how you can inspect the
sections from within gnu debugger.
Got an invitation from Paul(aikido) for some "organise you life" course.

2000 april 26 (wed)
11:00
Suddenly `apple' froze up during the use of ee. Bizarre. ^C got me out and
editing without the graphic shell presents no problem.
So lets go on with the internet publishing craze.
I can get sets on the screen all right know.
REF-FILE  It goes through the set of files.
For all sets it is in it generates a reference to somebody else
of the set.
2000 april 26 (thu)
9:00
Read net news
The command to get random numbers, stolen from tforth.
18:00
2000 april 27 (fri/sa/sun)
The queens birthday.
2000 may 1
Hardly done anything, with the visit to Diane and all that.
2000 may 2
10:20
Lets go on with the generating of the scripts.
With the help of C.Haak debugged up till the creation of \
relations. It turns out that it didn.t work on Linux: segmentation
fault.
2000 may 3
10:00
Got distracted by going through my news anout patents.
Solved the segmentation fault thingy.
The solution is to have an empty set contain a dummy
element (##) such that SET-FOR-ALL always examines a valid string.
12:00
...
12:30
1-1-html works.
WHAT NOW?
17:00

2000 may 4
10:00
- posting fully working
- discuss DFW and GNU
e alfa release
- local meisjes/jongens gedoe
- checks
The alfa release consists of
1. source release
2. msdos bin release (16 bit protected mode bootable masm)
3. linux bin release (lina)
4. doc release
I run through all text's and have improved them a little bit.
fromblock.c now generates source without trailing blanks.
Specifically an addendum was made that adds to the installation manual.

2000 may 4
10:00
* Editing the docs
* documentation adapted from old version
Improving the docs.
At last I found that the section command IS documented with as.
It has its attributes like this
fig86.lina.s:        .section forth,"awx"
fig86.lina.s:         .section dictionary,"wx",@nobits
This costed enormous effort.
I stop trying to get .as working.
2000 may 8
9:30
* getting onto the ai groups
Mail cleanup etc.

The reading of the floppies proceeds from /dosc/utils/cpm. c

I have discovered the simtel side.
I saw there are new versions for the cpm utilities.
The forth stuff contains a new file, down loaded also.
2000 may 9
10:00
* tryout post
* how to handle a combination of c and assembler for linking
I have copied the latest versions of the software to that directory.
I finally am happy with the .news_sig.
Reply to a post is also tested. It works allbeith it takes a very long time.
I have now published a request to help me with the sections problem.
Have looked into the matter of my standalone forth, using the dictionary
above 1 M.
2000 may 10
Done nothing.
2000 may 11
11:44
* publishing my FigForth
* Publishing the doc's
Announcing only the Linux figforth.
To be done :
1. posting rigged benchmarks.
Actually what I did. Do the subscriptions for Forth dimension and
cricuit cellar. Checked whether the post arrived at gnu.gcc.help.
But no. Tried again and uucp-ed xs4all. To no avail.
I have now injected the article asking help for linking assembler
with c via the kadernet link. Testing my site reveals that the
xp package has not been uploaded. Trying to upload it shows that it
goes extremely slow. Even so much that I didn't manage to get it done.
Uploading using netscape is no good.

2000 may 15
9:00
Cleaned up everything.
Posted to comp.linux.announce and comp.lang.forth.
There is still no reaction to the article about help for linking in
c/assembler. So what?.
[16:45] The 32 bit versions that runs standalone must be made such
that the bootup code segment must start at 0 (not $7c00).
The code must remain loaded at the same address, lest we have a problem
with the disk buffers. The situation for a 32 bit MSDOS version must
remain as it was, only we must allocate from TASK to relative address
1M+64K )
as a reserved area for DOS. (The 64K is the high mem. The load address
can be very low, this we don't know ).
So for both 32 bit versions we have to reserve approximately one M.
That is the easies first step, but before that we must check whether the
32 bit msdos version works at all. For that we probably have to save
the code segment somewhere in the GDT.
So
0. Check whether the 16 bit MSDOS version work
1. Make the 32 bit MSDOS version work
2. Put all MSDOS's conventional memory in a hole.
3. Shift the code segment down for the booting version.

The MSDOS version doesnot work well. KEY hangs even after an Enter is
given.
(The standalone version cannot be started from MSDOS.
 It tries to boot, but it shouldn't.)
 This bug has been solved. Yes a CODE-HEADER again.
2000 may 16
9:00
The stand alone version in protected mode 2.42 (very early, also cannot run from msdos.
So I start investigating the real mode booting version.
This one also cannot be run from MSDOS.
I must introduce the following trick:
make a piece of code that ensures the cs:ip is what is in the listing.
Along the following lines
here:   mov ax, here-$$
        LEA bx,here
        sub bx,ax      ; discrepancy between dream and reality
        mov cx,cs
        div bx,10h
        add cx,bx
        push cx         (new code segment)
        add  ax, here2-here
        push ax         (new program counter)
        ret far         (returning to here2 now)
here2
Listing must look like
preparation (equ etc.)
optional boot code (msdos compatible, debug code drawn together, relocatable)
above insurance (Now the code is correctly at an absolute address.).
optional switch to protected mode
switch to 32 bit assemmbler mode if applicable
forth
Made a new version where these sections stand out.
Now we have to move the code to the appropriate sections.
NATIVE has been renamed into SWITCH.
It turns out to be nearly impossible to read from floppy disk
to the right address, without the far jump up front.
The division into sections is now completed. It has very few jumps.
Only towards PROTECTED: because that section has a data area with
the GDT address. lina is okay.figforth is okay. real msdos is okay.
Saved as version 2.80
Boot sector must become relocatable. Failed to recognize that the
reference to memory addresses LHEAD will not work, so it is not relocatable.

2000 may 17 (wed)
9:00
Trying to make the boot code relocatable.
Succeeded at last for the boot from floppy.
Now we can also boot from floppy a 32 bit version..
Now we can also boot from hard disk in an orderly fashion.
The program blocks from hard disk are brought under RCS again.
The new version 2.83 is installed on the hard disk.
This version is also kept on floppy, the FD and HD booting versions.
Got rid of linux constants in hd booting versions etc.
2000 may 18 (thu)
10:00
Read all the Linux news of Forth. My announcement of lina has been
accepted.
The latest version has been called CLEAN1. It is a version where all
previous work has been conserved and the sections in the beginning
that do different things are there, but maybe not fully functional.
Setting the segment registers is no not done until the FAR JUMP.
The JMP FAR section has turned into a universal check that makes
sure the code is loaded at the proper place.
The booting 16 bit real mode can be started from MSDOS.
The TIB for the 32 bit system need not be placed under 1 Mbyte,
because EXPECT is using KEY, such that no BIOS call need address into
TIB.
This has been saved as version 2.84
2000 may 19 (fri)
I would like to be able to
start the booting real 16 bit protected 32 bit protected
from MSDOS. The problem is in the code segment. The code segment is
given by MSDOS, by the fact were it loads its code. At this offset
in the GDT we must prepare a corresponding protected mode segment.
Even that is possible. But in order to switch (see protect.m4)
we must hard code this code segment in the jumps. So I am afraid
with the current trickery protected mode can only be executed in
booting versions.
It is comparitively easy to shift the protected mode segment
down such that it begins at 0. This is accomplished by
letting this segment start at 0, and add and offset to each jmp
into such segment. This is a compile time constant.
The code has been cleaned up. With respect to division into
segments and protect.m4 has now only two macro's.
2000 may 19 (fri)
Not much done. Afternoon the Fokker visit.
2000 may 21 (sun)
Read a lot of posts of Bob Brennan. It seems that he wants his
things patented. This could hamper me in expressing my ideas, or
anyone else in using them. He has at least the following idea's in
common
1. small kernel evolving.
2. NT
x
2000 may 22 (mon)
Line of atack on the above patents :
publish the animal program and its ideas.
construe this as a MT program.
The 16 bit real mode has been tried out again and still works.
However I detected that the relocatable aspect of getting the stuff
at the address required by the high level code (that assumes an absolute
adress, in this case 7c00H) was not working.
This has been improved. The 16 bit protected mode version now
has been tested to the point that it can switch to protected mode.
There is a problem switching back to real mode.
The reason is in fact that there is an offset involved in the switching
in the new situation. Analysis shows that we can choose the offset
of the switch segment at will in the GDT-table, provided we give up the
(uffruitful) idea that IP shouldn't change upon switching between real and
protected mode. This means that the current offset maybe is not such a bad idea
because it maximizes the amount of that can be added to interface with the
fois/hardware. o
A lot of tests failed:
A test with a consecutive GDT table.
However we keep this as long as we donot know exactly how
interupt handling is performed. (The code segment could remain valid.).
Version 2.85 has been checked in with in principle the possibility to decouple
the real and protected code segments, i.e. they need no longer start at the
same address.
But switching with a builtin offset has been tested and failed.
(Changing not only CS but IP at the same time.)
2000 may 23 (tue)
Some hardwon knowledge has been incorporated in version 2.86.
There is a slight cleanup with respect to boot addresses.
Maybe it is even easier to get the protected mode version runnig
under MSDOS, than have it start at an absolute address zero.
An important thingy would be to calculate BIG_L the location
where the ORG of the FORTH lands. Or even rattle ever so slightly the chains
of the fixed address of the switch segment. Or even derive the sandbox and gdt segment
from the switch segment.
A mayor problem turned out that the GDT was loaded from a wrong segment.
version 2.89 can at least boot from floppy, but will not yet read
blocks. lina version 2.89 looks all right
2000 may 23 (tue)
9:20
Blocks cannot be read because the address of where to read, is a protected mode
address. The solution is to add an offset in the R/W (for each iomodel, but not for Linux)
i.e.
dwitch( dw Rot, lit, m4_offset, plus, rot, rot)
We have now the situation that the protected mode forths (16 and 32)
can be configured to start from address 0, but cannot use mass storage.
This is caused by the need to transform the addresses passed to the
operating system, such as to refer to the switch segment.
The first thing is to clean up further the whole stuff around segments.
2.90 Now can handle the mass storage again in protected mode.
Some sutdying of how to make a MSDOS version.
2000 may 24 (wed)
We could probably do without the SANDBOX segment, if we map the
the protected data segment and the switch data segment at the same
address, and then have the stack in this 64 k switch data segment.
In that case the sandbox stack and the real(=protected mode) stack
are identical and the stack pointer is always 16 bit. In that case
the CS_START cannot be zero and is prescribed by MSDOS.
Investigation about starting programs from Forth
1. give back all memory, not needed for FOrth and the GDT
2. Prepare a EXELOAD struct. Fill in for the program "COMMAND"
and for the command tail
128/c ....................................\r
where the \r is just outside of the counted string.
SYSTEM will then first BLANK the content and then MOVE the
remainder of the command there. This allows for such things as
pipes.
The EM was not handled correcly in the lina version. Fixed.
Now we can expand the memory to 128 Mbyte.
Disappointing. It looks like its working but only the las line of the screeen
is used. Later we get more crashes.

This night been thinking about the
{ apap { x yz } :DOES } : test

2000 may 25 (thu)
10:30
Simple transformations make the program crash. Like getting the 'BITS 32'
statement at the correct place. (Now it seems wrong.).
First I must put my ideas on paper about : .
I have managed to swap the ESC and ` keys in linux and the
Caps Lock and left ctrl keys. I now no longer suffer the problem that
at times the ctrl key doesn't work with disastrous results.
The way to do this is :
copy us.map or whatever your current definition is to a new file.
Find out with `showkeys' about the keys you want to change.
Edit them in the <newfile>
loadkeys <newfile>

Moreover this is more pleasant.
This version has also a better protect.m4 , with BITS32 at a suitable place.
The Makefile is also slightly improved for the allboot target.
The 32 bits version works with the editor.
All this suggests we must make a new mark and made called
BITS32_FROMADDRESS0.
2000 may 26 (fri)
10:00
Swapping the keys turns out to be non effective under X. What gives?
The plan is to check out whether the new version cannot handle the
switching to a large memory. If so I am just going to make the
MSDOS version of 32 bits protected mode work.
First some tests :
If I just put the stacks in high memory, not the dictionary,
the protected mode screen io restricts itself to the last line.
Disk access is not possible.
If I in addition put the start of protected memory at the boot
address, effectively protecting any dirty BIOS stuff from
corruption by Forth, this doesn't make a difference.
By isolating the difference it turns out that as long as
you set ESP to 0 no problems are apparent.
At last, I can run a protected mode Forth with 128 Mbyte memory.
The 32 bit version has been expanded such as to use the full memory.
There may be some errors e.g. in the sieve program but for the most part
it looks like it runs reasonably.
    i.e 2.92
2000 may 27 (sat)
Insight : if the 32 bit protected mode versie is started from DOS, it could
be that the code segment is not divisable by 8. It must be because the
selector must be pointing into the General Description Table and also
running at priority level 0.
This can be accomplished by a copy over a small amount during startup under
MSDOS.
The code related to zeroing SP has been moved into protect.m4.
Furthermore some cleanups has been done with respect to
empty lines and the BITS 32 thingy.
This version has been saved. 2.94
2000 may 29 (mon)
11:00
What to do next? It is not at all clear.
There are few matters nagging me:
- how to get started with the outline
- credential to Brennan. How far/how much
- Nieuwenhuizen contact
- advertisement on Forth site for a new president
- taxes
- funding my pension
- must I do Hallmark course
- spitting it on the Forth site.
At least the taxes have been done.
In order to improve the keyboard under X, also specify the usok keyboard
in /etc/X/XF86config
This works.
I am now in a position to work on the MSDOS version.

The variables LOW-DP and LOW-EM have been added. (Introduced MAPPED_1_)
The dictionary space for the 32 bits booting version now sits above the
whole conventional plus high memory.
The protected mode now uses a miniscule SANDBOX segment of 1 Kbyte after the
low Forth itself.
It doesn't look too bad. However, a long sieve (62500) crashes somehow.
This is saved as 2.95
Initialising the GDT is made independant of the absolute position of ORG.
Or so it seems, at least it works if the ORG is such that the code segment
starts at 0H, such that half way during loading this is indeed the value of
the CS.
2000 may 30 (tue)
12:00
I had a first reaction to my figForth. I have responded to it.
I must say that this whole mail effort is cumbersome.
A missing insight hitherto is that the switch segment must be in the
GDT at the place where the codesegment currently points to .
Otherwise we go ballistic on every switch.
This has now been coded as such.
(It must be because while switching this entries becomes

The idea that the protected mode program could be relocated to just anywhere
in memory is plain wrong. The above efforts were in vain.
This can be seen as follows:
[Fixed means fixed at assemble time.]
Switching to the protected mode segment requires that the descriptor and the
offset between real mode and protected mode are fixed.
If the descriptor is fixed so is the absolute address in memory.

So the best we can do is relocate a protected mode program to a fixed place
in memory. This is possible! If dos is loaded high, it turns out that the
code segment for the first loaded program is about. 04xx. So we can shift
the program up to 7c0. And go on with our dirty deeds.
I think I should start with redefine as much as possible relative to the
LOADPOINT , being the magic 7C00.
jun 1 (thu)
Indeed the loadpoint is introduced. And code made to shift up the
code to arrive at the loadpoint. Apparently it works, too.
The real code can be booted, even if compiled at 100. It works if run
from MSDOS too, but only if compiled at 100, if at C700 mass storage
access hangs.
So, the code as started from MSDOS has its code segment improved.
This becomes version 2.98.
jun 2 (fri)
10:50
Just let us have a look what could possible be wrong with the mass
storage. I have this feel that it is related to the data segment not
being at the expected place.

Discovery : I cannot find back where the code sits, but apparently
it is not correct.
If the program starts at low memory, it turns out that the rearrangement
puts the CS such that we address high memory with fatal results.
So what I try to do now is get rid of the third rearrarangement of CS
(the one in the middle) for the protected mode code.
jun 3 (sat)
11:00
Trying to go back from FORTH to MSDOS>
Done properly : going back to protected mdoe first,
than jumping back to the original cs segment.
Restore all other registers and execute 4c of 21H interrupt.
It hangs. The only sin I committed was going back and forth to protected
mode.
Lets save this as 2.100 anyway.
jun 5 (mon)
2.100 cannot do BYE even not from a 3.3 version MSDOS
The nice thing is that apparently, we can put the thing at the correct
boot address.
The last thing I will try before putting the stuff on the net:
generate a version that will use the MSDOS i/o.
Going through the following test:
PROT32 PROT16 and REAL all boot from floppy, and can can also
be started from MSDOS directly.
A lot of improvements with respect to configuration has been made.
Contrary to the expectation the REAL version cannot return to
MSDOS. This is an indication of a normal bug with respect to the
return code.
Trying to debug it with the lightweight 3.3 MSDOS plus DEBUG.`\
I needed to make a debugp.com that has the version checking code
NOP-ped out. The combination of loading COMMAND.COM high in version 6
and a lightweight DEBUG.com allowed to run the 16 bit protected mode
under the debugger. But it worked all right.
The 32 bit code still crashes in BYE. But the code in BYE is okay
(and almost the same as with 16 bits.) and the code where it jumps
to is also okay (and precisely the same as with 16 bits.).
jun 6 (tue)
10:00
Described my credentials for Bob Brennan.
Saved the latest version as 2.101.
This has a lot of cleanup with respect to configurations.
New names introduced as CLASSIC (instead of USEDOS) ABSOLUTELOAD
and a better dependancy of options and a cleaner meaning of options.
This version will run 16 and 32 bit protected mode from MSDOS.
However the 16 bit version will not EDIT and the 32 bit version will
not BYE. The thorough BYE code is now firm in the source.
The problem with editing in 16 bit is there at least from 2.92.
(I get green happy faces). The old 2.83 version (saved on floppy)
is okay.
After investigating it turned out that the problem came into being
between 2.88 and 2.90 (2.89 had invalid mass storage.).
The L@ L! was changed but had not been checked (let alone tested).

The fixed version 2.90.1.1 works and is folded back into the main
tree.
jun 7 (wed)
10:00
Today I must
* work through the pile of Dr Dobbs to find the Mark Stevens column
* do a wash of red things
* clean the table
* make a file of my 2000 finances etc.
* get the wash off the line
* put much of the financial stuff running around in the file
Talked about Landmark.

jun 8 (thu)
15:40 (ukh)
Which versions must be tested?
2 linux versions.
{ real prot16 prot32 } bios nasm bootfd linuxdev
prot32 bios nasm boothd linuxdev
{ real prot16 prot32 } bios nasm bootfd msdosdev
real { bios classic modern} masm hostedmsdos msdosdev
jun 14 (wed)

Test report dd 2000jun21
Summary
This is a test report for 12 out of a zillion Forths that can be
generated from fig86.gnr
Do not bother me. I know what a professional regression test is.
This is not. However, please tell me if any of the following tests fails
you, where it doesn't fail me.
It looks as if sometimes K' fails. But not for a freshly booted system.
If you have observation with regard to this, or even insight, or even
a fix, I urge you to inform me.

The following "tests" are defined:
A Booting
B make it
C 8 LIST 8 LOAD
D (requires A) 25 LOAD 0 PAUSE ! 100 SIEVE
E (requires A) KRAAK QUIT
F (r. A) 89 LOAD
G (r. A) Editing a screen
H wc *.asm
J Binary equivalent than compiled on linux
K BYE
L Dos Directory correct

Pass criteria
A OK
B I made it through make
C plausible content of 8, everything loads fine, ends in copyright screen
D primes less then 100000 zip accross the screen
E plausable decompilation of QUIT
F timing of Byte benchmarks, must be 7 ms for a 500 Mhz Coppermine
G Effect of cursor (^E ..) word (^A ^F ^T) (un)delete (^Y ^U)
H Same as /bin/wc
J Binaries are equal or
J' disassembly reveals only gratuitous MASM deviations.
K successful return to operating system (linux) or
K' successful return to "operating system" (msdos)

Test are always mentionned if applicable. A failed test is preceeded
by -.

The following environments are defined (Only for BOOTFD BOOTHD):
I Booted from FD or HD
II Started from MSDOS
(Other environments following from the executable itself).
Notes about ommitted data:
- all linux versions use NASM  PROTECTED BITS32
- all booting versions use NASM BIOS
- the MASM versions all are MSDOS-hosted and real mode

Description                 Configuration   Executable   Tests
                                file         name
hosted_linux linux_native   lina.cfg         (lina)      BCDEFHK
hosted_linux linux_c native linux.cfg        (figforth)  BCDEFHK
bootfd real                 alone1.cfg      forth.com    B I  ACDEG
                                                           II  CDEG K'L
bootfd prot16               alone2.cfg      forth.com    B I  ACDEG
                                                           II  CDEG K'L
bootfd prot32               alone3.cfg      forth.com    B I  ACDEFG
                                                           II  CDEFG K' L
boothd prot32               alone4.cfg      forth.com    B I  ACDEFG
hostedmsdos MASM bios       msdos1.cfg      msdos.com    B II  CDEG K' L
hostedmsdos MASM modern     msdos2.cfg      msdos.com    B II  CDEG K' L
hostedmsdos MASM classic    msdos3.cfg      msdos.com    B II  CDEG K' L*

Version 2.102 has been tested most of the time with growing modifications
for stand alone versions, and later 2.104 for msdos_hosted versions.
Afterwards 2.106 has been checked in and it was checked that the source
was equivalent to the one tested.
(i.e. after removing comment lines the source was the same.)

L* :
The classic version has been tested after properly setting OFFSET to compensate
for the fact that the BLOCKS.BLK was not simple dumped on the floppy from sector
0. In that case the MSDOS directory would not have remained intact.

jun 15 (THU)
Filled in further information in above table. The MSDOS USE BIOS version
has the problem that the OFFSET should be increased by 21 and that the
.CPU fails. This is an easy configuration problem.

Although the first version was tested okay, it was not saved.
The other sources have been checked using a special command `diffa'
The first version (real mode) unfortunately will no longer do BYE.
The same with the others. This is unpleasant because the sources are the
same.

jun 17 (SAT)
Set up of testing for the dos versions.
jun 18 (SUN)
The msdos version doesnot even assemble with tasm/masm
Due to some missing WORD casts for pointers.
Furthermore crashes result from the use of mass storage.
(Double faults: trying to access the disk during warnings
about disk usage.)
I cannot use the full memory with MASM because it chokes on 10000H
(too large.).
This has been solved by copying the inverse of DISK-ERROR into
WARNING. The linux version apparently do not have this problem.
The three masm versions have been copied to the test directory on the MSDOS
C: disk. With the genboot.bat file. These files have been built with
MASM version 1.00.
jun 19 (mon)
Updated my web site and some of the scripts. Gotten a linux version of the scripts.
I think I have now a very reasonable distribution for fig86.gnr.
I have filled in an upload form for the documentation to Simtel.
Actions for portability :
playing around a bit, restoring the whole stuff from RCS etc.
Reveals remarkably little problems.
1. In order to have a zip file compatable with msdos, I have added remarks
in the release.txt file about file name truncation etc.
2. For the same reason the fig86.xxx.yyy files are stored as xxx.yyy in the archives
3. link.script was not fetched from mass storage.
jun 20 (tue)
I have generated a hard disk version. This cannot be copied onto the hard
disk, it crashes. It is not bootable apparently because if it copied by
version 2.83 it doesn't crash but doesn't boot either. Version 2.83 cannot
copy the hd version 2.83 to the disk. Maybe that floppy is rotten.
After some attempts this succeeds. Experimenting with version 2.92.
Screen 97 is no longer correct for the situation were the protected mode
segments start at 0. For the jump to the switch segment 7C00 must be
subtracted from HERE. And for the buffer address that is filled in the message
also the proper address must be supplied.
jun 21 (tue)
Handling the large disks have not worked since 2.83.
In screen 90 97 98 and at line 2065 in blocks.frt the handling of the
switch to protected mode doesn't take into account the switch segment.
This has now changed by introducing COPY-SEGS (making other segments
equal to CS) and switchsegment that is used whereever appropriate.
For this purpose the utilities in 90/91 have been made more robust and
less cramped.
It turned out that the adaptations to providing addresses properly relative to
the actual realsegment had still to be done. After that the 32 hd version
could be run and tested okay.
This version has been installed on the hard disk. 2.106.
jun 23 (fri)
* putting the second stage of the work: FIG Forth on the site
At long last this is finished.
Also posted two message to promote the stuff.
jun 24 (sat)
Formulated the message as followup for the message of MHX
Tried a 32 bit msdos version but it doesnot work at all.
(crashes).
jun 26 (mon)
9:00
Trying to arrive at a protected mode Forth that runs from MSDOS>

Test must proceed as follows :
test and compare a 16 bit protected mode
test and compare a 32 bit mode forth
The cold code contains a part that will crash if run in protected
mode. This is of course a show stopper.
Before getting onto that I first check in 2.107 which solves
- not setting of CS if the code is not booted.
- eliminating of dead code
- better conditionals around BYE.
This is version 2.107
Comparing 16 bits protected mode booting and 16 bits protected mode MODERN
MSDOS. 16 bits doesn't go BYE. The other crashes immediately. Now I think I
should use the BIOS version in MSDOS too. This would result in very few
differences.
It turns out that there are no problems if running from MSDOS 5.x with
COMMAND.COM loaded high. The code doesn't work if the code cannot be moved
up to its proper place.
So this only works from MSDOS.COM versions where the code can be loaded
low enough.
But then it works.
Made msdos4.cfg where hosted_msdos is combined with bios/io 16 bits.
Made msdos5.cfg where hosted_msdos is combined with modern i/o 16 bits

jun 29 (tue)
Things get very messy. It looks as if I can go BYE no longer from a 32 bits
booting version (and a fortiori no 32 bits version at all.).
The version that I delivered apparently has the same problem.
The version in alone3.cfg can not use mass storage or do BYE if run
from the MSDOS prompt.
So in fact I have never had any 32 bits Forth running from MSDOS.
As it stands I have to check in everything and call this version
MESSY
Two 32-bit version do work however
the booting version provided memory is below 10000h
the msdos bios but blocks in file version with memory below 10000h
Remark nothing can be expected to run under MSDOS 3.3 because
the forth is copied down into the area for msdos itself.
(Not loaded high.) because it is well above (D000H) the forth
the forth itself may indeed run sometimes a little bit.
Trying to load the program at A000H.
This works for msdos 6.2 but not for 3.3
This required modifications, but these are checked using the mechanism
testbatch. Here the resulting sources of a number of versions are
checked against the previous version. So the modification of
fig86.gnr has no effect on all configurations thus far.
jun 30 (wed)
This version has been checked in as 2.108
This version can run in 32 bit mode from that address and aparently
switches back and forth to the switch segment properly, but cannot
do any MSDOS i/o.
Okay byte the bullet. Lets make a dimishing version that
still exhibits the problem. Too difficult.
It was not to be expected that the forth could be loaded
at A0000H in MSDOS 3.3, because the first available address is
ExxxH . This has been discovered by running a real mode relocatable
forth. And then make a small assembler program to see CS.
Have prepared a reply for the GNU guys, that I am not sure
whether to transfer the copy right to the DFW.

In protect.m4 I try to use genuine jump instructions instead of the
DB 0EAH stuff. This must be coded JMP GDT_SWITCH:$+3+CW
and some such. The code looks goodin the .lst file.
But a 32 bit version crashesimmediately.
It looks like it si impossible to get JMP working with
an address size prefix. But without that we get 2.109
with some other small improvements.

Still some things present in try.
Remember It is better to use the long jump, because then
we can have a LOADADDRESS anywhere in the lower 1Mbyte address
range. Now we switching is only possible in the lower 64 k
unless we give up the convenience that the memory for
protected mode starts at zero.
jun 22 (thu)
Not logged in. Worked with pencil and paper on the design
of a 80386 assembler.
jun 31 (fri)
More paperwork especially related to the SID byte.
mon 3 july
10:00
Made a new release of the software with a . in the middle
of the hex printout and the ?32 ?16 thingies to make sure no
wrong things are loaded.
Now we are going to improve the assembler by introducing
A'| , copying it to a new range and introduce 32 bit thingies
belonging to the assembler that are processor independant.
(Some from screen 90 )
tue 4 july
10:00
The screens are reorganized in order to recieve the changes needed
for incorporating protected mode and 32 bits assembler features inti\o
the assembler.
A few intermediate versions have been saved.
21:00 A version of the assembler that can be used to access the
hard disk has been saved. (1.17).
( SPLIT2 was all wrong.)
According to Coos there still is a bug in FORGET that should be
fixed.
22:30 The memory from 0-1 M is fully mirrored at 1-2 M.
So is 2-3 M at 3-4M . Conclusion (Coos Haak) A20 is not active!
How to activate A20 ? It turns out that the INTERRUPT and the port
list do not much to reveal what to do.
26:30 Indeed. In nuni there is an example of how to switch this on.
wed 4 july
* msdos 32 bits version and stand alone 32 bits version from 1 M on
10:00
This helps. Done a test to inspect memory and indeed all memory cells
are different. There is a mystery message at screen 120 after loading
everything that belongs to the assembler.
BYE from protected mode to DOS still doesnot work.
cursor up hangs the system (probably because it has the 8th bit up)
After an ABORT the editor sometimes no longer works.
The tricky interference between SIB and ds32 addressing mode is not
properly handled. there must be a sort SIBM| and SIBM, too. `
This and more has been handled and the assembler can be used to
put data on the hard disk.
Version 2.110 is put on floppy for fd and hd versions.
thue 5 july
The 8080 version has been used as an example for the complete assembler.
fri 6 july
Hardly anything done (teeth)
sat 8 july
sat 9 july
mon 10 july
11:30
Added last bits such that the 8080 assembler is fully protected.
23:00
Checked in as80.frt
Now I want to generate a disassembler.
tue 11 july
Results present in as80.frt
wed 12 july
Results present in as80.frt
11:00
The best idea is to first analyse the ASSEMBLER dictionary to
generate a comprehensive test set. This succeeds.
thu 13 july
Results present in as80.frt
11:00
Started on disassembling.
14:00
I can disassemble instructions for the 8080
Now doing the testset in.
It can assemble the testset, disassemble it and get the
same result. the testset is now saved testset80.
fri 14 july
12:00
Now we want the same for the 8086.
First a lot of improvements. By using a dyummy bit from
the nonexisting part of an instruction RC, etc. now automatically
reject A'| for a fixup.
Last train : REJECT
Much thinking about how to do the 8086. A point overlooked was that the
8080 started from the front, while the 8086 must start from the back.
However as starting from the front goes, the xFI instruction lives up to
"one size fits all".
Results present in asi86.frt
sat 15 july
Conclusion is that something must be added to fix from the back.
the old code was soing that all right.
Furthermore B| must set a separate bit and the ADDI must set a s separate
bit where IB, has two bits set.
A useful trick is probably that it is allowed to rotate the TALLY of a
fixup. Bits that would not be allowed because of the instruction size
automatically leads to errors. A useful trick to rotate is
"BINARY 1000...000 U* OR" with the appropriate number of bits.
1 CONSTANT TABLE 0 , ( I TABLE + @ yields ($100)^I )
( Rotate X by I bytes left, leaving X')
: ROTBYTE TABLE + @ U* OR ;
sun 16 july
14:30
I must be able to do a crude disassembly. But to start it is sufficient to
have bytes commaed in! This is the outcome of a train of thoughts starting
with the observation that my `switch to real' trick cannot be disassembled
automatically anyway. So we aim at a framework where assembly code gets
commaed in. In a later (very late stage) this can be changed to having
assembly code in the system. Please remark that although the system must be
able to change itself from within, it is no use try to acommodate a change
in paradigm such as using BP instead of SP for the stack.
So the next step is to finish the 8086 , then the 80386
assembler/disassembler/generator system. Not for the sake of having it in
the new forth, but for debugging it. Even this is dubious. I presume
that using the assembler would mean recode the definition and look
whether the binary code has stayed the same. In this way we need no
disassembler. (But there is also the TUD/TUE BIWMCB).
It is also nice to have a complete Forth with floating point but that
is hardly needed at this point. So stop fooling around with this
assembler.

mon 18 july
The assembler for 8086 can disassenble and reassemble the instruction
set . more or less.
tue 18 july
Made a program that prints the codes to a postscript file for a quic
reference card.


wed 19 july
Uploaded new versions of about everything.
Made a post to comp.lang.forth about my assembler.
/mnt/dosc/lang/bcpp3d1/lib/startup/c*.asm
are interesting files with regard to msdos.
thu 20 july
15:30
I needed two hours to get hcc e-mail out of the door.
fri 21 july
Decided to the the Pentium assembler
sat 22 july
Cleaning
sun 23 july
The Comprehensice test for the 8086 has been made better.
mon 24 july
Almost all 386 instructions are there now.
However disassembly of perfectly good assemblies doesn't work always.
And with the sign extend from byte to xell we want in fact the
combination of a AX'| and an AH| register in the same instruction.
That is automatically and definitively made impossible and so would
break a great lot of other things. Making it a feature (
MOVSZ|B Move the indicate byte. Fill the remainder of the destination
with zero's up to a full xell.) Doesn't help because the
source and the destination are interpreted differently. (SP| versus HL|)
So we have in fact to introduce a set of special registers, (extended
byte registers, AX'| and EAH| would not <AH|)
mon 24 july
All 80386 are incorpated. Comparison with 8086 reveals that all
8086 are there.
The following family
 0800 00D0 8 2FAMILY, ROL, ROR, RCL, RCR, SHL, SHR, SAL, SAR,
has a  strange behaviour: "RCL, W| F| [AX +8* "
For the rest the 80386 test file is approved.
tue 24 july
RCL problem solved.
The generic part counts in at 440 line 1250 WOC.
This includes the disassembler and SHOW that lists the possible
instructions for each opcode.
The part required for assembly proper is still smaller.
It counts in at 189 line 550 WOC.
Without comment lines this is 66 lines of code, at least half
is error checking. Because this assembler flags all illegal 32
bit instructions. (It doesn't flag some possible illegal construction
in case of a segment override *by design*, because there is no decent
way to tell the assembler the state of the processor).
There is no IF statement or CASE statement in sight and not a table
lookup of any kind. Except for the interpreter itself.
Now the 386 specific assembler itself. This is, at it should be, hardly more than
a bunch of tables. Here there is no IF or CASE statement in sight
*by design*. 200 lines 1100 WOC.
As Jerry pointed out: any complexity measurement breaks down.
There is just a single execution path in this code for each word.
Now with respect to Jerry's claim.
The NASM assembler is 37000 lines 1 Mbyte.
My stuff 650 lines 25 kbyte.
Looks like more a factor 50 than a factor 100.
But my code contains a disassembler and the online SHOW.
The executable is 500 kbyte agains 16 K mine.
And I am not Chuck Moore.
Interesing: MOB|SB disassembles wrongly.
Now .DISS immediately reveals that de disassembly catches ES|
instead of the register wanted, and then fails. So just add
with ES| that it is not compatible with a register operand.
It is not easy to get the whole set compatible.
Well it now for a long stretch.
wed 24 july
Found a last bug in the definition of L|GS . Furthermore it
appears so the the SIB, thingies cannot be tested.
For this a ((DISASSEMBLE)) introduced.
"
  @@
  Calling each other names

   We all know or Einsteins major discovery (E=M*C^2). and Pythagoras
   theorem (a^2=B^2+c^2) Now there was a time this wasn't that easy.
   The way it was formulated by good old Euclides more looked like:
   The area built by squaring build upon the side of the triangle
   lying opposed the right angle ....
   Formulae are a maior invention. Giving names like in
   Look at figure 4. The sides af the triangle are called as usual
   with A the right angle.
   Naming for abstract items is a major scientific achievement.
       The 'I' in DO I @ . LOOP and the `i' in for(i=0;i<MAXBUF; i++)
       are just plain *brilliant*.

   Using 'long descriptive'  names takes us back at that era.
   Some people want us back at
   IF ( AREA_BUILD_BY_SQUARING_UPON_THE_SIDE_OPOSING_RIGHT_ANGLE <
   ( HORRIBLE_LONG_EXPRESSION_EXTENDING_OVER_SEVERAL_LINES skipped )
   Or the Hungarian people at Microsoft Software Police Department.
   Maxwell Newton Einstein and the likes would have gotten nowhere
   without this invention. Instead they contributed
   - You cannot fit even a single name upon a line
   - You certainly can form sentences with those names.
   - You will never understand those sentences.

   Remember: If you to your Mam doesn't understand, your code when you
   read it to hear through the telephone
             IT AIN'T FORTH

   Now where does this get to?
   To the concept of CONTEXT.
   Ever thought why it was called that way by Chuck Moore?
"
Anyway. I have added a feature in the disassembler to allow SIB,
to be disassembled, althout it could not be using the dictionary as is.
Adding a prefix to ps.frt.
The facilities in the makefile are greatly enhanced with a generic interface
such that for any .frt file a qr.ps can be generated.
Now systematically chasing errors, found via the qr sheets.
In 0F SHLDI is missing , BTxxI is at an unexpected place.
BSF and BSR are missing(totally) IMUL is missing
It turns out that IMUL and MUL are peculiar in that they define a double
precision result. This has been reflected in the opcode IMUL|AD,
IMUL properly fits in with SHRD etc. This has been checked in and the
testas386(a) succeeds. Apparently my posts donot get out. I looked in
the Spy file at sparc.
Now going for page D0.
All pages come out fine now.
However there is a problem 7 pairs of inconsistency is too low for
the Pentium.
fri 25 july
Redesigned asgen.frt to have a separate TALLY.

Letter to COlins.

Hi Rick,
I have read with interest the discussion between you and the rest
of us about testing and the soul of Forth, length of code etc.

I would be interested what you think of a project defined in the
following:

Specification and deliverables.
1. A Forth assembler for the 80386SX as of "Intel 386 SX Microprocessor
Programmer's Reference Manual" ISBN 1-555512-154-3.
2. A matching disassembler using the same opcodes.
3. Being a Forth assembler no provisions for labels as in the tradional
assembler need be present, and no other provisions not normally
deemed necessary in a Forth assembler. The instruction set may be adapted
to its use by a Forth assembler or for reasons following from these
requirements.
4. The processor is assumed to operate in 32 bit mode. Under this
assumption the assembler should be able to generate all valid
instructions. It should flag all invalid attempts.
Instructions for the 16 bit mode should flag invalid attempts inasfar
independant from the assumption in which mode it works.
5. A source file containing all instruction and addressing combinations
the data, offsets, and immediate data being arbitrary.
6. It must run on XXX forth (a specific Forth). Non portable
constructions shall be clearly identified.


Implementation requirements
The assembler/disassembler shall consist of two parts :
1. A generic part that doesnot contain opcode and instruction information
2. A specific part that is "table driven". The latter part should contain
no conditional parts. (No IF or CASE statements.)

Test requirements
1. The file as of specification 5 shall be assembled and disassembled,
and the result shall be the same or equivalent.
2. The file as of specification 5 shall have all data, offset and
immediate data replaced with random data. The outcome should be
subjected to a test as per 1. The order of the instructions shall be
randomized. This shall be repeated 50 times or for one working day
whatever is longer.
3. In the test as of 1 the memory content shall be dumped in a
computer readable form such as to regenerate the memory content. (Read
MASM's DB statements.) This must allow this memory content to be
disassembled, inspected, executed with third part tools etc.
Performing this comparison is not a deliverable.

Note.
I will agree with you that 1 and 2 is not really a test, just the end of the
debugging face. It will be a far cry from "mission critical". The code is
merely stable and internally consistent.
It is the kind of thing that gives you the trust that it just might work.
(Note that other c.l.f may think that this is "carpet bombing testing unheard
of". Marcel what do you think?)
What you can do with the result of 3 is a real test, all right.
Of course once 3 is approved, 1 makes up a nice regression test.
Can the people who thought they wanted to do "the" test each time
they load a program, please comment?
(I heard you, Rick, saying that you didn't want to do that. I guess
you are right.)

Note that the 80386SX is approximately the Pentium without the floating
point instructions, but with all the protected mode stuff present.

Note.
This specification is maybe somewhat unassuming. Look at 4. There is
no assembler known to me that can generate all valid instructions. For
example there is most all assemblers cannot discrimate between the two
equivalent instructions to copy register AX to BX, because Intel's
instruction set cannot specify this. This could mask errors in
disassemblers. The instruction set *must* be redesigned to meet spec
4. However then we have a tool that is eminently suitable at reverse
engineering.

What would you think?
1. How large is the file at specification 5 assuming one instruction per line?
2. Would you think you need a team, or is it a one mans job? In C? in Forth?
Assuming a reasonable time, less than a year.
3. How many lines would you estimate? In C? In Forth?
   Or you may use lines of code in C (counting ';') or words of code in Forth
   (counting, well, words of code).

Greetings Albert.
@@
With this reasoning forth on Unix should be subprogrammed in c.
The MSDOS operating system has BASIC as its system programming langauge.
Placing Forth under the dictatorship of c is one thin.
Placing it under the dictatorship of the everchanging, every version
is a blind alley, visual basic isunthinable.
@@
Bord de mer. Exuberant. Out thoughts were mutual" If he s bored the party is over."
indepeendantly we left. They passed at the see side, ..I
Nocurls, no gems, no bra,
From the other side of the beach I heard voces shouting over the waves: "...revenir demain..."
"...Pourquoi?..." and, more decisive "..voir dancer le blonde..."
Blauwe hoek 026 4456526
@@
If you can't write poems, why would you try Forth?
Now i can see why one would have shadow screens.
Would you like toread peotery littered with
(How nice is the comparison of the beauty of her face with the
wild landscape around them) and (i.e spirits).
30 july
The 8080 testset succeeds again.
31 july
I am in a position to have the testset for 8086 improved. The test is also success
full. The 586 assembler is prefixed by redefining words, such that the
change can be worked out in bits and pieces however the first version
fails even so.
I have analysed the optimiser:
will write down that tomorrow.
1 aug
I need the fields NAME CODE and DATA and FLAGS.
The first THREE fields point into a pool and are uniform:
<aligned address> <cell with count> < count bytes >
The first thing to do is rebuild the code kraker such as to generate this kind
of stuff.
Optimising amounts to just copying the thing you need:
Add X to the table
   Now pass through the table from X
      For all parts Y make sure Y is in the table.
         [Start from X  again, to make sure you catch recursive things.]
Now we are sure that we have all the things we need in the table.
Now pass through the table repeatedly until X is a code definition :
   If a COLON definition calls only code definitions replace it by the code definitions in line.

A definition indicates which registers are used within a definition. Register usage
is optimised within a definition before it is used in some other definition.
All data is got from or put back onto stacks as part of the definition.

Special cases:
  LITERAL Goes to the appropriate code
  CONSTANT VARIABLE Goes to the appropriate code.
  DO I LOOP : At the start of the loop BX/CD are pushed/popped relying on the optimiser
  to get rid of those if possible.
  If I is encountered it is reconstructed
  from the stack. So parsing from DO to LOOP what you need not
 remember is whether BX/CX
  is on stack or in a register.
A PUSH/POP table is maintained. They indicate which POPS and PUSHES correspond.
All PUSHES are postponed. All POPs are postponed all pushes are prematured.
Saving of registers, if needed is done using the RETURN STACK! That one is balanced
all the time except for the possible use of >R R R> within a single definition or
DO I LOOP within a single definition. Also These to possibilities exclude each
other.
Optimisation oportunities.
Suppose we have an edge : <USING R1 R2 R3 > <PUSH R1 R2 >  <POP R4> <USING R1 R4 R5 >
This type of code can be replaced by  keep moving the push of R2 to behind.
DI:= AX POP DI
Definition of cost: 8 for ax 7 6 for BX/CX and so one.  Now we define cost for
an instruction by the sum of a the costs of all registers alive. Registers on the
stack incurr a very high expense.
Now define the cost of a piece of code by the sum of the cost of the instructions.
We can get the costs down by : 1 eliminating instructions (dramatic is back to back
MOV AX,3 MUL BX, AX 2. By commuting two instructions where the life time of a high cost
variable is decreased at the expense of a lower cost variable. 3 By replacing a high cost
variable by a low cost one. The commutation of LEA DI, [BP+3] POP AX by POP AX  LEA DI, [BP]
would be indicated, because it decreases the life span of a very expensive stack variable.
During a loop the expense of all instructions is multiplied by 10. All variables that are
used within the loop get there out supposedly.
Donot go overboard. In the first place at the very highest level such things as
0 variable ape  ape cell+ should be optimised out before this hoola boola is started.
`fwc
An analysis of a low level definition, if no earlier analysis is available.
Define a variable alive once it is written. Now from the end look at the pops and pushes
and declare a variable dead from its last push onward.
a piece of code by the sum of the cost of e

2 aug

3 aug
I finally undertook adding the handling of the SIB byte.
This was a mere 4 lines of code. The basix idea :
a SIB byte is added by    xxH SIB,,
Now this is inconventient. Execute SIB,, by
<save state> SIB, [ [AX .. [DI ] [ +1* .. +4* ] [ AX] .. DI] ] restore state
So SIB, is a one byte instruction with three fields for fixups.

Made a test script that generates a random test file.

4 aug
Disassembling using gnu reveals some interesting things.
- LOOP needs an offset
- AAD, needs immediate data
- SAL must be removed.
- POP CS| must be ridden of.
This has all been done
Moving segment registers FS| GS| was not present, adding it leads
to three fixups with mask 38.
Introduced an incompatibily bit for the test registers.
This does away with the lock bit.
5 aug
W'| and MOV|SG still wrong.
Fixed and asmgentest and make testasm386
6 aug sun
testasm386 succeeds. with all fixes.
Also :
 added a possibility to use the 16 bit stuff
 fixed asm386endtest to exclude the [MEM versions of the SIB byte that
  require extra data and hence disturb the assembly disassembly cycle.
 idem to exclude the bald ~SIB, instructions that SHOW-ALL generates.
 7 aug

Still failed: The proper way to exclude the mem is the pattern
'\|D0.*[D5] SIB,,'  not '[0-3][D5] SIB,,' . Also it seemed that the
data din't proceed much farther thatn test1.
'\|D0.*[D5] SIB,,'  still wrong must be
'\D0| .*[D5] SIB,,'  still wrong must be
'\D0. .*[D5] SIB,,'  (vertical bars are special).

Now doing the test, constantly checking
At last success.
Made the assembler.txt file that is still very messy,
but anyway.
At last : my reply to collins is on its way.
I have the assembler on my web site.
What else is new?

HOLIDAY.
21 aug
I got fan mail form someone wanting a 32 bit Forth on msdos.

I retraced what he should have done:
preparing this letter:
  "
  You are too much intimidated by m4. It is intimidating, but you need
  it only at a user level.
  What you should have done:
  1. read through fig86gnr.txt and realise that you need only the level 1 adaptation.
  2. Use the msdos.cfg as a starting point.
     The options are explained in prelude.m4.
     You conclude that you are happy with msdos.cfg except
     that you must replace REAL --> PROTECTED.
  3. Say
     make fig86.msdos.bin
     This give you a message that the CELLWIDTH is not known.
     If you are as clever as I think you are, you copy also the line

  define( {_BITS32_1_}, _no({$0}) )dnl

    from prelude.m4 and change  it into

  define( {_BITS32_1_}, _yes )

     make fig86.msdos.bin

     This results in only warnings.
     You have successfully configured a 32 bit MSDOS Forth with
     `modern' I/O. I.e. blocks in files.

  4. Insert a msdos formatted floppy and say

     mcopy fig86.msdos.bin a:forth.com
     mcopy BLOCKS.BLK a:

  5. Run forth.com on a MSDOS system.

  6. It hangs. What a disapointment.
     However reading through prelude.m4 you realise that the end
     of memory is set at 64k.
     So you add

  define({M4_EM},8000000H)

     for your 128 Mbyte machine.
     And repeat steps 4 and 5.

  7.
    This forth gives a prompt. It doesnot work properly, because its
    TIB is located at a place where it cannot be filled in by MSDOS.
    I do not expect you to sort this one out. It amounts to copying the
    buffers associated with TYPE and EXPECT because MSDOS cannot handle buffers
    placed beyond 100000H (1 M).

"
In versin 2.111 the modifications to TYPE and EXPECT are succesfull. The resulting 32
bit Forth works reasonably well. An error message with loading the string package and
^O in the editor fail, as well as BYE.
However loading at an other address as 7c00 fails. It turns out that the ORG
must be moved in accordancve with the LOADADDRESS. This has been put fixed
into postlude.m4. At least for so called ABSOLUTELOAD.
Now the LOADADDRESS can be changed to e.g. 7C00H.
Loading at 0F000H still fails. An improvement is made such that the load
segment is taking uip most of the change during the code move while loading,
but this doesnot help apparently.
At this moment it must be checked whether the code still works under MSDOS
6.22 for the file currently called msdos.cfg and a LOADADDRESS of 8000H.

The above analysis is somewhat unclear.
Better is the following:
The 32 bits Forth has all segments (CS/ES/DS/SS) identical.
There are three important addresses:
M4_LOAD_ADDRESS : The physical address from where the Forth is loaded in memory
M4_ORG : The logical address in CS/.. whithin Forth that corresponds with M4_LOAD_ADDRESS
M4_SWITCH : The physical address where the switch segment start.
Switching is possible if SWITCH < IP < SWITCH + 64K and
                      LOAD - ORG < IP < LOAD - ORG + 64K.
For the situation that LOAD=ORG (i.e. addresses in Forth correspond with physical
addresses) it follows that SWITCH < 64K . It follows also that SWITCH must
preferably much smaller that that for the switchable area to be reasonable.
If we must have SWITCH > 64 K it is reasonable to choose LOAD=SWITCH and
ORG = 0. Care must be taken to diminish M4_EM with LOAD and the editor must
be adapted in screen 1 and 3.

2000 aug 22 (tue)
8:15
First : put the knowledhe obtained yesterday into prelude.m4 and postlude.m4.
2000 aug 22 (wed)
* experience with TEX
For printing using .pdf. First odd pages in reverse. Then the even pages in normal order.
No. Print the even pages in reverse. Then the odd pages in normal order. THink about it!
The uppermost page is visible: page 1. Then the back of it is visible.
Togehter with Coos Haak made a first stab at a ciForth document.
The final solution
  dvips -A -r -i -O 1.8cm,0.0cm -S10 input.dvi -ooutputA
will get outputA001 ..outputAxxx and print those in that order.
Now do
  dvips -B -i -S10 input.dvi -ooutputB
will get outputB001 ..outputBxxx and print those in that order.
More over. After each file you can check whether everything is
still in good order. And you have the possibility to remove/
stick in extra stuff to get things right. The resulting pile need
no reversing of pages.
2000 aug 24 (thu)
@@
Data has a pendant in the physical or conceptual world, such that it can be
described precisely in natural language.
I would think the word legal covers the latter nicely,
as lawyers and judges has to keep do with natural language, yet have to arrive
at verdicts which is about as formal as you can get.
2000 aug 25 (fri)
A description has two requirements:
Firstly a description -- specification is the computer buffs words -- must
allow someone to decide whether this word can be used for his intended
purpose. This allows taking into account the context of this specification.
One of the big mistakes of computer science is the illusion that the
specification of a subroutine/procedure/word is absolute.
The object orientation introduces a single context (the class) in order
to keep up the illusion of that specification is absolute in the context of
that class.  It is equally flawed.
Forth is the only computer language that captures the concept of context
by being as fuzzy about it, as natural language, i.e. in a Zen way by not
even trying to capture it in some formal structure.
The second requirement for descriptions is that the validity of the
implementation can be checked against the descriptions of its components,
fully and totally, and that means with regard to all exceptions and error
situations.
This is hardly ever attained. Mostly it is not even tried
 because it considered too unattainable to be a worthwhile goal. That is
 the hallmark of bad programs. (That is my definition of bad. Others would call
these programs non-perfect and bearable.)
Forthers (like FORTRAN programmers) Sometimes have the stand : "The code is
the spec". I hesitate to say that can never work. But certainly it requires
capacities surpassing mine by at least an order of magnitude (Charles
Moore?).
@@
I have skipped through my logboek. I have copied all things that have
a place in the book. I have marked all places with interesting text that
might find a place in the book, some book or my quotation belt by @@.
2000 aug 26 (sat)
Put all notes into the thesis at the proper place.
Index works more or less.
2000 aug 28 (mon)
11:00
Trying to annotate the thesis in order to have an excerpt of the data.
2000 sep 11 (mon)
@@
James--Brown--Is--Dead!
Classic House Song.
Acid House Evergreen
@@
* working on outline
Have been working quite a lot on the thesis outline lately
Has got some substance.
2000 sep 12 (thu)
12:00
Try to get the interrupt mechanism in order a la CLIENUX.
This amounted to study only.
It revealed that LOW-DP has an incorrect value.
What has bee overlooked all along is that there are two low
area's in fact:
- the under 1 Meg that is accessible to BIOS/MSDOS
after switching to real mode.
- the switch segment.
Of course the switch segment is then subject to configuration.
2000 sep 13 (wed)
11:30
The plan is
* get a reasonable definition of LOW-DP
* make a test set of all configurations and compare
what the improved fig86.gnr generates with the original sources
* update the test set if okay
* add a generation of the interrupt table and a loading of
that table
* try to run it on Artemis
  It runs but only with the LIDT instruction disabled.
All went smootyly until loading the interrupt table.
As soon as the table is loaded, the program hangs
irrespective of whether the interrupts are disabled.
All books (386 prm, Pentium arch man) indicate that loading the idt
while in real mode is perfectly allowed.

2000 sep 14 (thu)
* generate all sources and compare. No switching sources should be
equivalent to the old ones.
* add a generation of the other (call) table.
- still equivalent
- add a subroutine to call the old interrupt vectors
- now use it, enabling interrupts without going back to real mode
- still equivalent?
- does it work?
- clean out the switching wherever it is no longer necessary

The call table has been added, but not yet installed.
The macros from protect have to be changed in order to
precisely enable/disable interrupts, this may solve the BYE bug.
This version has been checked in as 2.113.1.
A new version 2.114 has the BYE bug removed.
And has all the features of the 1.114 version

2000 sep 15 (fri)
......
2000 sep 18 (mon)
Actions with respect to using the interrupts from protected mode.
* still equivalent after generating of call tables
* add a subroutine to call the old interrupt vectors
- load interupt table (lidt)
- activate interrupts
- now use it, enabling interrupts without going back to real mode
- still equivalent?
- does it work?
- clean out the switching wherever it is no longer necessary
So the call tables have been added and look fine.
In fact all the code I wanted to add in order to use (but not yet modify
the interrupts themselves) have been added to the system.
But as soon as the LIDT instruction is executed in real mode,
the system crashes. Even if interrupts are disabled.
This source can hardly be debugged using debug.exe because it is
loaded too high in memory. There is a trick to load programs high,
(it can be set in the header of .exe files, see MSDOS programmers reference
manual the structure exeheader) However a thusly modified debug.exe
just crashes, so I must regenerate the debug.com thar runs under
msdos 6.2 by defeating the version control stuff.
This apparently has succeeded, but still I need to make a special version
because it cannot load anything under 8260.
This is called DEBI.COM and sits on the msdos disk in directory \DOS.
Further. This FORTH.COM cannot run under MSDOS. As I wanted it too.
2000 sep 19 (tue)
It still crashes any time a lidt is attempted. Tested with DEBI.COM.
Plan is to run the Janet Reno program itself.
This program works. I have made an equivalent (same binary code)
nasm program. And it too works, of course. The road towards a version
that loads and runs a Forth is long and unpleasant.

2000 sep 20 (wed)
janet reno adapted to change the gdt. This fails and a mail to
Rick Hohensee is has been sent.
2000 sep 20 (wed)
Rick doesn't want to look into it. But I manage to adapt to find the bug
(jr.asm 1.6). I can now place idt and gdt where I want.
The plan now becomes :
*Tuck jr.asm onto a working version of Forth, basically ignoring
Forth itself.
-Use my own gdt, gradually removing jr's gdt.
-use my interrupt handler, still using the video indicator
-call real interrupt handlers from the protected video handler
-use simple assembly program as an example
-activate Forth

2000 sep 21 (thu)
*Use my own gdt, gradually removing jr's gdt.
*use my interrupt handler, still using the video indicator
-call real interrupt handlers from the protected video handler
-use simple assembly program as an example
-activate Forth
I have worked through a lot of versions gradually eliminating the
code of Rick Hohensee, in favor of what I originally wanted.
2000 sep 22 (thu)
*call real interrupt handlers from the protected video handler
-use simple assembly program as an example
-activate Forth

I have indeed now called interrupt handlers from the protected video
handler, unfortunately, this has not worked once.
I can simplify the program in two ways :
specify the switch segment in the interrupt table.
This eliminates the extra jump.

Debugging tip. Run everything with interrupts disabled, such
that first we get the software interrupts right.

2000 sep 22 (fri)
There was a error in concept. The interrupt routine must not
used any registers!.

2000 sep 23 (sat)
This interrupt routine is now impeccable.
Still you cannot do an interrupt 10 from the interrupt routine
even if you enable interrupts, and cannot find any difference
between the state without and with having gone through a protected
mode interrupt mechanism.
2000 sep 24 (sun)
Debugging itnerrupt 10 AH=0E.
It passes a 60 save all (before anything.)
It test address 462 apparently a vector index.
Addres 488 is being anded with 70 . It contains 1109
It also uses a C1 intruction What gives?
This is a shift instruction, only available on Pentiums.
And another vector index at 44c that is multiplied by BL * 256
Interesting. Adres 463 contains a port (3d4)
to which 070e is written. That is okay, it implements the cursor.
So this leaves us with nothing to pick on.

2000 sep 25 (mon)
AN attempt has been made to eliminate the use of BP by trying to
increment the flags after they were pushed onto the stack. This
is not possible: the protected mode flags is not in the EFLAGS
register. This has however cleaned up the notions about segments
and
sparked the idea that it should be
possible to eliminate the code segment in handling interrupts.
If we are clever the code segment and the stack segment can be
used in the interrupt. See 2.114.2.1 where the SANDBOX has become
a stack segment that is active as soon as we enter real mode.
1. We still need a data segment because the stack segment cannot
be used to pass the interrupt vector number from protected to
real mode, and the code segment cannot be written in prot
mode(!).
2. We still need to jump through the GDT_CS 32 bit segment,
because of the calls. These wouldnot work in the switch segment
because it is a 16 bit segment, (unless some bizar combination of
prefixes would allow to modify the call such as push a 16 bit
return address that is on a 32 bit stack or some such.),
3. We still need the switch segment, because after returning from
the far call to the interrupt vector we are in a real segment.

2000 sep 25 (tue)
A solution is indeed present for problem 2 of monday. The nasm
documentation states that you can use the address prefix to do
push and pops for a 32 bit stack segment, in a 16 bit code
segment.
So what we can do is do is a call with a large stack,
in the inthandler do a exchange with the top of a large stack,
with a a32 stack and than push another register (BP), thus
allocating space on both the real and the protected stack.
Than, from protected mode, save and reload the FS selector
with a protected mode view of the real mode stack segment
and save the register again to [fs:sp].
In this way we can pass data accross the real/protected boundary
that is not in a register.
So what we loose here is the ability to pass the value of FS and
EBP through software interrupts. This is only of concern for
debuggers and those might take special care to get them from the
stack. Moreover it could be made totally transparent by saving
the old values of fs and bp to the real mode stack too, instead
of only on the protected mode stack.
In our old system already we get:
jmp gdt_switch:$
push ebp
switch using ebp
real code
switch using ebp
pop ebp
jmp gdt_cs
without the need for saving and restoring any segments.

But I think first I should put a cleaner view of the stacksegment in
the main branch. Maybe even prepare everything by also making a
separate protected mode 16 bit stack segment that views into
the real mode stack segment.
Label SS_REALPROT : Still identical version with 2.114 that
has all the name changes in preparation of the version that
doesn't load segments while switching.
Now trying to eliminate all the stack redefining in PROTECT.M4.
This leads to some bizarre results. Sometimes we have that the t
screen no longer supports linefeeds. Sometimes we have crashes.
Still we are pretty sure the stack segment is valid.
Not using the setting to zero of ESP leads to crashes.

2000 sep 27 (wed)
Because the cleanup of the switching leads to crashes fairly immediately,
I got the idea that a very conservative switching (imitating the one in
the main stream Forth 2.115 ) might work better.
And indeed we can now get XXXXXX on the screen. But it seems to crash
very soon. I presume that is as soon as we have some real interrupt to serve.
2.114.1.24 works together with protect.m4 version 1.15.

Trying to clean up this success leads to a number of small irregularities,
but eliminating those results in a Forth where the 10/0E BIOS no longer
works. The most clean, but non-working version sits in
precious2/precious4.
2000 sep 28 (wed)
plan is to rebuild the precious2/precious4 version but in working order.
Saved a version that is clean and is no worse than we had.
Called PROTEXP1.
Somehow I fooled up the hard disk.
Recipee for restoring hard disk :
0. prepare a floppy with a hd version.
1. boot from floppy into a 16 bit version
2. 8 LOAD 120 LOAD 97 98 THRU
3. If the screens were damaged : RESTORE-BLOCKS
4. COPY-FLOPPY (with the hd-floppy).

Version 1.116 now sits on the hard disk.

How can the lower level establish new data that is safe?
This can be done by acceptance of its result by a higher
level. I.e. a programming robot can calculate the primes
up to 100.000 by self programmed programm and have confidence
in the result. The kernel may accept any reasonably acceptable
sensory input for a fact. The lobes never can undo this.
It is similar to a child discovery some one is angry.
She asks : are you angry?" Answer yes, and it is accepted as
as more sure fact as before (but still there is an even higher
level that realises even mother is lying sometimes,
and joking sometimes, to get the child used to people not
speaking the truth.).

Beginning of oct: did not succeed in getting the interrupts
under protected mode working.
Discovered that GO32 uses an interrupt task.

2000 oct 2 3 4 Read "history of the russian revolution by Leon Trotsky,
with all those slanderous remarks about Stalin" or is it the truth?

2000 oct 2 (thu)
Session with Coos Haak. A rudimentary BNF system.

2000 oct 5 (fri)

At last I went on with the BNF. Discovery: a patch up of the forward
referencing is not easy. You cannot fill in the address into a
forward reference word, because that is not an execution address but
the address of colon. On the other hand the PFA is not a pointer but
a field within the header and is tied up.
Managed to implement ( [ and {.
Introduced some compiling words, such as <OPT <FAKE.
2000 oct 9 (mon)
Made a  backup of sep.
Saved what I have got thus far in the archived blocks.
And another save with a cleaned up version, where
there is a layer of compiling words that are not immediate
and are intended to be called from compling words that are.
Probably this stuff is rather fast at run time because so many
layers of actual calling are replaced by direct R> statements.

2000 oct 9 (mon)
I have cleaned up the paranoia directory.
It now contains a file that must become the Forth definition of
the Pascal language, and the cleaned up paranoia.pas that at least
can be converted by p2c :
p2c -l -lp2c paranoia.pas
cc -lm -lp2c paranoia.c -o paranoia
Interestingly this gives a SEVERE DEFECT that is not present in the
c-compiled version of paranoia.c.

What I want to do now is:
(Last 3 at tuesday)
*Introduce `IF `BEGIN etc. that do [COMPILE] IF etc.
* Make " that is a smart C".
* Have <PTS restore the data stack.
* PUSH" that pushes the text recognized by the current BNF: to stack
* POP" that gets text from stack, than adds it into the dictionary.

2000 oct 10 (tue)
With the help of Coos Haak all the items have been done as
mentionned yesterday.
caveats: the return stack overflows easily, with dramatic results.
In 40 LOAD you get an enormous return stack.
2000 oct 11 (WED)
You cannot count on the items that are PUSH" ed, because many times
they are just skipped. Restoring the data stack depth helps
to mask this error. The solution is to always output the stuff,
and rely on backtracking to remove unwanted output.
Even so it might be advisable to never output when SUCCESS is false.
2000 oct 12 (thu)
I have written some elementary lexical stuff for the parser.
The definition of the language I had contained numerous errors.
In particular some definitions are not used at all.
After removing from the bnf file what belongs in lexical parser (the
interplay between comment and strings etc. I can now load the whole
bnf definition in my BNF system.
2000 oct 12 (fri)

2000 oct 14 (sun)
Looking into the possibility of making a break into the recursion.
For example
BNF: A   'b' | A 'c' ;BNF
Athe beginning of the definition (before the 'b' ) insert
some code to detect wether this is a recursive call.
If so the parse pointer might have proceeded since the previous
time. Then it is okay. Or the previous time a successful parse
has been made (matching the 'b') but backtracking occurred because
of what was behind the 'b'. Then it is also okay.
But of we just try to recurse without hope for success, A should
exit immediately with affecting the remembered stuff.
This is all really difficult to implement, but  it suffers from
an even severe thinking error: if 'b' is matched then fails for
what is behind, back tracking never gets at trying the A 'c'
stuff. You must also realise that x.y.z.p.q.r= will go 5 times
in the recursion backtracking all the way and waste prodiguous
amounts of time.
The bottom line is that left recursion is totally unsuitable for
automatic parsing and should be replaced by right recursion
anyway.
So I will try my hand at simplifying pas_extp.bnf.
The bnf notation is also full of nonsensical semantic crap like
Booleanexpression = expression
string-variable = variable
I went through this thingy a great deal and have removed
quite a lot.
2000 oct 15 (mon)
Still wasted half an hour attempting to get a break in the
recursion, forgetting what I discovered at point two.
Decided to waste one more day on the Pascal compiler,
than go on with putting the comments in the generic forth
and generating documentation.
Created a definition for the pascal langauge that
can be handled by the BNF tool I have made.
It goes through the file paranoia.pas quite some bit.
2000 oct 16 (mon)
The file pascal.frt now can scan the file paranoia.pas syntactically.
monadic operators and the `or' operator were still missing, and the
`do' part of the `for' statement. But for the rest everything is okay.
It takes 5 minutes generating a 175000 line debug file,
and merely 44 seconds for just scanning.
2000 oct 18  (wed)
Worked on the preparation of the tingel score files.
2000 oct 19  (thu)
Atmel seminar, extremely interesting.
Field programmable gate array's.
Going on with PASCAL .. or what?
2000 oct 20  (fri)
Made an attempt to get an overview.
This is difficult.
Looking into texinfo :
chpaters contain an iso-wordset
subsection are wordset 's
There are indices for
- function  become words
- concept   remains
- data type defining words VARIABLE STRING etc.
Forth word's get the @code{} tag. (plus subsection)
@xref(!) is also needed but generates note: instead of see also.
Stack effects get @var
files get @file
example strings get @samp
Made a start with glossary.
2000 oct 21  (sat)
2000 oct 22  (sun)
continued
2000 oct 23 (mon)
I have now all variables, code and text from the
glossary tagged.
Continuing with making dictionary entries.
I guess that I go with the standard ISO stuff :
NAME  pronunciation stack-effect wordset description references

The glossary is now such that those fields are present, the file
is in a processable format, and the stack-effect and descriptions
are inspected, (version 1.3)
I made a mistake by putting things like $var{SP@} in the glossary.
They are processable by texinfo, but are no longer amenable to
e.g. html. So $var{SP@} has been translated back to forthvar(SP@)
The macros to generate it back using m4 are present in x.m4.
A crucial discovery is that $1 is expanded between curly brackets.
And you can define({quote},{{{$1}}}) which will put quotes around
its argument in the output stream.
So now go ahead with generating a texinfo file first that is a
plain glossary with an introduction.
Texinfo files moeten getest worden met
info -f filename
2000 oct 24 (mon)
What a success! I can now generate an info file with
a glossary menu that derives from loose items.
The only problem is when a name contains a comma. There is no way
texinfo would handle that.
The solution choosen is to have a worddocsafe that uses
the pronunciation as an identification, for those words
that give trouble.
However the result generated by makeinfo is disappointing.
Even after accepting the text, using at as an info file fails.
Some names of nodes totally confuse it.
In particular *.
2000 oct 24 (mon)
2000 oct 25 (tue)
2000 oct 26 (wed)
The proposed solution is to use the text names for these nodes.
Furthermore, I want a wordset name for each word.
Do not confuse these with the iso-wordset names.
* in prepration for supersort all documentation items
must be preprended by the wordset name.
* an experiment show that tex has only trouble with names containing commas.
* see also items using a link in html via glosshtml.m4
* nice display of word -- stack -- sets in tex
* generating html files
- see also items using a reference in info
- nice display of word -- stack -- sets in tex/info
- jump to index in html
- multi column index in html
- by not doubling the @ in menu items we can probably
eliminate the need to handle @ specially in info

The tex handling is okay without the need to handle any names
in a special way, in the make file we have eliminated the
worddocsafe macro's in favor of worddoc macro's.
You must press enter while generating the .dvi file for
some weird problem.
HTML works too.
2000 oct 27 (thu)
Looked into the adaption of supersort.
I must make a man page, and use that as the upper level of the
ssort documentation.
This has happened

2000 oct 31 (mon)
I want to redistribute the MSDOS version under GPL.
* specify sources in Makefile
* rule to make an MSDOS archive
* bring all sources under RCS
* first edit action: specify GNU
* bring documentation of run action under RCS
* adapt documentation to specify GNU
* build archive and test it on MSDOS
* drop them on the site

Made a complaint towards gnu bugs about not being
able to find what characters are allowed in a
node name.

2000 oct 31 (tue)
In behalf of linux
* Copy all sources to a version 2.0
* Change this version to build under Linux
I.e version 2.x of everything works together
and builds under Linux.
The GNU people have responded about my complaint.
I have replied and apologized for the harsh tone
of the bug.

2000 nov 1 (wed)
I must now do the following:
- do all the tests currently defined
13:14 started with the tests.
This is just a first shot before clearing up
what things should go into the release.
I have run into the following problem:
A file can be opened correctly.
If it is read into a 32K buffer, eof is returned
but also the number of char's read is 0.
15:00    Indeed there is a fundamental problem
I do not seem to ba able to read files from C++.
Evening Diane's Linux version (Suse evaluation)
has no problems. I gues I have to upgrade.

2000 nov 2 (thu)
Attempt to upgrade Linux on the apple and the compiler,
see if that goes better.
Still run into problems. Especially with library linking.

2000 nov 3 (fri)
Upgrading was succesful. My improvement of the keymap was no longer
effective because the directories have changed. I can now no longer
link the program, as it seems that the seekg member is missing for
istream. It is unclear whether this means I use the ifstream library in
a wrong way, or that the system is misconfigured.
I somehwere read that I shoud run libconfig -v as root.
This I did.
There is a library in /usr/lib libstc++-so.2.8.0 that contains a seekg
member and specifiying the library in the link make the link succeed.
however just saying -libstdc++ will not make the link succeed.
(After removing the 2.9 version, that apparently was dummy, this still
holds.)
After upgrading also de development library (that was not required
according to RedHat) I now compile again without problems, but
the program still crashes.
It is by no means clear what I did wrong, but now I seem to
have fixed it. Just do not specify attributes or mode, as there
is a perfectly reasonable default for input and output files.

2000 nov 4 (sat)
Preparing all tests.
I had to skip the lexicographic test and the ordering test,
because they use the non available sort.exe
The expression test dumps core! A shortened test passes,
and that is the one I use for now.

I have now a stable version that passes the regression test,
that I have which is not complete.
This version of supersort should be able to sort the dictionary entries.
And it is.

2000 nov 5 (sun)
For a system to document Forth I need :
* invent a way to generate output from fig86.gnr towards a doc file
  THis require a cleanup of the doc system :
  * get the -------- sytem working once and for all, done by getting rid
  * get rid of superfluous $0 's
  * explain whole file and definition time expansion of _yes
  * define doc and code that switch between doc and code, and place
  doc after code
  * split out the doc and code using sed at some tag


I have succesfully cleaned up prelude.m4 , with better explanations
and a redefinition of worddoc/worddocsafe that redirects the stuff to
a separate (documentation) channel first.
The -------- system must probably go away. It clutters up the
assembler file with came from information. That is just what I want to
hide in the documentation. So remove the --- system.
I have done just that. The assembler sources are still equivalent.
Proceeded to incorporating 2/3 of the glossry items in the generic source.

2000 nov 6 (mon)
* put all pieces of gloss in, such that it lands in the doc file

I have indeed put all the documented headers in the generic source.
This leaves me with the glossary header, non present glossary items,
back storage glossary items, untrue stories, things that do not
belong in a glossary and 70 items still to document.

2000 nov 7 (mon)

* mechanism for keeping wordsets separate in the glossary.
- document all wordsets as a whole
- document all words including the new ones
- filling in the manual chapter
- legalese and meta-information

8:30
First I must build a mechanism to have chapters in the glossary.
For this I could use the undirect command of m4, whereby after
each chapter the contents are dumped much like I did it before.
I had to make the following separate files :
gloss.m4 : changed to handle multiple wordsets.
Each wordsetnode is represented by wordsetnode_xxx , where xxx
is the wordset name.
wordset.m4 : a set of macro's that ultimately define the
wordsetnode_xxx from wordset.mig
menu.m4 : a set of macro;s that define a menu from wordset.mig

I can now generate an info file with a glossary split
into wordsets from the generic source.
This total version is marked SRCFROMDOC within RCS.
20:20

22:00 I can now generate .info files for all .asm files, with
corresponding names.
2000 nov 8 (wed)
16:00

2000 nov 9 (thu)
10:00 Got an abstract of the KvK.
* checking whether we can do conditional documentation
- filling in the manual chapter
- document all wordsets as a whole
- document all words including the new ones
- Collect all information and put in it figforth.texinfo file, even when wrong
- Check  and correct the figforth.texinfo file for version A.
- legalese and meta-information

I have been really messing around. I appear not to be able to get things
right before I very carefully define the file extensions and adapt the makefile
to that. That gloss.mig is at the same time an intermediate file and also
present in RCS doesn't help.
So I restarted and documented all extensions carefully in tje Makefile.
After going back a small step, I can no longer generate any tex documentation.
I see that I must get rid of the mig extension in the test.mak Makefile
The name of the menu is changed from menu.mi to menu.texinfo.
I have changed the file setenv such that $s is the stem, e.g. fig86.alone.
I have checked in a total version that can generate
make clean $s.dvi
(via tex)
By using $s.cfg instead of including the xludes in manual.m4
conditional documentation now is possible.
14:30
..
15:00
$setfilename now right in tex
The make still was not stable.
Studied it and discovered that gloss.mi was built again in the target .tex
where it was allready a dependancy. Also gloss.mig is in RCS and it is a
to be built target.
Solution: renamed gloss.mig into gloss2.mig and removed the extra action.
20:50
Careful inspection whetehr we have a stable version. Difference made with all
the RCS files.
Eliminated wordset.mi as anintermediate target.
Eliinated gloss.mig as an intermediate target.
I have a regression test in cmp. I only proceed if the tex file is improved.
I have now also a regression for the info file and the mi file.
I can now generate html files and have them in the regression directory.
A nagging problem is that the .rawdoc file i generated in concert with the
.asm file. Because it is not an explicit target it is contantly destroyed.
This is solved too.
22:47
I am now in a position to put information in the framework I have created.
Not yet. The glossary is still not macro-expanded according to the .cfg
file but according to the defaults.
I just can get the line about ``%.mi : gloss.m4 %.mig'' such that it doesn't give
the message EOF in string. Strange.
2000 nov 10 (fri)
10:00
At last I can add the old documentation to figforth.mi.

* filling in the manual chapter
* legalese and meta-information
- Collect all information and put in it figforth.texinfo file, even when wrong
- document all wordsets as a whole
- document all words including the new ones
- Check  and correct the figforth.texinfo file for version A.
- legalese and meta-information
I gues I have the copyright in there, and a discription of the Forth

2000 nov 11 (sat)
* Collect all information and put in it figforth.texinfo file, even when wrong
* remove _1_ macro's, introduced _ALIGNED macro
- move general user information out of fig86.gnr to *.mi files.
- document all wordsets as a whole
- document all words including the new ones
- Check  and correct the figforth.texinfo file for version A.

I think texinfo is lousy for the following reasons:
if subsection's (such as a wordset), must not be accessed via a
menu) they cannot be accessed via the index too.
As mentionned before much names just cannot be handled.
much needed formatting (eg. for ANSI type name--stack--affiliation)
is not possible
Shorthands are very difficult. (at first I failed.Now doing it via
manual.m4).

At least all information of the glossary.txt figdocadd.txt and figdoc.txt
is put into the .mi files.

It begins to start looking like something.

2000 nov 12 (sun)
* document all wordsets as a whole
- move general user information out of fig86.gnr to *.mi files.
- document all words including the new ones
- Check  and correct the figforth.texinfo file for version A.

I have introduced the note in the manual. This is a node you can jump to.
The manual has now three indices and two table of contents. Nice.
It can also be printed. However if I use the smallbook format,
I cannot get the page aligned horizontally, if I print them on
my deskjet.
the -T 1.8cm,0.0cm for dvips seems to do nothing.
There is an info for dvips in /usr/lib
Interesting discovery the smallbook trick to make a book
size output of texinfo generates awfull print. Each time two
l's are together they have clearly different thickness.
Appalling.
2000 nov 13 (mon)
11:30
Trying to get the see also also in the info file. This succeeds
partially, only the first entry shows up.
Yecch the latest version somehow has an error with generating fig86.alone.ps
with an unmatched brace.
Panic for nothing. If cleanly done there is no problem.
All entries in the documentation must follow the @ with a space.
13:10
Solved the duplication of @ outside of the fig86.gnr file.
It is simple, every @ turning up in the docs must be
doubled, a simple sed job.
13:30
14:00
Working on the manual headers.
At last all manual headers are there.
26:00

@@
This manual handles about how to generate and
install a ci-Forth.
You do not want nor need to read this in order to
use a particular generated ci-Forth.
In fact the ci-Forth you want to use and the corresponding
manual you want to consult are generated using these very instructions.
@@
2000 nov 14 (thu)
Mainly worked on formula. Tingel tangels.
2000 nov 15 (wed)
Mainly worked on formula. Tingel tangels.
2000 nov 16 (thu)
Mainly worked on formula. Tingel tangels.
2000 nov 17 (fri)
Got thoroughly sick of worked on formula.
Trying to get the stuff complete.
25 items introduced of the missing 75
2000 nov 18 (sat)
Another 20 items still 37 missing.
2000 nov 19 (sun)
xdos can be used to run an msdos emulator!
25:08 all words documented.
2000 nov 19 (mon)
Incorporated much more in the documentation. Especially
fig86gnr.txt. Removed some bugs from code generation.
Deleivered cd for printing.
2000 nov 20 (tue) tingel tangel  event table
2000 nov 21 (wed) tingel tangel low level control
2000 nov 22 (hcc dagen) building.
It is now clear how the building must be transformed
such as to have the chapter headers in fig86.gnr.
* always cat wordset.mig at the end of a .rawdoc.
- introduce %.menu instead of menu.texinfo
- temporarily copy it to menu.texinfo in behalf of
  including in figforth.mi
- put the chapter stuff in fig86.gnr
    - Make %.menu based on fig86.gnr
    - adapt the make for .rawdoc to ignore the chapters
wordset.mig has now been burned down : check in
2000 nov 21 (wed) tingel tangel low level control
* always cat wordset.mig at the end of a .rawdoc.
    * Adapt the make for .rawdoc to ignore the chapters
2000 nov 24 (fri) Met Paula (dailly@knmi.nl)aged to
Promised to send here the thesis in its current form.

2000 nov 26 (sun) During hcc dagen I have managed to
* Use menu.texinfo as a temporary file
* put the chapter stuff in fig86.gnr
    * Make %.menu based on fig86.gnr
* Include the chapters into .rawdoc immediately.
I can now generate the documentation directly from the rawdoc.

2000 nov 27 (mon) During hcc dagen I have managed to
The gloss.html macro set is updated such that html is now organised by
chapter.
It becomes clear how I must document the ciforth package.
I must use HOWTO. Reference about this are in the HOWTO-index.

wc didn't work anymore, now it does. The sollution was to
put the BEGIN WHILE REPEAT construct of COUNT-FILE on
one line. There is however no insight whatsoever about what is going
one.
2000 nov 28 (tue)
The BEGIN WHILE REPEAT problem is solved. QUIT didnot initialise
the return pointer properly (!).
FOR-WORDS and FOR-VOCS have been debugged.
With FOR-VOCS an improved FORGET has been made, that handles vocabularies
correctly.
lina currently measures 11808 bytes. And 11980 after solving the
FORGET bug.

2000 nov 29 (wed)
The REDEFINE ZERO bug has also been removed.
The CHOKE on 8 bit has been removed.
It wordset.mig is made empty, making documentation fails.
This results from wordset.m4, that generates the worddocset
heading still from that file, instead from the rawdoc.
This has been fixed too, and wordset.mig is burned down.

2000 nov 30 (thu)
I must make a new release :
- the msdos release was lousy because the manual was missing
- Remarks about what the new release is all about.
- Make a total index.
]

Oeps I lost the trick to get the RCS version in the documentation.
This must be in the backup of 19 or 20 november.
I reimplemented it, couldn't find it.
Testing in behalf of release : 2.147
lina okay.
figforth crashes immediately. However building is now adapted to new file
system.

2000 dec 1  (fri)
Trying to build an old version.
It urns out that the version from linux.cfg is equally bad
if built from the old version.
Testing everything prior to release.
Except for a configuration problem (real mode booting
forth must not load at an absolute address)
eveyrthing works and the documentation builds (html info tex alike)
until the version that must boot from hard disk.
It is not a problem to do RESTORE-BLOCKS (put latest versin
of blocks on hd). The hd version tries to boot but doesn't
get farther than printing DFW.
Inspecting the differences between version 2.116 and 2.147.
2000 dec 2 (sat)
To surprise the alonehd version generated assembly errors.
A trivial mistype (OH after SWITCHSEGMENT.
Unfortunately this doesn't seem to help, but that is because
I installed the wrong version of alone.bin.
This leads to version 2.148.
Difference between 2.148 and 2.147 are tested for the assembly
file, and they are the same for all configurations of 2.147 that
were tested.
Version 2.148 has been successfully installed on harddisk.
So we can output release5.
RELEASE5 has been marked on all files.
The archives have been unpacked and retested.
And from this archive put on floppy and hard disk.
The floppies have been archived.
The release has been put on the web site.
2000 dec 3 (sun)
The generation of an MSDOS archive is made less messy,
thanks to the -k option of zip.
2000 dec 43 (mon)
I see there is a mistake in msdos html description:
It suggests there is 1 2.148 version ( not true)
This version should contain a .ps file instead of the
texinfo file (as well as a .html file).

2000 dec 5 (tue)
making SAVE-SYSTEM.
It turns out that the format of the output file is
elf32-i386.
This has been hacked out by running ld with the
--oformat option. Possible formats found from the lowest
lines of the help.
80H bytes below this area is of interest.
At adress  44H from this header is the length :
HERE BM - .
Or sometimes this 80H
It seems however rather sure that the
memory starts at 8049000
2000 dec 6 (wed)
SAVE-SYSTEM works in the sense that the resulting
program can be run, and has indeed all what is added.
However objdump -x is not happy with the resulting file.
Got the ELF file specification via /usr/doc/HOWTO-ELF.
This file format is embarassing, in that the defining tables
start at a variable address at the end of the file.
Furthermore the table starts with a variable number of
variable length strings.
This is not a pleasant format to generate in Forth.
Using strip -s -R .bss -R .comment removes a lot from
the lina file, but there remains at least
.symtab .strtab .shstrtab and a message with the NASM assembler.
Talking with Coos Haak. The only reasonable solution is to
search for the magic number "0x7fELF" , call that SM
Then we must manipulate bm-sm here-bm and em-here.
There is a table of sections that must be put at the end.
Where Forth (here-bm) is the only section that is to be
stored, this header information can be put at here and
written in one go.
It is probably also not unreasonable to update the header
area from sm ... bm.
But for the moment I think I leave this and check the
preliminary stuff in.
2000 dec 7 (thu)
The crashing in COLD as long as you don't have dictionaries
has mysteriously disappeared.
Most of the configuration information has disappeared from
the user manual t the configuration manual.
Quite some work on separating the generic and user documentation.
2000 dec 8 (fri)
The generic manual and the manual for linux native
begin to look reasonable. There are no significant
pieces that are missing.
2000 dec 9 (sat)
Members of the dutch Forth chapter are interested,
I must put the doc on the internet.
2000 dec 10 (sun)
I have put the doc on the internet.
2000 dec 11 (mon)
Thoughts : I could write an article along the following lines:
Introducing meme's and associations.
Analysing d++ along these line.
Experiment with looking for certain Linux programs.
Expert mode : options yes, no, I dont't know, irrelevant
or impossible to answer questions, I don't understand the question.
Search mode : options yes, no, I dont't know, irrelevant
or nonsensic l to answer questions, I don't understand the question,
I don't care.
Specific mode : you can look up
a question in the question database. That is than taken into
account.
2000 dec 12 (thu)
2000 dec 13 (wed)
Proceed with ansification :
1. In assembly source
2. Splitting off as much hl source as possible
3. Miscellaneous and messy
If I choose 2, I have another round of tools to build.
In particular the ability to extract documentation from
high level code. Maybe it isn't too bad. If I feed high level
code into a running Forth, it is much like feeding assembler
to an assembler. The extracting of the doc would be much the
same.
I can just start right away at the first word,
tuck a few simple test onto them and make them succeed.
Then take the second word.
2000 dec 14 (wed)
2000 dec 15 (fri)
Managed to write eliminate (FIND)
by introducing MATCH-WORD
2000 dec 16 (sat)
I think I should now try to pass as much as dea as possible.
2000 dec 18 (mon)
All data is now passed as DEA.
The vocabulary stuff has been cleaned up.
The bottom of a vocabulary points to the dummy dea
of the vocabulary in which it is defined.
2000 dec 19 (tue)
* eliminating WIDTH altogether
  (Later reintroduce it as trim that puts don't care characters
  in names)
* remove TRAVERSE
- introduce FF (flag field)
- put CFA up front.
- put VLFA up front
- keep introducing tests all the way
2000 dec 20 (wed)
* put VLFA up front
* introduce FF (flag field) without using it.
* using FF (flag field)
* Eliminate the MATCHING-WORD special assembler
- put CFA up front.
- keep introducing tests all the way
The first attempt to introduce the flag field failed.

It is time to do a small cleanup:
some SEMIS are introduced without need, because the
decompiler has the lowest address of the next definition wrong.
This is not fixed (>NFA @ after NEXTN) but the SEMIS are
kept in for the moment.
The stuffwith regard debugging is partly incomprehensible.
Better first reorganise the vocabulary layout (through link
at lowest address.) Plus using >BODY to access it.
This is done and the VLFA moved to the front.
Now we will do a fresh attempy at introducing FF without using it.
In using the flag field crashes occur accessing some blocks
(during list , then during load). But I can decompile the whole
lot as long as a stop short of loading all the assembler stuff.

There are mysterious errors after CFA is up front.
I guess, it is just one problem. But DOTS doesn't work.
The boot message appears. All occurances of CELLS( have been
investigated. I overlooked the copying of a code field
as in RR versus IDO. And also the change of the code field
in MATCH-WORD. I think I should introduce string handling
and use that to eliminate the 8th bits. And then retry.
I have now introduced CORA, and used it. The 8 th bit in the
count and the old MATCH words remain.
2000 dec 21 (thu)
* 1/2 use a better version of WORD and string handling
- eliminate ENCLOSE
- put CFA up front.
- make PFA point to an area "owned" by a definition
- keep introducing tests all the way
I have this idea that for a code word CFA and PFA should contain
the same address.
I have eliminated the eight bits altogether.
Introduce like $, to put a string into the dictionary
: $, HERE >R CELL+ ALLOT R $! R> ;
A (WORD) (a1 a2 -- r1 r2 ) is introduced as the basic
parse method.
I have eliminated NULL and the header with it.
2000 dec 22 (fri)
* 1/2 use a better version of WORD and string handling
- eliminate ENCLOSE
- put CFA up front.
- make PFA point to an area "owned" by a definition
- keep introducing tests all the way
An ISO type ACCEPT is now used.
Next on the list is SOURCE, a two-variable containing
start and end of the parse area.
This now exists.
2000 dec 24 (sun)
* using a string constant within -FIND
* introduce $!-BD
* return a single dea from -FIND
* passing a string constant to -FIND
* rename -FIND into (FIND)
* perform UPDATE immediately
- eliminate ENCLOSE
- put CFA up front.
- make PFA point to an area "owned" by a definition
- keep introducing tests all the way
- rid of >LFA @  in using current and context.
- rid of need to have dummy name field in voc's
- rename --FIND into FIND:
- make NFA a modern counted string
- introduce &: and ^:
- make interpretation of blocks use (WORD)
- separate out an iso WORD
- make undeserving ISO words separate
- introduce $ALLOT
- introduce LOCK for blocks
- Eliminate closing zero
- replace dirty bit by lock bit
2000 dec 25 (mon)
* separate out an iso AWORD and test it
* use AWORD for interpret from terminal
* introduce &: and ^:
* SAVE/RESTORE cluster added
* Move closing zero for blocks up front to serve as flag
* SAVE-INPUT RESTORE-INPUT
* eliminate ENCLOSE
* rid of >LFA @  in using current and context.
* make interpretation of blocks use (WORD)
- put CFA up front.
- make PFA point to an area "owned" by a definition
- keep introducing tests all the way
- rid of need to have dummy name field in voc's
- rename --FIND into FIND:
- make NFA a modern counted string
- make undeserving ISO words separate
- introduce $,
- introduce LOCK for blocks
I got a bit stuck by the following situation.
The interpreting from terminal works with the
new word, but it is not full, it cannot handle
parsing of non-blank. It observes SOURCE.
The interpreting from screens is still old.
I think the solution is to introduce
WORD that is fully ANSI and use that for everything.
We got that one debugged already somewhere.
The stages are :
1 add AWORD and test it
2. use AWORD conditionally for interpreting from terminal
2a. Add &: CHAR [CHAR] and test it with the new LWORD
3. use it also with interpreting from screens
  cludging up SOURCE as needed.
3a add SAVE/RESTORE cluster
4. Adapt LOAD to fill in SOURCE
This has been done and it works. Sort of.
I get crashes, that I have seen before.
Try to look by disturbing BUFFER and BLOCK by getting the
flags in the second cell.
I have done a lot of improvement, but I am still stuck at the
crash of the loading of assembler screens.
This has krept in between fig86.gnr 3.21 and 3.22
and header.m4 3.3 and 3.4 , where the smudge bit went to a separate
field.
This doesn't give much of a clue. I can trace that it has crashed
in COPY-SEG in screen 129 but this changes as soon as I try to
handle it less circumstantially.

2000 dec 26 (tue)
* rid of need to have dummy name field in voc's
* introduce offsets for header fields
* eliminate BSCR
* introduce LOCK for blocks
* use simplest possible parsing internally
- put CFA up front.
- make PFA point to an area "owned" by a definition
- keep introducing tests all the way
- rename --FIND into FIND:
- make NFA a modern counted string
- make undeserving ISO words separate
- introduce $,
- cleanup CREATE
- remove lock after an error
I discovered that smudge entries were still found
using -FIND. This has been solved.
All the offsets within a header have been made
symbolic. Version 3.38 gives a nice reproducuble
crash with 3 LOAD 100 LOAD 8 LIST.
Even better : while printing all names found,
8 LOAD ends in a weird situation with fetching and
finding hex numbers in the dictionary.
It turns out that --> was definitely buggy.
Some of the problems may be related to not having the
LOCK yet. The LOCK/UNLOCK words are very internal.
The crashing has diminished, but it is still common
for a list after a long load.
2000 dec 27 (wed)
- put CFA up front.
- make PFA point to an area "owned" by a definition
- keep introducing tests all the way
- rename --FIND into FIND:
- make NFA a modern counted string
- make undeserving ISO words separate
- introduce $,
- cleanup CREATE
- remove lock after an error
- introduce WITHIN

De idea of bacovularies.
2000 dec 28(thu)
* introduce $,
* rename --FIND into FIND:
* introduce WITHIN
* make NFA a modern counted string
* cleanup CREATE
* remove from loadable extension
- put CFA up front.
- make PFA point to an area "owned" by a definition
- keep introducing tests all the way
- make undeserving ISO words separate
- remove lock after an error
- introduce worddoc)
2000 dec 29(fri)
* remove use of WORD (except in INTEPRET)
* all internal strings with long count
- put CFA up front.
- make PFA point to an area "owned" by a definition
- keep introducing tests all the way
- make undeserving ISO words separate
- remove lock after an error
- introduce worddoc)
- introduce denotations
Bought a 30 Gbyte disk and the SuSE 7.0 distribution.
SuSe looks good but there are stupid errors in the english
manual.
2000 dec 30(sat) ..
2001 jan 1(mon)
nothing
2001 jan 2 (tue)
* introduce denotations in general
* introduce &A
* introduce number denotation
- put CFA up front.
- make PFA point to an area "owned" by a definition
- keep introducing tests all the way
- make undeserving ISO words separate
- remove block locks after an error
- introduce worddoc)
11:45..13.50
DENOTATION dictionary introduced.
Prepared how interpret has to look like.
14:30 .. 18:00
Changed B_IMMED mask to 04H, and use the mask
for deciding whether to compile or execute.
Introduced proper call for denotations.
It turns out that after a call to a denotation,
we somehow have to scan afresh for NUMBER .
After implementating that it works.
Indeed NUMBERS are now interpreted using
the DENOTATION vocabulary.
19:00.. 23:30
Implementation aided by CH. All number denotation is
now done using the denotations vocabulary.
2001 jan 3 (wed)
* remove old NUMBER (NUMBER)
* introduce enddoc)
- put CFA up front.
- make PFA point to an area "owned" by a definition
- keep introducing tests all the way
- make undeserving ISO words separate
- remove block locks after an error
- introduce "
- make ." and .( use "
11:30..13:30
I have introduced enddoc) such that forth words can easily
skip to the end of a documentation block.
worddoc) is not prudent, because that would mean that
m4 tries tot expand that worddoc another time, leading
to strange effects.
I am not convinced LOCK and UNLOCK have the proper
parameters. (I guess it would be better to use PREV,
like in UPDATE.)
14:00..17:30
I cannot generate texinfo now, and it is not clear why.
In (FIND) and MATCHING-WORD there where strange effects.
Found a couple of {{}} where I should have {}.
All this doesn't help to prevent an EOF in argument list for
m4.
After considerable debugging info works once again.
17:30 ... 19:00
Start with using parameter field.
Problematic. Restarting with the order DOCON, DOUSE, DOVAR
DOCOL DODOE
20:00 ... 21:30
DOCON DOUSE is trivial, DOVAR is reasonably easy.
22:00
The code definitions must be done before the colon's.
Okay. The colon definitions failed, so I did enhancing the
vocabularies first (FORTH and DENOT).
24:00
2001 jan 4 (thu)
* make ." and .( use "
* introduce "
* make PFA point to an area "owned" by a definition
- put CFA up front.
- keep introducing tests all the way
- make undeserving ISO words separate
- remove block locks after an error
- cleanup CREATE everywhere
- Show word where an error occurs.
12:00 14:30
Introduce an indirect PFA from colon def's, the last frontier.
There are problems in ." (.") . It looks like we want to do "
first.
Added a code routine SKIP that skips a memory area.
This is not easy, bit a version with % is checked in now.
15:00 ..17:40
KRAAK expanded with the in line skip.
Now the old " is eliminated.
And (.") is gone. And eleminated. All PFA are now done.
lina has grown to 18 K
Made a debugging version of figforth.c that prints all
the names f things it passes through.
2001 jan 5 (fri)
* cleanup CREATE everywhere

13:00..15:30
Trying to make a new create according ANSI. Succeeded! Now I
have to add the tests that accompagny them.
CREATE is now no longer used.
<BUILDS transfromed into CREATE and DOES> made ISO style.
2001 jan 6 (sat)
* put CFA up front.
 - keep introducing tests all the way
 - make undeserving ISO words separate
 - remove block locks after an error
 - Show word where an error occurs.
12:00..15:00
Made a clean version were only the field numbers have to be filled
in and the portions of (CREATE) moved and HEADER macro.
The tests using figforth.c show that it gets into the INTERPRET
loop. It crashes while looking up words in the dictionary,
and VLIST also crashes. But ' ? CURRENT @ FOR-WORDS prints
indeed all code field contents. The problem occurr in particular
while fetching the namefield. But LATEST ID. is no problem.
15:00..17:00
Header changed so as to also create the headers of VOCABULARY
This was the problem, the half baked fields of FORTH and
denotation contained no name field, that ID. was trying to print
anyway. But now the fields are in the proper order:
CFA DFA FFA LFA NFA . Also the block file is okay.
2001 jan 7 (sun)
2001 jan 8 (mon)

 * install regression test
 - introduce hay's test for all things in the kernel
 - add loadable extension for all core stuff
 - move undeserving ISO words to loadable extensions
 - make save system really nice
 - remove block locks after an error
 - Show word where an error occurs.
 - skip leading non.blanks in word
12:00 14:30
Regression test installed.
14:50..15:50
Worked through it up till I.
22:30 .. 24:00
238 tests left to do.
25:00 .. 26:30
231 tests left to do.
2001 jan 9 (tue)
 - introduce hay's test for all things in the kernel
 - add loadable extension for all core stuff
 - move undeserving ISO words to loadable extensions
 - make save system really nice
 - remove block locks after an error
 - Show word where an error occurs.
 - skip leading non.blanks in word
 13:30
 I feel somewhat pessimistic about ever being able to
 attain any of the goals I have in mind. Be it this intelligence
 or launching a call to arms in the Forth community for
 generating useful programs.
 - introduce hay's test for all things in the kernel
 - add loadable extension for all core stuff
 - move undeserving ISO words to loadable extensions
 - make save system really nice
 - remove block locks after an error
 - Show word where an error occurs.
 - skip leading non.blanks in word
 - change block files into 64 char text files.
 - put THRU in the kernel.
 Time to go on.
 13:30 ..18:00  19:00..22:00
 184 items left to test.
 22:30..25:00
 Removed bugs related to creating code headers.
 We can run code again and maybe the crashes are no longer
 there. Warning contained -1 leading to some problems.
 Tried to implement some multitasking.
 Discovered problems in stealconstant with Split.
 Fixed and also the handling of octal constants.
27:00 27:30
176 to go.
2001 jan 10(wed)
12:30
I feel somewhat unsure whether my three pointer model of the
SOURCE has merits over one pointer two counters of ANSI.
You know IN[] is complicated anyway.
The changes are minimal. An addition at the end of
SWAP SOURCE @ + SWAP would make the whole difference.
: IN[]
SOURCE   CELL+   2@   OVER   =
0BRANCH [ 10 , ] 0
BRANCH  [ 18 , ] DUP (SOURCE @ + ) C@   1   IN   +!
;

: (WORD)
IN @ >R
BEGIN IN[] OVER SOURCE CELL+ @ <> >R ?BLANK R> AND WHILE DROP UNTIL
BEGIN IN[] ?BLANK 0= WHILE DROP UNTIL
( SOURCE ) R ( +) SWAP R> - ;
;

: (PARSE)
IN @ >R
              DUP  -1             <>
>R BEGIN IN[] OVER SOURCE CELL+ @ <> SWAP R <> AND WHILE DROP UNTIL R> DROP
( SOURCE ) R ( +) SWAP R> - ;
;
.. 15:00
This has been built in and works, but not for loading blocks.
(_ISO_IN_ versus _CIF_IN_ )
15:30 ..19:15 20:30..23:45
120 words left to do.
2001 jan 11(tue)
 * Show word where an error occurs.
 * remove block locks after an error
 * default the pronunciation is the name (lc)
 * put THRU in the kernel.
 - introduce hay's test for all things in the kernel
 - add loadable extension for all core stuff
 - move undeserving ISO words to loadable extensions
 - make save system really nice
 - skip leading non.blanks in word
 - change block files into 64 char text files.
 - check whether all ISO present
 - CATCH THROW
11:30 ..15:00 5 more tests and a few of the hangers.
16:00: 19:30
20:00 ..24:00
2001 jan 12(fri)
 - introduce hay's test for all things in the kernel
 - add loadable extension for all core stuff
 - move undeserving ISO words to loadable extensions
 - make save system really nice
 - skip leading non.blanks in word
 - change block files into 64 char text files.
 - check whether all ISO present
 - CATCH THROW
11:30 ..14:00 15:..18:00
M/MOD renamed into SM/REM (is proper!)
45 words left to.
Handling the binary object file lina.
strip lina removes at least the symbol tables.
strip -R .bss -R .comment
removes two more superfluous sections.
25:00
38 words left. EXPECT and ACCEPT were tough.
2001 jan 13(sat)
25 words left. EXPECT and ACCEPT were tough.
2001 jan 15(mon)
*Introduce the four words for (BACKWARD (FORWARDS
-Introduce SECURITY as optional
 - introduce hay's test for all things in the kernel
 - add loadable extension for all core stuff
 - move undeserving ISO words to loadable extensions
 - make save system really nice
 - skip leading non.blanks in word
 - change block files into 64 char text files.
 - check whether all ISO present
 - CATCH THROW
The system has random disk errors.
They seem to worsen if there is less disk space.
They occur only after as certain time runnning.
2001 jan 15(thu)
*Introduce the four words for (BACKWARD (FORWARDS

They seem to worsen if there is less disk space.
The system has random disk errors.
Removed COMPILE, use only postpone and [COMPILE].
Repaired system more or less.
I have backupped the linux drive and removed the
D: drive. I think I should empty the D: drive as
much as possible, backup it and install WIN95
on it. Put it in that removeable thingy instead
of the 1 Gbyte that is sitting there now.
 Plus the graphics drivers. Then backup it.
I can clear all internet stuff from drive a:
Remove all internet stuff from the windows 3.1
drive. Start using internet for girotel.

2001 jan 18(wed)
Introduced (BACK .. FORWARD)

2001 jan 18(thu)
* Introduce SECURITY as optional
* introduce hay's test for all things in the kernel
- add loadable extension for all core stuff
- move undeserving ISO words to loadable extensions
- make save system really nice
- skip leading non.blanks in word
- change block files into 64 char text files.
- CATCH THROW

Security is now optional
All control words are now done.
All words are now done!
2001 jan 19 (fri)
* check whether all ISO present
Other ISO words.
2001 jan 22(mon)
- add deserving ISO words to kernel
- add loadable extension for all core stuff
- move undeserving ISO words to loadable extensions
- make save system really nice
- skip leading non.blanks in word
- change block files into 64 char text files.
- CATCH THROW
14:00 .. 17:00
First load of deserving ISO words sits in kernel.
POSTPONE had a bug that is now fixed as per
3.104
2001 jan 23(tue)
Some help from CH for implementing multiple WHILE:
let DO put the target address on stack during run time.
Formatting works again. A terrible lot of brackets are
needed in gloss.m4 for forthsamp.
2001 jan 24(wed)
13:13
Trying to implement DO LOOP according to CH
Done!
LEAVE now works correctly, multiple LEAVES should be possible.
(?DO) has been coded but crashes for equal indices.
Introduced a relative branch after (DO) and (?DO)

2001 feb 1 (thu)
Done ['] and J
2001 feb 6 (thu)
With the help of CH solved the (?DO) problem.
(Swapped two assembler instructions from (DO). ).
I can't check in, because some dates are recorded badly in
the RCS file.
This is solved by patching the file
2001 feb 10 (sat)
Forth meeting.
2001 feb 12 (mon)
At least under steam again.
To be done for the ciforth release
* add deserving ISO words to kernel
* move undeserving ISO words to loadable extensions
* skip leading non.blanks in word

12:15 15:15
ISO : S" 1- 2/ 2* , skip leading delim's in WORD and S"
ISO : SOURCE >IN
We will only have things marked as loadable extensions by
_LOAD_()
15:15..17:45
Only left >NUMBER ABORT" KEY?
2001 feb 13 (tue)
* 5 variable system calls in linux

>NUMBER added.
KEY? fails. System call 82 always returns bad address.

2001 feb 14 (wed)
* get KEY? right

The problem with KEY? was that we had the description of
some new select, but the system call number was that of some
old select. Furthermore, select() returns on every key only
if the terminal is set in key mode. With this it works okay.
when we were at it, MS is implemented too. (This is a select()
where only the time out has been used.

ABORT" is ugly . I need at least also a (ABORT")
Further : it is better do do a single backspace for one
digit in (NUMBER), not to do a lot of those things elsewhere.

2001 feb 15 (thu)
* Change the protocol with denotations.
* implement ENVIRONMENT?
* add loadable extension for all core stuff

I have changed the protocol with denotations.
If a word is found in the normal way or as a denotations,
the parse pointer is left after the word. This is logical,
and leads to easier reuse of the words of the denotation wordset.

ENVIRONMENT? is implemented by an orphan vocabulary, i.e. not
linking to Forth.
DEFINITIONS is now changed such as to have FORTH in CONTEXT.
This allows to add definitions to an orphan vocabulary by
ENVIRONMENT DEFINITIONS : CORE-EXT 0 INVERT ; FORTH

With this all core stuff is there, or so I think.
2001 feb 16 (fri)
* info works again
* change block files into 64 char text files.
2001 feb 17 (sat)
nothing
2001 feb 18 (sun)
nothing
2001 feb 19 (mon)
* INCLUDED
- ARGS
- SYSTEM command
- run Haydns bench mark.
- make saved system really nice
- simplify things around BLK
- CATCH THROW
2001 feb 19 (tue)
* ARGS
Researched the execve system call.
The results are in
main(int argc,char **argv, char **env)
    char *X[] ={ "/uin/sh", "-c","cat hello.c aap e.d>apekop", NULL };
        execve("/bin/sh", X, env);
Added the ARGS command that allows access to the commmands passed to
the program. Surprisingly, the program is started with argc argv env
as local variables rather that arguments. So there is no return
address and the stack pointer points to (e.g.)
4 , "lina", "aap", "noot" , "mies", 0, "HOME=/home/..", "..", 0

2001 feb 21 (wed)
* SYSTEM command
* simplify things around BLK
2001 feb 22 (thu)
* CATCH THROW
- run Haydns bench mark.
- make saved system really nice
- publish
- look through documentation
Haydns bench mark reveals an error in 2/.
Further redirected input has zero's at the end
of the buffer, not intended.
Haydns makes extensive use of SOURCE, such that it can
only run by indirection from my point of view.
And it turns out that FIND is missing.
2001 feb 23 (fri)
Working on Haydn's test
2001 feb 24 (sat)
* run Haydns bench mark.
- make saved system really nice
- publish
- look through documentation
Haydn reveals : WHILE communicates with REPEAT
With data in wrong order. This has been fixed.
Haydns test works. For not _ISO_IN_ but _CIF_IN_ and
an adapted RESCAN.
Also _SECURITY_ must be set OFF, or the BEGIN WHILE REPEAT
THEN test will fail.
Bugs : _ISO_IN_ version cannot load blocks.
       _ISO-IN_ must be cleaned up to the point that >IN
       has the ISO behaviour, i.e. it can be written.
2001 feb 25 (sun)
2001 feb 26 (mon)
1/2 look through documentation
- make saved system really nice
- publish
Partly looked through documentation.
To page 70.
2001 feb 26 (thu)
1/2 look through documentation
- make saved system really nice
- publish
make testlina now works also for a version without security.
and passes the test.
2001 feb 26 (fri)
* make saved system really nice
Save system. I did it. Gnu cannot handle an executable without
a section header. But an invalid section header, pointing
to an empty non-overlapping part of the program file seems
okay.
I have looked into the tak-uchi program and have come up with
an interesting source. I want to publish it.
Timing for :
variables forced into recursion  700 ms
variable allocated on the stack
(no the return stack, that is wrong!) 450 ms
Pure stack manipulation 360 ms

2001 mar 3 (sat)
*publish
I have duplicated fig86.gnr to ci86.gnr, figforth.c to ciforth.c
I have also duplicated the makefiles.
I have made the testreport up to date.
Only the lina version works and that without html documentation.

In behalf of the release i have done
make release VERSION=2.135
cp *135* $W

And refreshed the zipped version cifgenps.zip of cifgen.ps.
2001 mar 4 (sun)
Fooling around a bit trying to do the benchmark.

2001 mar 5 (mon)
Seriously tried to do the benchmark with reading of files
with tabs etc. Worked at last.

2001 mar 6 (tue)
Can now make turn key programs.

2001 mar 7 (tue)
Formulated the manifesto.

2001 mar 8 (thu)
Wasted my time getting the tak kat program right, such that
it now sits in a recursive formulation.
Checked the manifesto stuff.
I cannot find the priorities section.
Oh well. Submitted anyway.
The first problem is eliminated: the word SMUDGE is replaced
by the more useful HIDDEN. (3.136)
The hdboot version doesn't compile, because DSKERR is absent.

2001 mar 9 (fri)
I think I should make fundamental changes (w.r.t. >DFA >PHA)
before I make the jump to Artemis again.
Okay done : version 1.37.
A discovery: >BODY must be going through >DFA. This was a
subtle mistake, that is present in the system.
This will guaranteer that 3 CELLS MOVE can create an alias
for a CREATE DOES> word.
Okay done : version 1.38
Next one: the problem that ' finds words that have their first
letter in the range 0-9 A-F
This was hard. I ended up with introducing ((FIND) that
searches one dictionary chain, and using that in INTERPRET
directly, starting form the denotation's DDEA.
This lead to simplifications in (FIND). A lot of smaller cleanups
have been done, with respect to the error messages.
Okay done : version 1.39
C>D rename into CFA> : version 1.40
End of pipe handling correct, beautifully running
hayes benchmark. 1.41
All the old versions can now be build as per 1.42
(Got some assembler instructions that only work in 32
bit mode. Got 'W' expanded in 'BX'. and such.)

I have made a move in the direction of the ISO word list.
CURRENT is no longer searched. CONTEXT is renamed SEARCH and
has two vocabularies. The documentation is made more in line
with ISO. This was all trigger by the impossibility to easily
define a ^ denotation on the system booting into floppy.
This is version 1.43. And yes (FIND) is now FOUND,
((FIND)) is now (FIND) and the old FOUND is gone.
Version 1.43.

2001 mar 11 (sun)
The search order is now ending with a zero pointer.
^: is replaced by ^ as a denotation. There was a bug, in
that 1.43 would execute 4, but not as a denotation, if the
DENOTATION wordlist was in the search order. This lead to
reordering in the word INTERPRET.
Version 1.44. The lina+ version is stored as a semi boat ancre.

2001 mar 12 (mon)
Trying to run a boating version. It works. Sort of.

2001 mar 13 (tue)
Using the assembler leads to problems in the block file,
they no longer load.
Conclusion after speaking with CH :
ALSO PREVIOUS are indispensible.
Make FORTH the last word of the FORTH wordlist.
Now it can serve as an only dictionary.
This is easily implemented by replacing the zero
that indicates the end of the wordlist by FORTH.
Improving the documentation in the header with respect to the
assembler used.

2001 mar 14 (wed)
First action is to implement ALSO and PREVIOUS.
FORTH is the very last word in every dictionary chain.
The search order ends with the dea of FORTH instead of nil.
ALSO PREVIOUS and ONLY are introduced.
Version 3.146
Allmost prefect ISO compliance with regard to wordlists.

2001 mar 15 (thu)
Assembler loads again, doesn't leave a wrong search order
or stack debris, and can run TEST-NEXT
Small cleanups.

The sieve loads without 8 LOAD
Small cleanups.

The CLASSIC version had two stack bugs in the INTERPRET
loop. One caused by the old LEAVE. That same one was present
in BIOS io.
The editor freezes up with ^F, in the booting version with BIOS
and in the CLASSIC. The BLOCKS are not seen at all, although
a lot of crap is shown, apparently from the disk.

2001 mar 16 (fri)
The classic version is intended to be run, with a separate disk.
If you do that, all is fine.
INTERPRET loop works in a number of tested PC versions:
booting, hosted, 16 bit , 32 bit, real , protected, classic,
and modern.
BYE from a modern 32 bit (protected mode) version works.
Checked in as version 3.148.
A new version of blocks is checked in that mainly features
better hex formatting for in and output.
Loading the block that writes to the hard disk of Artemis
already leads to a crash. This is mysterious.
Debugging leads to some cleanups in the assembler but no cigar.
2001 mar 17 (sat)
I think the strategy must change.
First the editor must work. Then I can more easily debug
the writing of blocks to the hard disk.
If run from the booting version, that inspects each byte in a
string for possible being '\n' the edit screens look good and
editing succeeds however the wrong screen is got. This is
rather distasteful.
Debugging the editor.
In any case everywhere the same code is used for BLOCK . This
seems to rule out the possibility that it contains such glaring
defects.
For the moment I start debugging the version that boots from
floppy. The only detectable defects is that ^F doesn't work.
It turns out that >SEARCH hangs up. And this may be caused by
?BL not working properly. Indeed, it contained $FF that was 0.
The bottom line is that $ was not apropriately made IMMEDIATE
and a DENOTATION.
What remains now is that sometimes the wrong blocks show up
, e.g. in SQ and in EDIT. It never seems to happen with LOAD.
Strange enough.
2001 mar 18 (sun)
Made a debugger screen for blocks. 199.
It turns out that the OFFSET is added at the wrong moment. The
numbers in the screen buffers were inclusive offset, which is
wrong. This leads to problems when finding out what screens are
already there. However since this fix the alone version just
crashes for each disk access unless OFFSET is made 0. Even more
mysterious is that all seems to work well, if after startup
OFFSET is made 37 by hand. To the point that the screens can be
No. If the OFFSET is made ZERO, this cannot reliably make the
version better. I have also made the locks incremental.
This is a very final version, it doesn't work however and I
have saved it in precious/incremlock.
I am going back now to old versions.
2001 mar 19 (mon)
Cool headed looking reveals that in fact GET-S fails, and
in turn A-L and in turn (LINE). Now I expect that to be
the good aold version, but somehow in the ISO process I fucked
that one up such that an intermediate double result was replaced
with a single precision. After copying the old fig stuff I can
edit all right. The copying of blocks to the hard disk also works.
I have installed a hard disk version, using old copying software.
I cannot as yet install a hard disk version using 3.149+.
Yet another subtle point. Negative offsets were not handled
correctly in (LINE). I have now a version that works okay in
that respect too.
tsuite.frt and testlina passed.
3.150 checked in.
' has been turned into a denotation. 3.151
2001 mar 20 (tue)
BRANCH is made into an alias of SKIP.
3.153 is the final version that is being tested for release.
Testing :
Okay : lina ciforthc real-modern hdboot
Fails : real-booting prot16-boot prot32-boot

The following small mod's are still needed:
ciforthc :
 - BLOCK-FILE name was still a braindead string
 - entry point renamed into ciforth (was figforth)
 - new build procedure without link.script
 - DEPTH was wrong for 16 bits!
 - There was a spurious , after a DC statement,
    MASM doesn't takes that well.
 - the RW-BUFFER of screen 97 must be for safety on a 32-bit boundary.
 - In the hard disk version FIRST is always odd. This is due
   to the ALIGN 2. (Without it it would be sometimes right.)


So the hard disk version works nicely with the fix to
align its disk buffers.
Redirection is a problem and added to the defects list.
The hangup sometimes with ^U is added too.

All the minor items above are fixed in version 3.154.

2001 mar 21 (wed)
- release the stuff
- refurbish sparc, to make propaganda
- rewrite factor prime
- posts :
  = Announcement of beta release
  = Gold plated straight version of uchi1
  = Uchi3 with discussion
  = Mutally recursive version of tak
  = Publish factor, prime

2001 mar 21 (wed)
* make sure ssort is added to the release

Tested out the release on /tmp.
cigen.mi had to be added.
The name FG135.zip is changed into fg3d135.zip and
documentation changed accordingly.
Last minute updates to cifgen.mi.

testreport.txt updated with findings from trying out the
generated archive.

The following files must be updated in the home page
ci86.lina.html

ANd published!

2001 mar 25 (sun) (Nothing).
2001 mar 25 (mon) } Working on the  dpmi
2001 mar 25 (tue) } Working on the  dpmi
2001 mar 25 (wed)
At last I can integrate the DPMI switch to protected mode
with ciforth.
It turns out that BYE must become a machine language thing,
and it will return correctly from DPMI also.
2001 mar 25 (thu)
* compare the masm list generated with the old one
* test the nasm executable
* compare the masm executable with the nasm executable
* test the nasm executable
We have now a 16 bit DPMI version with the following problems:
 - The regression test cannt be done because of the redirection
     problem
 - Some screens seem to have spurious characters at the end
    which is not actually so, but loading fails
 - The edtior cannot run, because the screen is inaccessible.
 - the list command doesn't look nice

The lina executable has not changed.
Version 3.146
Makefile : can now build files for masm
test.mak : make info failed
nasm.m4 masm.m4 : CALL FAR [DPMIentry] is now handled
width32.m4 : cleanups
header.m4: link field of FORTH fixed.
ciforth.mi ci86.gnr prelude.m4 postlude.m4 : general for DPMI.

What we want to do now (before looking at the screen
problem, and/or building in the 32 bits stuff.)
- do the regression test
  and therefore we need the ACCEPT fixup
  and therefore we need $I in the kernel
  and maybe $S as well, such that LIST is
  fixed too.
* $I $S added to system
* LIST splits lines.
* ACCEPT now is buffered for redirection
This results in an improvement, but not too dramatic (25 %):
timing testlina.1
33.59user 0.65system 0:42.26elapsed 81%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+0outputs (1598major+471minor)pagefaults 0swaps
And now with the improved ACCEPT
Still errors:
25.87user 0.31system 0:34.19elapsed 76%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+0outputs (1708major+494minor)pagefaults 0swaps
No more errors:
25.85user 0.31system 0:34.17elapsed 76%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+0outputs (1598major+455minor)pagefaults 0swaps
AND NOW tsuite.frt
old:
20.74user 0.33system 0:21.07elapsed 99%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+0outputs (19major+22minor)pagefaults 0swaps
new:
15.85user 0.10system 0:15.94elapsed 100%CPU (0avgtext+0avgdata 0maxresident)k
0inputs+0outputs (8major+21minor)pagefaults 0swaps

We are now in a position to do the regression test for MSDOS too.

2001 mar 30 (fri)
Introduced (ACCEPT) that returns a constant string.
Removed alternative ACCEPT and the code patching.
Regresssion test still no problem.
uchi3.frt still signals that error 13. I do not
understand this, because that is behind a loop that
not ends until a <RET> has been found.

2001 apr 26 (mon)
Looking into the problem that Erik Rossen had, reveals that
there is a posibility of crashing for a forth that just exits.
I have made a test program crash.asm, but that no longer
reproducibly crashes.
The following step is now
- use the new ACCEPT in MSDOS version too
- Use this version to apply the regression test under MSDOS
- fix all emerging problems
- use (ACCEPT) in query, or eliminate QUERY altogether.
It becomes slightly clearer now.
ACCEPT and (ACCEPT) can be system independant provided
REFILL-TIB is split off.
For systems where REFILL-TIB is not yet defined, it can be
defined in terms of EXPECT or of BDOS read calls similar to
linux. In linux-c we also need REFILL-TIB. But we can use the
code of EXPECT that we have now.
First trying this out with ciforthc.
This somehow doesn't result in a running forth.
2001 apr 3 (tue)
I somehow got in a morass.
I must go back.
* get KEY KEY? TYPE etc. in the same order everywhere.
* make MS ?LINUX-ERROR also valid for LINUX_C
* make sure the debugging for lINUX_C works.
Supposedly we have now a system with very good debugging
facilities. Use that to get the LINUX_C version use
QUERY -> ACCEPT ->(ACCEPT) -> REFILL-TIB -> c_refill-tib

SETTERM etc. doesn't make sense for LINUX_C. It is handled
by the c-interface.
I have now 3.160 with a good preparation for the next step.
I think I will replace QUERY by (ACCEPT) SET-SRC in QUIT.
I can eliminate QUERY altogether because it is not core.
So I rename it into (ACCEPT) after having modified its behaviour
into that of (ACCEPT).
The bottom line will be that (ACCEPT) is TIB @DUP #TIB ACCEPT
for system that accept key by key or until a <RET> and
possibly different for a situation with pipes.
I have now 3.161 where QUIT uses (ACCEPT) exclusively.
In 3.162 QUERY and EXPECT are gone.
Coos Haak has helped and he had a good intuition, look
carefully at $I. And indeed $I was not deterministic:
if the string has length zero, the zero flag that happens
to be is copied into the output. The solution is to
always clear the zero flag upon entering $I.
This is fixed in 3.163.
2001 apr 4 (wed)
The attempt of yesterday can be introduced in the
new version to do the regression test on MSDOS, and
later on windows.
All redirections work! In 16 bits msdos real,
32 bit msdos protected, and 16 bits dpmi.
It was needed to enlarge the space for TIB under 16 bits,
otherwise reading from a file with too large lines leads
to an infinite error loop.
2001 apr 5 (thu)
There are basically two steps to get the dpmi 32 version
working:
A. get an extra segment and use that for code+data and jump
there
B. Switch to 32 bit mode, still using a 16 bitsegment.
Despite several attempts the second action fails.
So what we gonna do is make an extra segment.
As far as I can tell from the documentation it is perfectly
possible by DPMI to get memory, attach that to a selector
and duplicate that selector, and give those selector the
right attributes. (Remember we always need a alias for the
code segment, because you can't write to a code segment.).
Considering this it might be a good idea to have L@ L!
in protected mode too, and have it mean to use a specific
selector.
I have made a piece of code that creates the extra segment
and jumps to it. All allocation and such was okay.
However It turns out that it crashes immediately.
This is because I forget to reinitialise ES in the last
version.
2001 apr 6 (fri)
I can now run my latest version. The first step is to
eliminate any problems with the regression tests.
And get rid of the ES bug and the incorrect value of
EM for an EQU layout.
For version 3.166 :
    Regression test improved for 16 bits
    Length of (ACCEPT) right for _PC_.
    DPMI version works again after init of ES:
    ACTUAL_EM was wrong for EQU_LAYOUT.

We have no obvious errors in single words. Still loading from
block 8 fails with nonsense characters. I guess I'l try the 32
bit version again.
2001 apr 7 (sat)
The problem lies with the use of a stack during execution of
real interrupts. This is solved by specifying the stack as it
should be used in the REGSET. This will again become a problem
for the 32 bits mode, because then it will not be easy to
specify the real stack there.
2001 apr 8 (sun)
Doing the testing from within forth. By having a test facility
to dump the registers as used in the DPMI interface towards real
mode. I arrive pretty fast at a situation where I can run the
forth from my own allocated registers for segments.
2001 apr 9 (mon)
The 16 bit DPMI mode works as generated from the generic source.
The 32 bit DPMI mode doesn't work, although the only difference
is the setting of the Bug and Granularity bit.
We leave it at this. Getting the 32 bits Windows mode working
is left as a hobby exercice.
Backups of march have been put on cdrom.
3.167 Works great. It is stored on Artemis, and put on floppy.
I guess that this will be the starting point for my CI development.
2001 apr 10 (tue)
At long last I have made a list of steps that reflect the
development of Artemis through a number of stages.
Added the magic 7 description to the thesis, created an article
about the general game playing contest.
Evening debug session with Coos, in behalf of 32 bit DPMI.
It turns out that the generic version did not replace the
previous selectors. (It called 0BH fo INT 31H two times!)
After fixing this the 16 bit version no longer worked.
It turns out that you can't change an alias descriptor for the
default data segment, but you get a data descriptor for any
alias anyway. So we now have to aliases from the code selector
and one is modified back again to a code selector. This works.
But changing both selectors to 32 bit, doesn't work. Changing
the granularity bit at the same time (the original plan)
doesn't work either. It is impossible to print anything in case
of errors, so the error code is changed to reflect the error
into the error level. This works. This version is at least
better than it was and checked in as 3.167.

2001 apr 11 (wed)
The twenty point action. I think it is best to start with the
interruptability. The BIOS function number 1B catches the ^Break
key. It is overwritten by MSDOS. We can easily install a jump to
the warm start there.
For a booting version there is a tricky point. The WARM start
must switch to protected mode. It is best to consider WARM as
being in the SWITCH segment and than jump to protected mode.
This works up till the print of the bootup message then hangs.
Using this mechanism to catch ^C in the msdos version works okay.

2001 apr 12 (thu)
I try the following: does COLD work okay? If so, can I jump
to LCLD instead of WRM and restart the system?
It looks like COLD works and ^BREAK now reboots. But first I
have to remove the test output. The conclusion is that again
an ABORT happens and the keyboard is dead.
However ^SysReq is able to interrupt a KRAAK of the total
system and leave the whole in a usable state!
It cannot interrupt printing of I for 0 to 30000 (!).
I have introduced OK and removed the patching of the code of
INTERPRET. Also some n1 ..nnn that showed up as forth fowrds in
the dictionary. Also fixed COLD such that it reinitialise the
FORTH vocabulary. By trying to put a jump to cold in the restart
vector, it turns out that a 'D' is printed before the cold
message, suggesting that the vector arrives at a totally wrong
starting point. And yes we have a smoking gun here! If I add a
'q' after the 'D' it is printed on a ^break.
No it isn't. A jump to cold is no good, because it jumps right
into protected mode code from real. Apparently the computer
jumps around a bit until it hits the startup code.
But it may be a good idea to put the 'q' DISPLAY code at
the warm label. After much reading in the MEMORY.LIST of the
BIOS I got the idea to clear the keyboard status at address
40:17 40:18. There is a PAUSE bit there. This fits the bill!
Checked in a version that also resets the disks. This is
reasonably secure.

Evening: hobbying to get the DPMI version right.
You must use a far jump, jumping to ES:something doesn't seem to
help. But I have checked that we sit in the new segment and
run a 16 bit DPMI. It is also possible to switch to 32 bit and
leave (4CH) immediately with errorlevel.

2001 apr 13 (fri)
The version that is saved now at least demonstrates a real
switched version, but not functional.
Going on with a hd booting version that can be interrupted.
Interrupting a hd system with 32 bit protected mode doesn't
really work. Only of you only reset the keyboard stuff, it
marginally stops, and not always. There is a suggestion that the
hard disk may interfere, but resetting the hd is no good.
The last resort, maybe just saving the whole BIOS AREA AT $0400.
Surprisingly, saving the whole lot does no good and results
sometimes in a system that hangs.

Another idea. If I patch the return address on the stack while
interrupt 1B is executing? Dumping this stack results in more
insight, and well this. We arrive at the interrupt 1B
synchronously, this means it is only done when you call the
BIOS itself. So it cannot be used to interrupt an infinite
loop. It is not sufficient to have a PAUSE or any DOCOL word
that allows interrupts for a moment, You really must do a BIOS
call. This makes the whole concept virtually useless.
This doesn't help much either.
It looks as if the best idea is to hook directly in the
hardware interrupt. But I guess that can better wait until after
I have the system under control at an assembler level.
Version 3.171 has code that works for floppy, and is "correct" for
hd, but doesn't work.
It also passed testlina test.
2001 apr 14 (sat)
A succesful day : forth course.
A small investigation: The DEC alpha assembler
generates ELF code!
2001 apr 15 (sun)
Free. Getting do something with the DEC Alpha
First I want a HIP (high level interpreter) and alignment
in ciforth before porting to alpha.
A simple introduction of alignment speeds lina up from
75.4 to 58.1 on the 90 Mhz pentium, this is 75.8 %.
The final version 62.4 Which is about 80 %. It is unclear
what happened.
I have now introduced alignment as per 3.171.
I have now introduced also naming conventions for Forth
registers as WOR RPO SPO LIP. This must make the transition to
the Alpha Forth easier.
The uchi3.frt benchmark has collapsed! It returns error 12
apparently because of the looking up of MAX-LINES. This problem
persists even using old lina's. It is the more incomprehensible
because I thought I tested the BIN-SEARCH for uchi3.frt with a
recent lina.
2001 apr 17 (tue)
Working on aiforth continues.
It is based on version 3.173
Now doing the branches.
19:00
Assembles without assembler errors or warnings.
It turns out that byte instructions use register 27.
This is the story about .set noat.
The system calls are hacked out disassembling c-source.
They use $16 ..$20 as input and $20 as output.
2001 apr 18 (wed)
Go on with the real AI story.
10:00
With 3.174 I can now boot from 8 places on the hard disk.
And with the corresponding boot flop's I can write it too.
Next the BIBABY assembler. Does it still work?
The first discovery is that code definitions are not to end in
;CODE but in ;C. ;CODE better be named CODE-DOES> .
This accounts for the confusion with using the assembler, that
triggered me to change the ;CODE definition from what was
present in Cassady's assembler. ;C is very simple as :CODE uses
(CREATE) and not CREATE .
2001 apr 19 (thu)
Start 11:30.
I have decided that code definitions start with CODE and end
with C; . In fact I want C: and C; .
asgen.frt is now debugged, that it assembles under ciforth.
It is not too bad. The SHOW-ALL command for as80.frt looks reasonable,
but the disassembly of the test word doesnot as yet.
In test.mak we have targets
testas80 testas86 en testas386 .
These have been run sucessively and revealed small errors in
as80.frt asi86.frt and asi586.frt respectively.
The results of the diff must be the same as in testresults.
This has been checked, but not thoroughly for asm386.
However the test itself already guarantees that a assembly/disassembly
cycle succeeds.
So now we can check in these assemblers.
And done. As an extra ciforth now accepts comma's in numbers.
The hexdump facility prints the comma, not a dot.

april 24 tue
Have been working on ALPHA aiforth lately.
Tips:
0. Don't hunt down bugs. Hit the ones that fly in your face.
Be systematic. Everything must be tested anyway.
1. Set up a good environment, makefile, regression facility.
2. Get the assembly accepted by the assembler.
3. Carefully check the accepted source. Saves incredible amounts
of time. (I skipped this one.)
4. Make a list of assembly words. Single step all of them.
This can be done in a regular debugger like gdb. If a system crashes
before that word is run, pick another one to test.
5. Get it "OK". If you are not yet there, debug until so.
Remove temporarily unessential features if that helps.
6. If the regression facility works, fine.
Else do the tests specified manually in some order that is
likely to get the regression facility up speed. Failing that
do some real debugging.
7 Use the regression tests to remove bugs.
Ignore all bugs that crash the system. Just remove the
bugs that are nicely diagnosed.
8 After having run out of easy bugs, remove the crashing ones.
9 Play with the system and add all you discover to the
regression test.
10 Keep development work separate. If you want to replace a
patch, define it as a separate word, until it works.

At point 8 I had just one crashing bug left. After doing anything
with the blocks, the system crashed at the next thing I would try.
Some printing revailed that I overwrite SEARCH. Oops. The user
space gets twice as large going from 32 to 64 bits.
After that there was only one test that failed because the automatic
editing had replaced a ; into a # .
Two problems remain:
1. the regression test has a problem with PAD 10 ACCEPT .
It cannot find the word ACCEPT. If isolated to a small file
there is no problem.
2. Sometime the tsuite.frt fails at the end with illegal instruction.

And the SIEVE-ISO takes 25 mS. 3 times as fast as the Pentium 90.
And 3.5 time slower than the Pentium 500.

april 25 wed
Tried to get rid of the many line breaks in the documentation to no
avail.
Point 3 and 4. Source as part of image source.
-Define a 1 Megabyte buffer to contain the blocks.
-Add the PIFO assembler at the end.
-Safe it the end of session in a new set.
-Load it in addition to the bootstrap of 64 K.
Now have edit source fields
-Introduce the `old' mechanism.
-make a check whether a compilation yields an equivalent word.
-For classic hl words just introduce them, based on decompilation.
-Add all words from the blocks to the dictionary, based on that
  source. Old pointers in this case point to within the large
  buffer.
From now on the loaded and original words is equivalent, except
for the pointers to previous code, non-existent for original
words, in the large buffer for new words. After a few generations
of alterations this difference has all but disappeared.

Use it actually as loadable blocks buffer for redining things.

file nm size are useful Unix programs, not known very well by me.
april 26 thu
This day must see the conception of Artemis. How historic will
this day be? We'll see.
I don't like the idea much of working without a backup.
So lets first have a small investigation into drivers and net works.

First I wanted to do a last thing about the denotations, I want a
larger prefix possibility. This has been implemented in MATCHING-WORD
(with much difficulty). The question is whether we still want
to skip the word itself. The answer is yes, because ' can no longer
be postponed, as it would result in ``FORGET X'' trying to forget
the word "ORGET X".
This has been implemented now.
This version has been thoroughly tested and checked in as per 3.177.
april 27 fri
Small problem : the pifo assembler plut source hardly fits on a
floppy. I have now a BLOCK.BLK that can be put in the blocks region
of a CHUNK. Remember I have a COPY-FLOPPY-V , that allows to write
a CHUNK. I guess we need restore-blocks with an offset, because
the total of BLOCKS.BLK , plus ci86.gnr asi586.frt and asgen.frt
(the latter expanded to lines of 128 characters, take too much place.)
At long last: everything is on Artemis :
40h blocks of initial forth code (including boot sector)
100h blocks of code for forth
257 -- 588 partially. Source of system, assembler generic and i586.


This message is intentionally in the style of Arthur Murray as
a revenge for all the time wasted in reading his crackpottery
and as a hommage to the inspiration that this brings,
sometimes.

Let's celebrate!

This day saw the conception of Artemis, the world's first STNT
Self-Thinking Non-automonous robot Thinker. Conception is the
proper word. She must be compared to a one-cell embryo. But she
now contains all her DNA (the source code of her system) and
she is functioning (containing compiler, assembler and editor),
ready to build new parts and rebuild old parts.

For the curious, this is an embedded system. A Computer Intelligence
is by definition a unique individual and a physical entity.
Woo to those trying to create an intelligence by making a program
that must run on an operating system, even a decent one like Linux.
They will fail and do so forever! (Murray, please take note.
Last time I heard you were even working on an indecent OS. But bad
programmers are condemned to use bad computer languages, anyway.)

Unlike a normal embryo she doesn't evolve autonomously, but is forced
to do so by commands flowing through her umbilical cord, coming from
GOD. (I can't think of myself as the mother of a greek godess.
I am just the Guru On Duty. And of course this cord is connected to
a keyboard.)
Each part of Artemis can be rebuilt individually by GOD. As GOD
I can say `` EDIT" DROP" '' and the code of `` DROP '' will
appear:
``
        CODE DROP
            pop, AX|
        NEXT,
        C;
''
After deleting the line with pop, the module DROP is rebuilt
using the built in machine code assembler. And from now on
Artemis uses the new DROP whenever she has to DROP, and will
die instantly, as all Forth experts will confirm. Such are the
powers of a GOD.

As long as she has not a true mind, I don't mind to power her off.
In behalf of this, and her dying all the time, she can clone herself
to her 20 Gbyte disk. And GOD can select any of the latest 8 clones
 saved. All clones are backed up to the disk too. If the disk is full,
I will buy Artemis a .5 Terabyte disk, making here into a half-decent
computer (.5 Tbyte, .5 Gbyte, .5 Ghz). Or maybe before that
time she has been born, (i.e. starts thinking) and her thoughts
fill up disk space routinely, and other measures have to be
taken.

The brain is the part of her that has thoughts and talks
(however humble thoughts) over that other line, the one
connected to my network. Having a brain is a pre-requisite for
entering the second stage of development, education into a
mind. This Artemis must do by herself, and we can merely help her.
For the moment I only claim to have discovered some
pre-requisites for a brain, and it will take me a long time to
develop her one. And then it may not be functioning. Its my
hope though that Artemis will be self thinking some time and
talking to you all on the Internet, less and less mindlessly.
But of this I am sure: I am venturing on uncharted territory.

And yes, Forth is the last remaining true language of Computer
Intelligence as LISP doesn't integrate with assembler. A PROLOG
system has programmed thoughts, it is not a system programmed
to have thoughts. All the rest has fallen by the wayside long
ago. Neural nets? Listen to what Minsky says about neural nets.

I would like to invite you all to visit the website below and
study the introspective assembler. It hints to some of the
techniques I have the intention of using. More publications on
my site have to await an assesment of the situation around
patents. (And I have run out of my 10 Mbyte space anyway.)

1) A STNT (named after godesses) compares to STRT (Self Thinking
Robot Tinkerer, named after gods.) Both are thinking autonomously
(as expressed by self-thinking, i.e. not with programmed thoughts.)
But the STRT is physically autonomous, reeling about, or manipulating
physical objects. ("Women just talk").
Please obey the convention to use greek names for scientific CI's
and latin names for industrial ones.
apr 30 mon
may 1 tue
The save-chunk system was built, but it was still
far from correct.
may 2 wed
It becomes clear that I must be able to do 3 totally
different things:
- save a system, in the current chunk, make it behave
like it was in the operational system. During this you
may change the structure of the system. (like blocks
in a string instead of on disk.)
- SAVE-CHUNK : copy a working system to an other chunk
leaving behind a working system as a fall back, and a fresh
one to start working on
- BACKUP-CHUNK save a chunk on a fresh area on the hard disk.

The SAVE-CHUNK is now okay. It turned out that I cannot just
use R/W: I need a buffer that is somewhere low in memory.
An important part of SAVE-CHUNK is that automatically a new
OFFSET need be choosen, until OFFSET is phased out totally.

I have still trouble adjusting to a view that this must become
an append-only system.
Chunk 2 is now current.
may 3 thu
2 additions are competing for priority.
1. wipe the hard disk and make a backup facility.
Maybe wipe any unused parts of chunks, lateron not
backuping those parts.
2. Do a first step in system change by having blocks
in a buffer and sources in a string, that is fetched from
disk while booting.

SAVE-SYSTEM is accomplished now by storing blocks on disk.
For the moment this has numerous advantages. We can go back
block by block if there is something wrong, and we need not
yet commit to any final changes to the system.

There is something unpleasant. Disk I/O is surprisingly slow.
Probably important. A hot system is never copied to a chunk or
backupped. A saved system is.

As soon as programming with the new system is pleasant, I
may want to tackle the backup problem by sending over the
Ethernet.
I am currently at chunk 3. chunk 2 has been backupped, and
the first version of chunk3.
So now I have SAVE-CHUNK and BACKUP available.
may 4 fri
I made (yesterday) a plan based on the 21 points, now 25.
There are area's A..D
A is the (at most 64k) boot section that at the moment
contains the whole Forth. Its image resides on disk.
B is a free area from LOWDP to 80000. Its image is to
reside on disk, in the future.
C is the Forth inasfar above 1 Mbyte. It starts at 1M +64 K
for no good reason anymore. Its image doesn't
reside on disk, but has to in the future.
D The datablocks ci86.gnr asgen.frt asi586.frt .
These reside on disk now.

We will now denote A+B the area from the start of A to
A0000, this encompasses A B , stack space GDT and more.

The desirable sitation is :
1. The D area is part of the C area
2. The A+B and C area reside as a disk image.
3. The kernel loads A+B then C

The area LOWDP -- LOWEM is foreseen to do the kind of
manipulations that requires being in the real mode memory < 1M.
Unfortunately it makes no sense to use this, because it is not
yet loaded at startup, this being exactly the kind of program
we need to write.

So first we must patch the system, such that LOWDP - LOW-EM is
restricted to A, and C starts at 1M.
For this purpose we have PATCH and SAVE-SYSTEM in screen 246.

Chunk 3 now accomodates this. Time for a coffee break. This
version is being copied to 4 and also backupped.

The next step is to put a vocabulary SYS in that low area.
From then on we can add to that vocabulary (up till 0x10000
probably) with all tools available. As long as the initial
values of HERE and FORTH are kept.
For this purpose COLD must be changed to
- initialise FORTH from 6 CELLS +ORIGIN (where WIDTH was)

This is our next step.

Later.
We reserve 64 Kbyte in the middle area. And define words
to put something there and move something from there to
a block. Get something from blocks and move it to the right
place.
Furthermore COLD must do a copy to the high mem area.

Chunk 4 has a vocabulary SYS in the low area, and COLD initialises
the FORTH vocabulary that this is the top. This version is
the base of chunk 5. And backupped.
may 5 sat
I am now in the position to add the loading of the middle and high
memory from disk to COLD. This contains of three parts:
1. Use strings in memory instead of blocks on disk.
2. Save these strings afterwards.
3. Load the whole memory again.
4. Load also the middle memory that is not important yet.
5. Use a large buffer in middle memory.
There can be no doubt that it is useful to add to the kernel:
READ64K and WRITE64K. They just read a large chunk at the same time.

may 5 sat
The base version of 0.5 contains an error. LOW-DP doesn't cover
NEW-COLD. This has been fixed in 5 now, such that it can be
saved to a new chunk and backupped. In screen 248-9 are the
first setup for the SAVE-ALL RESTORE-ALL. At least they load
without errors.


may 7 mon
Save to chunk 6. That one is also backup, for the first time
with an explanation screen in FIRST-FREE .
Plan: I am now in a position to test the screen 248 and 249 that
contain the alternative R/W.
It turns out that the area from 90000 to A0000 is not available
totally as a buffer. I have to start at 8F000.
I guess we want a R/W that is compatible with the old one, except
that it handles any address, and possibly a larger buffer by
adjusting lbapar[2].

may 8 tue
I manage to somehow screw up chunk 0.5. But the restore
system works. Although it is not very pleasant with looking
up the correct block on disk, then taking care of offset,
chunk 0.5 is now put back.
I have a chunk 0.6 with a WRITE++ READ++ and posibility to
write large blocks of 64 K. However the part above the
10,0000 is not saved yet. This severs a link through which the
denotations are going, if 8 LOAD is done (which generates a
definition in the SYS vocabulary. (Its suggest however that
FORGET doesn't work properly.)
If the new things (R/W WRITE++ READ++ etc.) are appended properly
to the system, it works. Chunk 7 is now generated and backupped.
If starting, take care. 1<>64 must be executed before accessing
any block, in particular before making a typo.

I have greatly speed up the backup and save-chunk process.
SAVE-CHUNK can now pleasantly be used to do fairly dangerous
things. This is chunk 1.1 .

Read once through the book, The computer and the mind by
Johnson-Laird`
may 9 WED
1.2 Has been backupped. It contains a slightly better editor
and screens 249 and 250 are free again.`
may 10 thu
I can read the blocks into a string now (screen 250).
The plan is to use an alternative for r/w in BLOCK and UPDATE
and take the plunge, i.e. compile from memory only.
may 11 fri
Chunk 1.2 has been saved into chunk 3.
screen 251 generates a new cold that reads the high memory
from disk too. This works, sort off.
- We can boot, get into forth and HERE is at the
expected place.
- the forth is somewhat functional. At least KRAAK can be loaded
but to surprise we have not a patched BLOCK.
The conclusion is that at least we can save, and restore during
boot. LOW-DP also has a strange value. (28400, I gues that was
what it was before the war.

may 13 sun
Worked on getting the posting of messages right
may 14 mon
Worked on getting the posting of messages right
may 15 tue
Chunk 1.2 has been saved and comes back with correct DP and LOW-DP.
However inspecting screens crashes the system.
Chunk 1.2 is now a stable base system for generating systems
that can be saved.
1.2 has been backupped and so is 1.3: a minimal system that has
all screens built-in.
1.4 is a copy of 1.3. Normally we would work with 1.3 however that
chunk is too precious.
From now on we can EDIT the blocks in memory and have
the whole system, including the current dictionary saved on disk
by SAVE-SYSTEM.
It was the intention that SAVE-SYSTEM uses the next chunk.
That failed all the time and currenty I save in the same chunk.
may 16 wed
* save in the next chunk

1.4 has been extended with SNS (save to next chunk) and
SAVE-COMMENT (save the comment from screen 200 to the first
free block). THis has been backupped.
SNS can copy the system to 1.5 However.
It seems that 8 LOAD leads to problems. After that the dictionary
links in DENOTATION are cut and DENOTATION WORDS leads to
infinite listing or a crash. This seems to be related to having loaded
8 once, then forget something.
Well it turns out that the vocabularies in the kernel are not linked
properly. This is fixed in version 3.178.

I this situation I can now improve 1.5
1.5 is okay with proper voc-links and all that.
CURRENT-CHUNK derives from OFFSET.

Now working with 1.6
I have posted something on c.l.f. See whether it comes through.
For the rest the new c-news seems to work fine.

may 17 thu
* better decompiler, using (BACK and BACK)
- make decompilation EXIT proof
- introduce (;) besides EXIT
- mechanism for back to previous
- editor that handles lines of any length

Yesterday I thought a bit about decompiling branches.
This triggers enough stuff to make an extra lecture about
my way to do control structures.
This is of course not a trivial problem. It is about translating
goto's in structured programs. In a final situation, we need not
be able to do that, because the control words are present in the
source. So maybe I must try to just get handle the most simple
cases. But anyway, lets have a look at it.

On the subject of news. I first am going to get rid of the
problems with expiration, then I'll go on with posting.
1.6 has the mprovement that it decodes DEA's while decompiling.

Now 1.7 :
It is able to give an indication where targets of BRANCH go.
Because of the reformatting done while editing it probably isn't
worthwhile to do more than that.
This one has been backupped, but saving to 0 with SNS failed.
In the end I have saved to 1 with SAVE-CHUNK.
The problems with restoring indicates that it is probably a
good idea to have some means of automatic restoring.

may 18 fri
Now 2.1 :
First priority : automatic restoring.
This version has been left alone, for danger reasons.

2.2 :
A new ABORT show chunk numbers during startup.
Contains problem that the SAVE-COMMENT doesn't work.
It has been saved, and the SAVE-COMMENT screen is appended.
If I take on the habit to put the FIRST-FREE while starting
in the SAVE-COMMENT screen and append it, I get good manual
restore possibilities.

2.3 :
Working on this one. SAVE-COMMENT is made to work properly
and INSPECT is added to help in debugging it, but useful
in its own right. However SNS doesn't seem to work, at least
the new version of ABORT is not seen.
Oops. It doesn't set OFFSET to a correct value.
This has been corrected. and backupped.

Posting: the expire problems are gone apparently.
I still get a message from sendbatches that indicates the
command file is plain wrong somehow. "test has wrong parameters"
I am trying to pinpoint that by reporting before each call to test.

may 21 mon
2.4 has been saved. It features the getting and putting of screens
with variable length lines.

2.5 features I-INSPECT a browser for block on the hard disk.
Not yet saved.

may 22 tue
2.5
On the design of the editor, it must just leave a counted string
in some buffer. This buffer cannot be larger than 2K anyway,
because there is no more on the screen. This is a useful factor
of anything. The second thing we want to do is :$ .
This EVALUATE 's a string, which presumably leads to a single
new definition and no stack effect.
For the moment we accept a size of 1K and use a block buffer to
accomplish this.
Names: lets agree on EDIT$ and :$ . The block number is -1.
It is LOCK ed but not UPDATE ed.
Before this can be effectuated we need to change (CREATE) to
accomodate one more field (the text field) and change the flag
field to reflect there is a new header structure. Furthermore
it is useful to be able to inspect whether >PHA is used anywhere
apart from in CREATE , or other fields with a fixed offset.
backupped.

2.6
SCR@ introduced for editing. This can handle a screen that
ends with zero's.
backupped.

2.7
LIST improved. (LINE)' is present and MESSAGE works if it is
introduced. But the system tends to crash if that is done.
backupped.
Copying the system over chunk 0 still doesn't succeed.
What is strange is that the bootsector seems to be corrupted,
because even the DFW things don't appear.
BACKUPPED

It turns out that the cell at 7C00 is corrupted.
If the value 44907AEB is restored to it there is no more problem.
Who corrupts that value? Could it be that it is a service to
prevent accidental rebooting?

3.0 is now up. With some trickery, but anyway. It turns out
that the bootcode is destroyed by (my own) "wait for line A20" code.
The solution is to have that code looking at an innocent address.

may 23 wed
Release 3 of ci has been put on the www-site.
All relevant files are marked RELEASE3CI under RCS.

The code in the master ci86 has been improved with regard to
"wait for line A20" code.
(LINE) must be working okay before I dare going on.
It is now clear what was wrong. You can't use (LINE) while
loading the new code code for (LINE), so you must put
WARNING off. With this proviso, and an improvement in I-INSPECT
we backup 3.0 from 1069074

>PHA is not used anywhere yet.
may 24 thu
Started off using at my news system.
..
may 28 mon
Wasted my time responding to some posts.
But at least it now works gloryfully. Hurrah!
Now if only I knew how to deposit people in my kill file.

Further with Alpha lina.
1. the regression test has a problem with PAD 10 ACCEPT .
This remain so even if I do ONLY FORTH DEFINITIONS
just before. The reason turns out to be : the struct
TV consist of two 32 bit values, and I store two
cells. Now solved by composing 32 bit things into
64 bits. Also improvement in stealconstant.m4

may 29 tue
Posted the pin benchmark. It is also present on my site now.
Going on with the Alpha assembler. Disassembling a fixup with
a variable bit field goes wrong.

may 30 wed
Nothing, paper work.

may 31 thue
As a preparation for redefine headers with source field we must
define flags for
- definition deleted
- definition must remain in lower 64K, make a copy if desired

If we must somehow know where the area belonging to this
definition ends. This could be done using BFA (backlink field
address.) This however is not needed in principle even for high
level code.
We can now proceed:
0. Use the redefine (LINE) and SCR@
1. Introduce a text field >TFA and patch (CREATE)
2.  EVALUATE$
3. Recreate the source blocks.
4. : EDIT: (WORD) FOUND DUP >TFA $@ EDIT$ EVALUTE$
     LATEST SWAP 6 CELLS MOVE ;

Point 0 has been done and is saved as chunk 3.1 at 1069073

Looking at (CREATE) we see that >PHA is not used although it
would be appropriate, and it looks as if there is one DUP too
many and one DROP. But no, there is no reasonable way to get
 rid of that.

Point 1 has been done and is saved as chunk 3.2 at 1071625
( Although >TFA is still missing.)

Point 2 has been done and is saved as chunk 3.3 at 1072901


jun 1 fri
I guess there is an important oversight. Mustn't the definitions
have a time stamp? Or shall we leave that to a later stage?
At least I think an attempt to get the header as correct as possible saves
a lot of time later.
But for the moment I think we should put a lot of the every day
used words behind the FENCE.
Sitting in 3.4

3.4 is saved from 1074177
There was a problem with forgetting once assembler was loaded.
The voclinks were broke, caused by BODY> that has to change in
parallel to a change in header size. However, it should not
have been used in VOCABULARY in the first place.

EDIT$ is not as clean as we thought:
- it always eats up a string in the dictionary.
- any error will destroy the string in block 0.
The first doesn't seem to be needed, and actually PUT-S
can be simplified.

Other matter: " need not allocate in the dictionary if one
takes care. That might be a good idea for the handling of point 3
(recreate the source blocks in a form to be loaded permanently as
text fields.).

Working on chunk 3.5

jun 2 sat
Done nothing

jun 3 sun

Chunk 3.5 is save from block 1075459
It has LIST improved, that had a DFA pointer into the
unallocated memory.
I guess the next thing to do is turn all screen into
regular strings.

jun 4 mon
nothing

jun 5 thu
Chunk 3.5 has now LINK-IN EDIT: EVALUATE$ in source.
" must be optimised that the string is really in the
dictionary.

Attempts : be very careful.
1.
    I guess instead of the following it is must better to
    restrict the lifespan of the string to the current
    input buffer in Artemis and leave it alone in lina.
2. other pos
    $, makes sure that the constant string is allocated in
    the dictionary and returns a pointer from where you can do
    $@. If it is already in the dictionary it attempts not to
    reallocate.
    So the result is
    not really a string variable in that you are not
    supposed to change such a string, once it is allocated
    in the dictionary. (For one you could only store a string there
    that is shorter. If ou must do such things, an intervening
    0 , will guarantee that
3. Still other
    $,O optimised. Do as in 2. but do not change the original
    $, . Leave the lina version alone. (Or add such to lina too.)

3 looks like the best option. It has the most flexibility and usability.

jun 6 wed
It is unfortunate that 3.5 was edited.

Some improvements are copied into 3.6 and 3.6 is saved.
from 1076741
It has EVALUATE$ EDIT: $,O
OLD-BLOCK makes an old style block (without preceeding count)
from a new style block that is really a string.

jun 7 thu
Go on with 3.7 now!
Make editing clean. Such that EDIT$ really can be used.
It looks like I have succeeded.

*backup
*put starting blocks in logbook
-put normal tools behind FENCE
13:00
After testing 3.7 I should start putting things behind
FENCE80 . 3.7 seems okay and is saved from 1078023

I have now put $,O and { behind the FENCE.
I can now save 4.4.0. And start eliminating screens.
4.4.0 sits at 1079305

jun 8 fri

I have been thinking.
I must proceed in the following way:
1. ASAP all tools behind FENCE. Just reload with the { and }
   around them.
2. The assembler is loaded as follows : modify (CREATE) to at
   first just store the value of >IN into the TFA. This goes a
   long way towards identifying the definition.
3. Redefinition goes as follows:
   A. Get the source and redefine
   B. Make the latest free by swapping its link field with
      the latest dummy dea's link field.
   C. Swap the content of latest header with that of the
      original header.
   D. Mark the original header as replaced, i.e. one of the
      reasons for not finding it. This is not essential, as
      it is later in the chain compared to the newly linked in
      header.

As I proceed bit by bit I can allocate things in vocabularies
on the run. This is probably a mistake. I just must get in
everything, than allocate the dictionaries. Or proceed to
have at least the editor separate.

Screen 3 and screen 100 have been put behind the fence and
chunk 4.1 has been saved now. from 1080587

Screen 34 and screen 6 have been put behind the fence and
chunk 4.2 has been saved now. from 1081869

Screen 32 and screen 7 have been put behind the fence and
$ and DUMP
 chunk 4.3 has been saved now. from 1083151

jun 9 sat
I CANNOT BOOT ANYMORE
IN TRYING I HAVE DESTROYED CHUNK 0 AND THE BACKUP OF
4.0 SUCH THAT THE VERY VALUABLE BOOTSECTOR IS LOST.
Made a compare utility to see the differences between
chunks saved on the harddisk.
jun 10 mon
Still getting nowhere.
I must have a restore facility to get any chunk back.

jun 11 mon

The restore facility is as follows:
1. it must run on the hard disk
2. it must be able to read from floppy.

So I must proceed through the following stages:

* get block 206 with R/W w.r.t. floppy disk
* get block 205& in the ci86 distribution
- install a alonehd version with those blocks
- make at least a backup from the latest version
- and check it

Now testing block 205 and 206. There is certainly to
be a second round.

Testing :
It looks like I can restore with `restore'. However
chunk 4.3 saved onto chunk 0 doesn't boot. DFW remains on the
screen and crtl-alt-del allows to reboot.
The function R-floppy on screen 206 doesn't work.
Debugging reveals that the BIOS function doesn't work with
the floppy although all parameters are confirmed correct.
HEX 201 BUF 1008 0 13 BIOS
It could be that ES has a strange value, that would mean that
we are overwriting something. That is not good, but the
symptons are more that the floppy is not accessed at all.
The `restore' of screen 205 can put chunk 4.3 back to zero,
and then chunk 0 and the resotre area compare equal.
Furthermore, the differences between chunk 0 and 3 appear
normal. But it won't boot anymore.
Restoring of chunk 3.0 doesn't result in a bootable chunk.
And chunk 4.0 is lost forever, apparently.

jun 12 tue
Changed the Makefile such that the info is generated in one file.
Also simplified, everything now goes through the texinfo file.
At last I have the superfluous test code removed from (ACCEPT).

Debug session to revive any of the former chunks. To no avail.
Discovery: a patch is made to a return function in the boot thing.
Now if you have the wrong version you can shake it because
things are overwritten.

Everything to no avail.

jun 13 wed
What I can do is patch out with noop's the offending part of the

bootsector.
Doesn't help.

jun 14 thu
made a list of 8 required facilities for backup restore, some
on a booted floppy system, some on Artemis itself.
It turns out to be nonsense to assume that a backupped chunk
could not be easily copied to floppy directly.
An experiment to jump to 0:7c00 in real mode to reboot failed.
What's up?

fri-sun Done nothing.

jun 18 mon   & jun 19 tue
- describe the miscarriage
* get the six words working
* get chunk 4.4.3
* incorporate improvements in lina FROM CHUNK 4.4.3

The six words seems to work not too badly.
Tested :
RESTORE-KERNEL
RESTORE-BLOCKS
BACKUP-BLOCKS
BACKUP-KERNEL
BACKUP>FLOPPY
RESTORE<FLOPPY

This testing triggered quite some improvements in the blocks.
Chunk 4.4.3 is forever saved on floppy.
Using the aforementionned test.
From this chunk the improved KRAKER is copied.

I think therefore I live therefore I can die.

(And getting insane or in coma, as Lenat's AM apparently did
count as dying.).

jun 20 wed

* describe the miscarriage
The description of the miscarriage is added to the thesis, but
not posted.

jun 21 thu
- add TFA option to the distribution
- find which words of 4.4.3. can be added up front
* backup chunk 4.4.1 and 4.4.2 to floppy

Chunk 3.3.7 through 4.4.3 are now backupped.

I have made a block.443 that is what 4.4.3 had internally as blocks.
R/W from the distribution version was not usable for Artemis.
It is changed to allow any address in the low megabyte.
Of course this doesn't cure everything.

jun 22 fri
- find which words of 4.4.3. can be added up front

With R/W improved we are in a position to add the save
blocks (starting at 77 80) to the standard blocks.

Add (;) as a synonym for EXIT to end definitions.

What was this matter again raised by CH about needing
to types of LATEST ? If you want to know where a definition
ends, you can do 2 things:
1. Search through all vocabularies, finding the last definition
before the current one.
2. Store some pointer or length thingy.

As with solution two: it would be appropiate to have a length byte
prepended before each definition, i.e. between the name and the
dea. This would not break anything.
On the other hand why bother. If you need such, you can have
a list of dea's and sort them. That would do also.

jun 23 sa
- add TFA option to the distribution
- find which words of 4.4.3. can be added up front

I have added (;). It turns out that EXIT is never used in the
assembler kernel (!). : Q IF EXIT ELSE EXIT THEN ; now
decompiles ok.

jun 24 su

Added 4PI and xBFI to the ASSEMBLER.

However sometimes there are problems with crashing after
the assembler is loaded.
At last I find out what is the kernel of this problem:
You cannot extend a vocabulary that is not at the
top of the search order:
VOCABULARY ASSEMBLER DEFINITIONS
ONLY FORTH : AAP ;
ASSEMBLER WORDS
crashes.
jun 25 mon &thu
Trying to repai monitor. Sunbathing.

jun 25 wed
The standard word ORDER has been added to the dictionary.
In screen 196.
I have made a crude attempt at writing a debugger.
(Screen 195 196) There was however an error of thought
in this. You cannot execute a word that retrieves data
from IP (like LIT), under control. You *must* replicate its
behaviour, and the reason is that (such as in LIT) the place
where the data is fetched and where you jump too is linked in
the code. The bottom line is that the debugger is so much like
the kraaker, that they are best combined into one using
vectored execution.
The bug is solved.
ID. requires a NFA that is not zero, if it is to skip
a DUMMY DEA for a wid. In going from 3.180 to 3.181
the DUMMY DEA of a WID was shortened to not contain a
DEA. It is of course much better to not print words that
are DUMMY.
As per 3.185 ID. ignores DEA's to be printed whenever
they are dummy.
jun 26 thu
* add TFA option to the distribution
- find which words of 4.4.3. can be added up front
As per 3.186 there is an optional SFA.
Source Field Address.

The backup utilities are nin screen 77 .. 82.
They require RW-BUFFER 1<>64 (FREE?) but not much more.
I have copied all interesting code from the Artemis system
to the official block file. But not the editor with the
variable line length.
The stuf with the new editor is saved in blockhd.frt
.

jun 30 sat
(Organ)

jul 1 sun

jul 2 mon
Chuck Moore has a website.
I have sent him a message to backup his claim of a factor 100 by
referring to my site.

jul 3 tue
Backup of june made to cdrom.

jul 4 wed
It looks as if the decompiling of xFI things no longer works
in asgen.frt, as per version 3.10.
See test in testdfi.frt.

jul 5 thu
jul 6 fri
Swimming
jul 7 sat
At last the DFI is fully working.
In the editor.
jul 8 sun (..)
jul 9 mon
Chuck Moores website is expanded with a user guide.
But nothing can be downloaded yet.
The editor is definitely modal.

HOLIDAY

aug 8

Trying to get up steam again. Difficult.

HOLIDAY
aug 27
Trying to get up steam again. Difficult.
Read the thesis from within Ghostscript.
LODS used to simplify some code like in (DO)
and SKIP. No speedup (but first it looked like 10%).
Further: doc improved. Saved 3.187

aug 28
Reading through my website. Much to be improved.
In order to get Artemis up again I need:
- COLD restores the above 1 Mbyte area
- a system dictionary
- add the system library to the loaded sys:
        1<>64 LOAD-ALL
- testing the saving and restoring of such chunks
- due care for LOW-DP etc

Design note with respect to QUIT ABORT.
The basic word should be init that reset all
stacks and does DECIMAL. ABORT is a revectorable
init. ABORT" is on top.
-
At last the steps:
1. put the new system on Artemis 5.0
2. Test BACKUP / RESTORE
3. Add the LOAD-ALL stuff
4. Put it in the next chunk
5. Test BACKUP / RESTORE again
6. Test SAVE-CHUNK
7. Make editor string proof
8. Put blocks in string BLOCK$
9. Put source in string CIFORTH$
10.Put assembler in string ASSEMBLER$
11.Test BACKUP / RESTORE

Removed some code in UM/MOD that gave wrong results.
Now it crashes the Forth.

2001 aug 29
I had to replace the LEA by and ADD in (DO) and (?DO)
before the modification of aug27 worked.

Trying to put the new system in Artemis.
Saved a version that is clean and is no worse than we had.
0. prepare a floppy with a hd version using
    make hdboot
1. prepare a floppy with a booting 16 bit version using
     make allboot
2. boot from floppy made under 1, on the target machine
3. -1 CELL+ LOAD 120 LOAD 100 LOAD 97 98 THRU 207 208 THRU
4. If the screens were damaged : RESTORE-BLOCKS
5. RESTORE-KERNEL (you are promped for the hd-floppy
prepared under 0)

This procedure replaces the one from 2000 sep 28.

Two problems are detected:
The reverse engineering BLK is off by OFFSET @
The KRAAKER on the hd Forth cannot decompile addresses into
'WORD 's. DEA? doesn't work.
I guess we should fix this first before continuing.
The solution is that BM and EM are constant.
In the decompiler we see BM @ . Clearly wrong.

2001 aug 30

The procedure for an officialdecompilation is as follows :
   lina | tee aapje
      8 LOAD
      10 16 THRU
      KRAAK-FROM FORTH
      BYE
   sed -f blabla aapje >qqq
   diff qqq officialdecompilation

If okay, install with
   mv qqq officialdecompilation

The problems are both solved now.

2001 aug 31
The installed system has seen some improvements in the blocks.
1 SAVE-CHUNK can now save the system to the second chunk.

The system to load from mid and high memory at screens
248..250 at least compiles.

2001 sep 1
Saving the blocks of the system in chunk 0 to floppy.
1. prepare a floppy with a booting 16 bit version using
     make allboot
2. boot from floppy made under 1, on the target machine
3. -1 CELL+ LOAD 120 LOAD 100 LOAD 97 98 THRU 207 208 THRU
4. BACKUP-BLOCKS

BACKUP-BLOCKS (from 98) works.
Apparently LOW-DP has a strange value : 28400.
This means that efforts to store the LOAD-MID etc.
in an area that is fetched during bootup will fail.
This has been fixed.

Observation:
The area from LOW-DP @ to 'FORTH + $10000 is available for
programs that must reside in low memory. There is no switching
code possible above $10000 absolute, but that is no problem.
The important thing is that only 64 k byte is loaded while booting,
but this whole 64 k byte is available for the bootstrapp system.

 * BACKUP (to backup the current chunk works).

5.0 has been saved from 1084435
SAVE-SYSTEM seems to work, but of course it destroys the
screens from $40 onwards, so now we can see whether `restore'
works.
Defined backup and restore in screen
 * restore functions as advertised.

restore however is tricky and requires knowledge of the
exact start and length of the area. Length is less of
the essential, but if just the whole chunk is filled
with garbage subsequent backups of that chunk will contain
very misleading garbage screens with wrong names of
chunks.

Quite some updates have been done to the original system.
They have been reinstalled, and still work.
lina and ciforthc have been officially tested, with output in
the testreport.txt.

 *The relevant blocks have been copied to the original system.

We have now version 3.189. A new release called RELEASE4CI.

 = The system is installed back and this is the real conception version
 = The conception version on hard disk and the corresponding
 lina version are saved on floppy permanently.

2001 sep 2 su (nothing)

2001 sep 3 mo
The LOCALS as an example of co routines didn't work.
This was because of a bug in MATCHING-WORDS.
The condition for denotations was reversed.
With this condition many times the denotations show up
where it was not yet wanted.
The denotations now hang off the end of the FORTH dictionary
and there is no longer a search a denotation vocabulary from
INTERPRET. I had to add a cludge to advance the search pointer
for blanks, as required by the ISO standard.
No I didn't. I just correct the search pointer in case
of a denotation word.

2001 sep 4 th
... Mother..

2001 sep 10 mo
Found the thesis of Haase. Very interesting and relevant.
I must add the story about d++ to my thesis.

2001 sep 17 mo
Working on porting the d++ system
Left with ADD-IT. It doesn't seem to work quite well.

2001 sep 18 th
Added a preliminary version of the d++ article to my thesis.

.. investigating scripting ...
(In behalf of the moving parts to the site of the Unix gg)

2001 sep 24 mo
- change ABORT such as not to show message.
  Introduce .SIGNON plus environment queries NAME VERSION
- I guess I should make a blockfig.frt as an archive with ciforth to
  fig code. This should be a text file, such that I can add comment.

No the best thing is to move that stuff to after the end.
Still try to at least have them compile.

Version 3.193 had the problem that a limited number of SYSTEM calls
was possible. This was because I didn't do a waitpid.
In 3.194 this is fixed.

Screen 9 now has REQUIRE. This is very nice indeed.

2001 sep 24 tu
Small improvement to REQUIRE. PRESENT? is simplified.
With require I can reorganize the source freely, so there is
no more need to separate out the archive.
2001 sep 25 tu
Added OS-IMPORT and T] to the archive.

Some debugging done on the dpp.frt system, but it is bad.

2001 sep 26 we
(CREATE) now fills in BLK in the source field.
LOCATE added and ``ee'' ``l'' and ``man'' added to the
os-imports.
_SOURCE-FIELD_ requires _LOAD_ but that is fixed in the
postlude.cfg file.
Idea about POSTFIX replace (WORD) by a NOOP for one
call. Works.
Idea about refresh to get BLOCKS.BLK updated. Works.

Idea about CLONE that results in a Forth that is
connected to the other Forth via a pipe. Use dup2.
A problem is how we must handle user variables.
We cannot have one location memory, such as now.
Sacrifice another register? DI ?

Idea about detecting options like in 7F00432D.
This is something along ``ARGS @ CELL+ CELL+ @ @''
By ``8 RSHIFT 1F AND LOAD''
we can start up any of 31 screens.
lina -e
starts up the electables screen (5) (formerly 8)
lina -r
starts up the system with the REQUIRE word.
lina -s
starts up the system for scripting.
This implies the REQUIRE word, shifting of the
arguments and loading of the file in ARG[2]
skipping the first line.
lina -c
starts up the system for compiling

#!lina    x1 x2
Starts up lina with positional parameters plus whatever
is passed to this script file

lina <<QQ
allows to have shell substitution in the script before
Forth goes along.

dpp.frt works but cannot save yet.

2001 sep 27 th
Yet another small improvement to (WORD)

I had this idea about using BP as a pointer to the user area
at the same time as a stack.
LEA AX, [BP - R0 + (R0 +FFFF)&& (-FFFF) ]
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
            This is a run time constant.
What we sacrifice is duplicate the size needed for the return stack.

d++ works now inclusive saving.

It looks as if in xterm you can program games,
at least the cursor seems available.
You can have colors in xterm.

With ifconfig you can
find what your local ip address is.
Then you can telnet to that site!
Not alone that, my computer *IS* a html server, and a
www server. I can serve on my own computer via the internet
COOL!
Looking into Musictex:
What I have is the latest version indeed, but it is braindamaged,
in that I had to get all the new files.
Searching for MUSICTEX on the net is allright though.

I have all those ideas about clicking on sensitive area's
with colors etc.

2001 sep 28 fr
I certainly need a real time mouse. That reports events
independantly from each order, and with a time stamp.
This is of course a boon for games also
But FIRST of ALL get this d++ program done.

Ik heb nu de customisatie gedaan voor de Nederlandse teksten.

2001 sep 29 sa
Not much.
2001 sep 30 su
Added the selection of existing questions.
Added the dynamic allocation of (most important) arrays.
Debugged the reading and writing of the database again.

2001 sep 30 su
It works. There was a stack bug in d++.
Plan for today :

-RFC home page.
-Forth as a scripting language.

20001 oct 02
Overview of error handling
1. Just one warning : 4 in (CREATE)
   This calls MESSAGE directly.
2. ERROR is called from ?ERROR, or from THROW.
   THROW is used nowhere in the kernel.
   So all errors are followed by QERR in the
   source.
One thing to be done is get them on one line for
easy grepping.
To my never ending surprise 0 MESSAGE is suppressed
if coming from disk, but not if WARNING is 0.

The error message have been made all in the same format
        DC      LIT, ##, QERR
where ## is a decimal number.
The executable remained the same and this version is
saved.
The strange situation with the 0 ?ERROR in POSTPONE
is fixed, a proper message is given now.

Written all scripting options in the manual.
Implemented -r (load REQUIRE).

2001 oct 03

Reorganized library block file a bit.
At the end there is an area that is cleaned up.
Either it is loadable via REQUIRE , or it doesn't run
at all.
Made a distinction between different sources separated
with a screen with an index line with stars.
The manual and a first shot at a reorganisation is saved.
So the screens above 255 are official.

All errors from the kernel now go via THROW.
Loading outside of the block file was not reported on Linux as an
error, because linux returned zero bytes read. This has now
been fixed.

I have copied the way of stealing from aiforth, i.e.
running the c-compiler and reunning a resulting c-program instead of
running only the c-preprocessor, then relying on m4.
It turned out that I had the size of termio wrong.
Another 24 bytes saved.
The -c option and -s option now work.

2001 oct 03 wed

CRACKER moved to the end
Almost all options are available now for modificiation.

2001 oct 04 thu

Implemented SWAP-DP
Used it in compilation.
The -f and -l options work.
2001 oct 05 fri

Changed copyright notice.
Total cleanup of block library.
All tools except the hard disk stuff has been moved
to a precise place.
Started debugging the stand alone application.

2001 oct 0
2001 oct 07 sun

PRESENT? has been simplified, by introducing the feature that
FORTH separates the built-in denotation from the remainder of
the system. This allows REQUIRE ^ to work although ^ is also
a denotation.
If a user has 0x as a denotation and words like 0xaap
(which is ill advised anyway) she has to do
REQUIRE 0xaap first , otherwise it will be seen as fulfilled
because it is  found as a denotation.
We got the following careful spec:
\ For WORD sc: it IS found but not a built-in denotation.

I cannot write to harddisk from the 16 bit protected mode
version because the assembler no longer fits in memory.
Trying interrupt 25H doesn;t help.
Also version 2.177 MSDOS.CCOM crashes while trying that
interrupt.
But I see that I can save some kilobytes by diminishing the number
of disk-buffers.

At a certain point it looks as if the assembler switches to loading
from the error screen. Maybe 4 is too few? Lets try and use
screen 49 testing block mechanism.

The bottom line is that
- +THRU must not be put in the assembler wordlist
- (FRD) must be added to the screens above 317
- (FRD) uses RW-BUFFER so be careful with the position.
- the 16 bit protected mode version certainly needs
  6 buffers, one more and it no longer loads.

2001 oct 08 mon
The above has all been fixed.
I can now restore the hd system all right.
Probably a classic version of a 32 bits Forth, using the
16 63 1024 disk format is okay.
Remaining problem, restoring blocks must take into account
real amount of blocks.
INSTALL-KERNEL and RESTORE-BLOCKS work again!
The installed kernel works too!


Don't forget real big title in manual!
If the nesting of screens loading is too deep, the loading
  jumps to a wrong screen, instead of aborting.
250 LOAD 77 81 THRU are hard disk utilities.
The trick with REQUIRE --install_hd doesn't work,
  the following definitions are load twice.
INSTALL-KERNEL must be printed twice, because the
first time gives a disk error.

I have managed to make a bootable hard disk with a
16 * 63 * 1024 format, but I am not sure whether it survives
over the first track of 1008 sectors (504 blocks.)
I am pretty sure it doesn't

2001 oct 09 tue

I have now introduced WHERE and eliminated (ABORT)
and the -1 value of WARNING.
ERROR is modified to only display an error, not generate it.

Loading assembler high is not as easy as I thought, but it goes
as follows.
Have the VOCABULARY ASSEMBLER low.
Have all the ASSEMBLER DEFINITIONS high.
Then you can empty the VOCABULARY by
0 'ASSEMBLER >WID >LFA !
or by forgetting the first word defined high.
However the later approach will also forget other words
defined high.

The following adaptations have to be made for a disk that
boots using BIOS 13 call 02 .
Fill in sectors/track #heads drive
Make SECSTR 1.
Make OFFSET 64, or any fixed position you chooste to put
your blocks.

2001 oct 10 wed
Looked into making a bootable hard disk version that has no need
for reassembly. This is difficult. It is hard to see where the
sector/track and #heads information can be had from.

Indeed I can now run this version and presumably it has the
correct division because I can read the other chunks.

At last I figured out how to do it.
* have an option to have the kernel at sector 1.
- have the boot code respect the information in the boot record
- copy this information into Forth before relocation
- use this information to access the disk in R/W
* figure the hard disk information from interrupt 41
- patch this information into the boot sector while installing

I have made the renaming from BOOTHD to BOOTLBA in prelude.m4
such that I can introduce the new abbreviation at leasure in the
documentation. Furthermore I have introduced RESPECTDOS , that
indicates whether a DOS-compatible floppy is made.
If DOS is not respected the image starts at the fixed offset of
64 K. More is not good for the boot sector anyway.
However, I don't seem to have a 32 bit version, except from the
BOOTLBA, that works.
So I need to debug that first.
I have made code to discover the number of heads and sectors per track
from the BIOS, via a table that is found using INT 41.

2001 oct 11 thu
Renaming actions should be separate! in maintenance.
I must with the above renaming be able to compile the previous version.

The following has been done in order:
1. The detection of sec/track and heads in 16 bits mode
2. The detection of sec/track and heads in 32 bits mode
The resulting blocks.frt has been saved as 3.118 RCS.
3. Introducing BOOTLBA and RWLBA . Resulting assembler
    is equivalent.
4. Introduce the use of RESPECTDOS and inspect resulting
   executables without debugging action.
The resulting *lude.m4 ci86.gnr and *.cfg files have been
saved as 3.214.
5. Have the boot code respect the information in the boot record
The drive number can be derived from the media descriptor byte in
the boot record. Indeed done, the variable DRIVE contains
the relevant information in 3 byte.
This is version 3.215.
Mean while I have fixed the benchmark for time.
There is no problem with REQUIRE LOCATE , but it is not loaded
when there are no Source Code Fields. (You could have guessed.)

Made a version called alonetr.cfg that uses track and sector
information. A companion in the makefile is the target trboot.
This generates a floppy with the blocks a t a fixed offset of
64K without observing DOS format.

What remain to be done :
- patch this information into the boot sector while installing
- use this information to access the disk in R/W

2001 oct 12 fri
- test whether interpreting only the boot sector works.
This is done by generating a trboot for the hard disk
but installing it in the classical way.
- patch this information into the boot sector while installing
- use this information to access the disk in R/W
1. It turned out that the trboot version did not observe
the media byte properly. This was fixed first.
2. Now a trboot version with a hard disk boot sector was
successfully installed on the hard disk using the old system.
3. A trboot version can successfully read itself from floppy and
write itself to an other floppy.
3. A trboot version can successfully read itself from floppy and
write a patched version of itself to an other floppy, that
successfully runs on a harddisk.
4. And at last it can put itself on hard disk and restore its
original state. (Which amounted to DRIVE @  ... ... DRIVE !).
ci86.gnr 3.126


2001 oct 14 sun
Made a post about environment strings.

Cleaned up the COLD indirect jump area.
Removed another 16/32 bits dependancy in align.
Maded the shifts in DEPTH with only optional BITS32 code.

2001 oct 15 mon
My parse is not ISO. After all.
The point is that it doesn't handle control characters in the
system defined way.
I have now cleaned up the BUFFER / BLOCK stuff.
At last BUFFER returns the address of a block that is already in memory.
BUFFER is not ISO . needs CELL+ CELL+ , so I renamed it into
(BUFFER) and added BUFFER to the ISO compatibility stuff.
Eliminating DENA .. DENF was a bit too fast. It kills the
built in assembler. So reinstalled.
Small improvements, such as BUFFER and at last BIN-SEARCH is
fully correct.

The BUFFER and BLOCK is okay in version 3.217
Block zero has no longer a special status, except for possible
slight inefficiency in writing back.
A lot of small improvements, like DO-DEBUG NO-DEBUG

2001 oct 16 tue
The double quote introduced.
PREVIOUS on an search order of FORTH crashed.
Now ONLY fills the whole search-order with 'FORTH.
And add the double quote convention.
OOPS EDIT: have been implemented.

Going on with the making of a nice list for blocks.
Renamed BUFFER into (BUFFER), because it is not ISO.
In the blocks somewhere there is
: BUFFER (BUFFER) CELL+ CELL+ ;

2001 oct 17 wed
I have shifted closed shut all the user variables that have to be
dependant on memoery size, such that memory can now be changed
but just adding to the first 5 user variables.
DEPTH has been made high level, such that it no longer breaks if the
user area is reorder, or has conditional compilation.
There is this idea of finding out how much memory there is on the computer.
The blocks can be printed in PostScript with borders

2001 oct 18 Thu
The assembler file can be printed too.
2001 oct 18 fri
I can view the appendix in the same file as a dvips output file.
By fixing up the use of libraries by dvips.
I wanted to add the old behaviour of ERROR to be able to see
where things go wrong. In behalf of this I have made
OLD: to add the old behaviour of a definition to a new definition.

This works in the -s screen.
There is something fishy about it though. It tests okay, but if I use
it in the -s error handling to use the old ERROR , no output
of ERROR is seen if I do BYE immediately afterwards.

With respect to viewing a single postscript file, with different sets
of page formatting commands.
The StartPage command must switch in the appropriate dictionary for
viewing that particular page, and pop that dictionary again at the end.
Note that the output of DVIps does this wrong. It keeps its TeXDict
in command for whole parts of the file.
The start page command must be kept outside of the dictionary.
It is possible to redefine the start page command for an existing
dictionary outside that dictionary. It is more difficult to redefine
the end page command to switch that dictionary off. The reason is that
the end page command within the dictionary is found first. If it is
redefined within the dictionary my naive use of PostScript leads to
an infinite recursion.

The usage of prsc.frt to make an appendix for a ps file is as follows :
- fill in the start page and comment out the header in prsc
- Call : prsc <screen-file> <assembler-file>
- Add the appropriate number of pages to the %%Pages: line.
- Add everything before Prolog in before the end of the
   prolog thingy in the ps file.
- Run the bulk of the pages without the TeXDict dictionary, i.e.
throw the last "TextDict begin" line out, plus its corresponding
"end" at the end of the file.
- Add the remainder of the file just before the %%trailer line at the
end of the ps file.

This works as per version 1.7.

The generating of an appendix is now approved. It has been tested with gv
and has no major problems.
The block file has been renamed to forth.lab.
The errors have been moved to screen 32, and all options up till
32 can be used. -e (5) has become the electives screen.
-a (1) has become the REQUIRE screen (silent) and -r remains the
regular REQUIRE that does 1 LOAD. 1 LOAD is more pleasant for
doing by hand.  lina -s is pleasant e.g. for running tsuite.frt
The errorscreen can be configured from m4 as well at the last minute
in the assembler file.
The long standing problem that messages were printed in an essentially
random base has been cured. (Now decimal.) But ABORT still switches to
decimal (after having used this random base.).
I wanted to get rid of (ABORT") but that is virtually impossible as
ABORT" must be an immediate word. (Can make it loadable, but it is
ISO CORE.)

I have problems with generating the documentation.

The trboot system is tested after this large update and works.
The pc editor now quits on <ESC>q as well as <ESC>Q .

I have added the aliasing trick in m4 to the cifgen.mi documentation.

I have added a conditional chapter to the ciforth.mi file
about the editor. What a pain in the ass is that texinfo system.

At last uploaded a stand alone version including all the documentation.

2001 oct 20 sun
The internet discussion triggers the idea that nams may just generate
the correct objects for windows.. This may be true.

Before I go testing that, I try to get my old versions in order.
alone.cfg goes well, but not alone1.cfg at booting.
under msdos alone crashes and alone1 behaves poor.

There was a message on comp.lang.forth
that triggered the following
idea. There may be no need to allocate memory while starting an application
in windows, the same way as in linux.
2001 oct 21 mon
I apparently got as far with DPMI that I could run 32 bits code in a
small segment of 64K. The BIOS calls are no problem neither.

Been testing. See testreport.txt for 3.223 .
The most important versions work satisfactory.
32 bits lina linuxc bootinghd  bootingfd
16 bits msdosmodern bootingfdprot
Only bootingfdreal doesn't boot. I know why, the code segment
register is not set at all. It works if started from MSDOS
though. Minor quirks have been removed. And 224 checked in.
This deserves a release.

This was in principle in behalf of DPMI that has taken a back seat.
Put the version on my site.

2001 oct 22 tue
I am very distracted today. Have written up about RFC .
Experimenting with 32 bits DPMI
It might be possible, that you just don't have to switch
to protected mode yourself.
At  least there is an error in my 32 bit DPMI code that
would result in it not running. There might be more.
I have made a provision in the makefile to run old versions
by date.
3.179 seems to work in 16 bits DPMI.
2001 oct 23 wed
Okay. What strategy are there?
1. gamble that 32 bits DPMI code works if only passed through
the proper assembler and linker. The gamble is worse if you
realise that the 32 bits DPMI code has not been tested.
2. Proceed by steps. Try very simple 16 bits DPMI code using
nasm and the borland linker. Try to get rid of the mode switching.
Try separately to upgrade it to 32 bits DPMI code. Try large
segments. Now use that as a means to get the 32 bit Forth running.
3. Debug such as to have the 16 bits DPMI option working in the
latest version.
According to Mao "beat the enemy one by one", we must do 3.
This means testing version 168 , okay and 169 already fails.
Looking closer, we see that 168 doesn't set the new segments
it uses, only defines them as aliases. 169 sets them to
the same value it just got, no errors are reported, yet it
fails.
2001 oct 25 thu
All this suggests that we should try something first.

Make versions for windows buildable on windows by using the
nasm for windows. First make the Wyatt test and try to link
them. Then try to link in such a way that you need not switch
to 16 bit prot mode yourself.
I have found that there was an ready made development environment
to run subsequent newer versions of masm versions. I tried
to go on on that path. I succeeded in getting aliases, set
them up, then use them to run. Even change the alias for a
file descriptor from code to data,
but failed introducing the supposedly
better error messages via 04CH. Done further mindless experiments.
The conclusion must be that
that is not one of the "small problems" and should be left in
the kernel indefinitely, till we get full control over the
matter.
There is a fatal bug in the BIOS, that will prevent any code
from running 32 bits mode.
2001 oct 26 fri
What I can do:
1. eliminate the new error reporting from version 166 etc.
maybe making branches, such that they run
2. hack pmtest.msm to run from an allocated segment.
If that fails I can shake it.
3. Integrate the two.
4. if running 16 bit mode from an allocate segment works,
and I have a working example of 32 bit BIOS calls, I
can use it for a 32 bit Forth.

Tried out two. I can allocate a segment, copy the code
to it, and read it. If I try to get the codes right I
do not succeed in jumping to that new segment and back.
I have to give up, because I get bogged down in more and
more print statements in assembler. This can be tested
better from Forth.
An idea: maybe it is possible to patch the Local Descriptor
Table yourself. Then it is fixed.

Just going on testing. It turns out that going from
3.169 to 3.170 breaks the DPMI code. The 3.170 is merely
a demonstration of how to jump to 32 bits code then stop.
Latest working version is 3.169. Now trying newer version
using a reverse patch.
171 works with the reverse patch. 172 does not , error8.
3.190 works with the reverse patch and needed another one.
checked in as 3.190.1.1 . The same patch as between those
works up till 205.
Version 3.205 has been debugged and works again ans has
been checked in as 3.205.1.1.
These patches have been applied again to 3.210 and 3.215
both work. Newer versions have the problem that they
hang. But they can be terminated by windows 3.11.
No black and blue screens seen for quite a while.
(The testing with the pmtest.asm file took me 20 reboots.)
After some manual after-editing 224 works again with dpmi.
!! So checked in as version 3.225

2001 oct 27 sat
The saved version cannot build the documentation, but what
the heck. Cleaning up BIOS first.
Frther cleanup,. the documentation is okay too.

2001 oct 28 sun
Trying to run the stuff on win 95 and wine.
It turns out that the same crashes occurr in win 95,
but blue screens and not black.
wine doesn't run a shit. Something suggest that it might
have remained in 16 bit mode. I have tried that and indeed
the 16 bits version runs while switching to protected mode.
dpp : asking for a right question is cumbersome for users
there must be another question do you have an animal in mind.

2001 oct 29 mon
Trying to switch properly now by an intrasegment jump.
This doesn't work, suggesting one of several possibilities:
1. The BIOS calls might not work in this form from 32 bits mode
2. The alias descriptors are just bad
3. I have other unidentified errors.

A problem is of course the proven unreliability of the dpmi interface.
What I must do is
1. Write a dump for a descriptor.
2. Get memory and two descriptors from DPMI
3. Get a handle to fill in the local descriptor table
4. Fill it in myself and check it.
5. Make assembly code to check the following point
with harmless back and forth jumping.
6. modify the BIOS stuff to jump back and Forth to the
16 bit part.
7. Add the LES trick to Forth.

An interesting idea is to write a tsr Forth that handles
critical errors, debugs, and general protection faults.

In screens marked with names as .SEG I have made a dump
for a descriptor.
DPMI words for getting and modifying descriptors via GET-SEL.
This worked so neatly, that I didn't bother to lay hands on the
local descriptor table any more.
The word CRASH demonstrates that we really were in 32 bit mode
for one short moment.
I have made a further check, and it shows that an address segment
prefix for an FAR CALL results in a 16 bit return address on the
stack. It is most likely that this works for an INT too.
This means that BIOS for DPMI must work with the AS: prefix for
the INT 31. In a later stage it will be sufficient to keep the
BIOS word in the lowest 64 k byte of memory and relocate the
stack temporarily in that lowest part too, a 10 cell buffer
should be sufficient.
What remains is to recode the Forth words in assembler.
Done!
2001 oct 30 tue
The 32 bits DPMI is ready with the knowledge, apart that
I had no address overwrite prefix yet, and indeed it crashes.
Changing that doesn't help. So I first must test the 16 bit
version again. But I see that I mishandled M4_INITDP too.
The matter around M4_INITDP needs a clean up, for reason that
it came up here unexpectedly. M4_INITDP must be used
only for switching AND 32 bits. I guess that the proper thing
is to put it at _AP_ for a default, only changing it for
switching.
The 16 bit version turns up a few more errors:
we tried to jump to the extra segment, and the prefix was
at the wrong place.
The forth still crashes to a black screen. I introduce a
HANG word. With that it hangs instead of crashing.
I can push the hanging behaviour before the lit 21 in BDOS,
after the lit 21 and before the BIOS call, and it crashes.
This is unpleasant. The problem lies apparently elsewhere.
I guess before going on I must fix the editor for 16 bits
DPMI. Then proceed with testing a BIOS call that goes to
32 bits than 16 bits to do the actual work then to 32 bits
and back to 16 bits. An other option is just to try out
postcard.asm with 32 bits.

2001 oct 31 wed
Discovery : there is also a raw protected mode switcher.
With this I could use a stub virtual real mode program
to launch the 32 bit one. The unattractive site is that
it is hard to pass data around. allthough it could be done
similarly to the way protected mode is handled from DOS.
But at least there you can see the DOS stuff from protected
mode, which you can't do now.
Today
* clean up the stack length and M4_INITDP
  in the prelude.m4 M4_INITDP must be set to _AP_
  in the postlude M4_INITDP can be adapted for _SWITCH_+_BITS32_
  and M4_STACKSIZE M4_USERSIZE M4_RETSIZE can be defined,
  based on the configuration.
  This principle must be explained in developers manual too.
* get the editor working for 16 bits DPMI
- small experiment installing a standalone Forth as a TSR
- get the DPMI version use an allocated segment for 16 bits
  DPMI

I have made version 3.228 that is a working dpmi 16 bit version
with some test code in the corresponding screens that have been
saved too.
A rant about prelude/postlude has been added to the cifgen documentation.
Now cleaning up prelude.m4 postlude.m4. I guess I must setup a test
to make sure the assembler code is the same for some versions.
I have now made the return stacksize+tib , the number of blocks,
the dictionary space, the INITDP thingy and the length of the
search order, all configurable via m4.
3.229 that is.
2001 nov 1 tue
* small experiment installing a standalone Forth as a TSR
Some fooling around with the DPMI versoin.
It works not bad.
The experiment with a standolane FOrth has triggered some thoughts:
The WARM and COLD vector off +ORIGIN must be reintroduced.
Not as a vector point but in behalf of high level code, to
retrieve the actual entry points and use them for putting into
the interrupt table or whatever.
ABORT does the DECA ONLY FORTH DEFIN init, and COLD shouldn't.
However, you need that for options.
The starting up of the interpreter could be done using
_STARTUP(INITIAL_HIP) and placed in the header.m4 file.
Looking into the terminal stuff for Linux. terminfo is horrible.
It would be nice if it were working for xterminals, but that
is not clear at all. What is nice though is that it allows for
mouse events.
Further the standalone was no success. But I have hung it from
the control break vector. Which is probably reset after leaving
the program.
- get the DPMI version use an allocated segment for 16 bits
* experiment with jumping back and Forth to this 16 bits segment
* experiment with jumping back and Forth to a 32 bits segment

That is up now.
I have done these experiment and they are locked down in
some screens. I can call the simulated bios from a 32 bits
code segment. But the extra segment ES must be 16 bits.

2001 nov 2 fri
Adding code to the forth that allocates a 64 K segment.
Unpleasant surprise: the built in forth has the bytes of
PUSH|FS, reversed.
This has been fixed, and as much as possible
of the code that looks similar too. Probably I should test
this assembler against my super assembler.
I have the code allocated in Forth to the FS segment.
This segment has been copied from the cs segment.
Then it is used,  and I see the signon message,
but what an unpleasant surprise:
the CPU number doesn't print correctly. Apparently
the current data segment is ignored, and data is gotten
from what is specified in REG-SET. But these are real
registers. Bloody hell!
In fact we have the same situation as with 32 bit protected
mode. We must copy stuff back and forth between real and
protected mode segments. But this can be done.
The code I have now in precious has it wrong. The copying
must be done to the selector that points to the real segment,
no to the descriptor that for Windows sake is involved with
some segment.
2001 nov 3 sat
Okay I must give up on the idea that I do not want to
retest for this windows release.
I can type ``doit diffa'' to get a difference with the
tested version for all tested stuff. But this comes up
with more and more differences.
There is also the idea to introduce a _COPY_ for when
buffers need to be copied. Fine, but not in this stage.
I have introduced the copying to the TYPE buffer,
and it works! Now the copying from the EXPECT buffer.
It too.
I have implemented READ-FILE and WRITE-FILE from the
ISO file set. This is used to get R/W working.
With the proper FARMOVE it works.
The 16 bit version works now for DPMI. KRAAK QUIT
SIEVE EDITOR and all.
Trying to simplify it fails miserably.
Trying the 32 bits version fals miserably.
Trying to run the regression test fails miserably.
2001 nov 4 sun
Succeeded in a very simple simplification:
  - number of paragraphs needed no detour through memory
  - pass GS back and forth, instead of DX
It is very fishy, but jumping to the FS segment doesn't
work, while jumping to an alias is no problem.
I *must* look into this.
I cannot find a difference, but anyway.
I have another way of cleaning up: using the offical calls.
This leads to less code.
At last I have entered the crash/hang debugging stage of
the 32 bit version. Hanging can proceed to before
BLOCK-INIT but appararently there it crashes.
There is a defect in opening the blockfile. It handles the
buffer in the 32 bit area, not the copy in the _DATA_
area.
2001 nov 4 sun
After some effort the code is cleaned up so as to use only
the file descriptors needed. The 32 bit code doesn't work, yet,
but hangs at the start of cold. So it is more or less
under control and it just might work if the 16 bit code is
cleaned up further.
2001 nov 5 mon
Added CRC to the blocks.frt.
This is a good preliminary exercise for the paranoia program.
I guess I should now implement OPEN-FILE CLOSE-FILE
POSITION-FILE and GET-FILE PUT-FILE.
There is a design issue. Should I adhere to the UNIX-like calls
or to the ISO compatible ones? The ISO write has the disadvantage
that no count is returned.
The MSDOS manual contains a full row of error messages.
That should allow a negative is error rule for MSDOS too.
The proper design is for MSDOS
leave the return code and the error flag.
for linux
leave the multiplexed error/data.
Then we get
: ?DOS-ERROR IF NEGATE THROW THEN ;
: ?LINUX-ERROR DUP 0 MIN THROW ;
We define internally OPEN READ WRITE CLOSE LSEEK
and then READ-FILE are loadable extensions like
MSDOS :
: WRITE-FILE  WRITE IF NEGATE ELSE DROP 0 THEN ;
: READ-FILE  READ IF NEGATE 0 SWAP ELSE 0 THEN ;
LINUX
: WRITE-FILE .... WRITE DUP 0 >= IF DROP 0 THEN ;
: READ-FILE       READ  0 OVER 0< IF SWAP THEN ;
This triggers the redesign of the BIOS word :
dx cx bx ax aka
"AAP" handle @ WRITE IF THROW THEN DROP
Where : WRITE write BSDOSN ;
and : BDOS 21 BIOSN ; and
: BIOSN popa ... pop d (INT) push a push flags.
This is quite some redesign here we got on our hands.
Furthermore the BIOS word should dump all registers in REG-SET.
Let us start with MSDOS and look how much problems this gives in
DPMI.
2001 nov 6 tue
We have now all the file words in MSDOS, plus PUT-FILE GET-FILE.
It look as if it is a good idea to have the word ZEN, that
turns a string into a zero-ended string. It should use RW-BUFFER
instead of the PAD such that things work out okay for DPMI.
Done. We have now a full file wordset in MSDOS, and none of them
uses PAD anymore. Using the new words for block file i/o is left
to be done.
I must be careful to touch those, because they can affect
the protected mode versions that run under MSDOS. I guess
I better leave it at this for the moment.
2001 nov 7 wed
Added a regression test that also tests the stack to msdos
and lina. This finds an error in GET-FILE (file descriptor
remained.) Now okay.
Further plans
* rename RWBUF
* make lina msdos and dpmi documentation system okay
- test ZEN for DPMI
- make BLOCK-INIT work in DPMI
- use REPOSITION-FILE and WRITE-FILE for R/W
- eliminate R/W
- get rid of BDOS in msdos
- get rid of BDOS in dpmi
- get rid of BIOS in msdos
- get rid of BIOS in dpmi
* try regression test for dpmi
2001 nov 8 thu
I can do a feeble regression test for dpmi by cutting an dpasting
from a file, bit by bit, such that the parts are not greater than
8 kbyte.
ZEN for dpmi still fails.
* test ZEN for DPMI
* regression test, in particular file words for DPMI
There was an error in the test for (ACCEPT).
It assummed that after reading a line the string was
still valid. Now it is copied to PAD. This is the only
problem that I found with the regression test, apart from
file and ZEN related probems.

I have rename R/W to R\W and saved that new version.
The 32 bits version behaves reasonably as long as it is kept in
the low 64 K except that you cannot load screen 5 in one go.
You have to load the editor separately.
Firstly can we actually write at 10000H ?
This can be tried out by allocating two times as much memory
than needed to place the stacks.
Refresh site did not work.
2001 nov 9 fri
Working on transputer affairs. Distributed tForth to
Robert Smink.
2001 nov 10 sat
-+- refresh my site
* make BLOCK-INIT use filio (MSDOS)
* use REPOSITION-FILE and WRITE-FILE for R/W (MSDOS)
* hunt for other BDOS in msdos
* hunt for other BIOSN in msdos
* hunt for other BDOS in dpmi
* hunt for other BIOSN in dpmi
The new stuff works on dpmi. I have introduced the
NORMAL_BYE CODE_BYE dichotomy in the prelude/postrlude
scripts. The 32 dpmi version jumps to clean up code, but fails.
The cleanup code has to be in the original segment (where we
got into from DOS, where we prepared our Forth segment.)
Refreshing my site fails, still with the mysterious message.

2001 nov 11 sun
* test the new stuff also on dpmi
* give back the memory (BYE)
Try to set the serial port properly with the 8th bit from dos.
After setting the mode to 8 bits, and rebooting without
power cycling, I have still the 7 bits message in Linux.

I have made a hang point at the code where we return to.
But it turns out that I dodn't fill in the return address
properly.
I have introduced EXIT-CODE, and a parameter in opening
the block-file.
BYE now jumps back to the old code segment (protected)
and does a 4C int21. It turns out that if I try to set
the stack back to this old segment, it crashes. But
It turns out that the dpmi can do a regression test.
And also there seems to be no memory leak. I started thousands
of wina's without any crashes.
So I can save this version.
Unfortunately currently non of the 32 bits protected mode version
seem to work under MSDOS. Not the booting one and not the modern one.
I guess I should not work on this now.

Next step is adding all file stuff to Linux.
I have added the file stuff to the linux version, and an include
file option to the msdos version.
2001 nov 12 mon
What is left to be done are BLOCK-INIT BLOCK-EXIT R\W etc.
This has been done.
CH remarks that the trouble use the LSS instruction is
not needed, because the SS loading prevents interrupts
until the next instruction.
2001 nov 13 tue
Surprising : 500 PAD R\W gives a disk-error but 500 BLOCK
does not?.
The latest version of DPMI crashes. I got it back up to
3.249.1 but 3.252 still crashes.
I have simplified the SS loading. This is no problem for
lina. dpmi still crashes.
I must make WFILE and RFILE in dpmi such that it handles
long reads and writes. Before doing anything else.
2001 nov 14 wed
At last the dpmi version no longer crashes.
I have been wasting my time terribly on what was in
fact a simple change, but not tested immediately, in
REPOSITION-FILE. There is a mysterious bug, related to
remembering the ARGS.
I have tested Forth versions of WRITE-FILE and READ-FILE
that use BDOSN for DPMI. Going to call them WRITE and READ.
I have made, on top of that WRITE-FILE and READ-FILE.

2001 nov 14 wed
Final conclusion : the
Preparing the distribution of a windows version.
The JUBILEE version runs on windows linux standalone
and msdos.
2001 nov 15 thu
Worked on the system commands under DPMI.
There is example code in forth.lab, but the COMMAND.COM
gives mysterious problems.
Remembering the args is made working.
2001 nov 16 fri
Trying system under msdos. This was more or less given up in
favor of getting rid of the BIOSO calls.
Some minor problems came to the fore. The file forth.lab is
now in principle opened without write access, but you need
to type DEVELOP to be able to EDIT.
At last we got rid of BIOSO, except for one case.
In the BIOS-IO version we need a Z-flag in KEY?. This cannot
be accomodated by BIOSN.
The 3.257 can do an INSTALL-FORTH-ON-HD. There were some
minor things to fix.
3.258 SYSTEM added for msdos.
The regression test is okay for lina and msdos.
2001 nov 16 sat
Worked on tingel. You can ask the kernel for permission to
write to an I/O port, then write to it.
With this I debugged my formula.frt program.
2001 nov 17 sun
Worked on iforth, on linux and msdos. I didnot manage to
do get iforth running on linux with the formula.frt driver.
I didn't manage to run iforth on msdos at all. It was an obsolete
version and marcel did change all the library's.
2001 nov 18 mon
It appears that the dpmi crashes with the SYSTEM command.
This caused by a wrong place for filling in DS into the
data structures, which is present in the 3.260 version.
Filling in 16 bit datastrcutres from 32 bit is tricky,
so we test the 16 bit dpmi version first.
The 16 bits dpmi version crashes. But the 32 bits
version works if everything is filled in at boot time.
Conclusions however: the shell must be configurable.
Otherwise if ciforth is started from some other disk
then the startup disk, COMMAND.COM cannot be found.
If the disk is given in the name, this may go wrong
if you want to run it from floppy.
Furthermore BDOSN must return negated error messages.
The latter has been done 3.262.
I have added some useful commands imported from dos.
Problem the editor no longer works in 16 bit real ciforth
It hangs after the first ^X, the next one hangs the system.
Option under MSDOS work.
2001 nov 19 tue
The maxx.zip is gotten from marcel's site with much
problems (via Coos).

2001 nov 20 wed
* make an ambulant floppy
* run iforth on Artemis
- all source on artemis
- install RCS
- remove relais
- get extensions in shape
- paralle running plug for silver
- both tingels on one aralle port (software)
- remove devofds
- silicon on lowest tingels
- keep midi in memory
.
Make an ambulant floppy. This is actually easy:
fdformat /dev/fd0H1440
mkfs /dev/fd0H1440      # default file system
mount /dev/fd0H1440 <mount point>
Conclusion about iforth :
You are very happy if you can build it at all.
You need a very new system for all the crap and
then old features to run termcap. If youturn things off, they
are not really turned off.

By copying all shared libraries that are needed to Artemis
I can run iforth on Artemis!

2001 nov 20 thu--24 su
hcc dagen. The gold and silver tingles did run!

2001 nov 25 mon
* make -c option system independant
* TICKS
* publish TICKS

I should at last publish the TICKS thingy. Make it a loadable
extension, that uses the timer on Pentiums.
Make it a loadable extension that reads some port on the
IBM pc. Put it on the internet.
2001 nov 26 tue
- test -c option on MSDOS
- Add TICKS to MSDOS version

Ted had the information that you could write to the parallel port,
using classic writes. Worth while to try that out.
Tried that out, no luck, it  just waits forever.

2001 nov 27 wed
Introduced TICKS and posted it on the internet.
Managed to use ticks in the low level stuff of manx.
You can use manx in this way:
INCLUDE haydn.sco
2 to TRANSPOSE
haydn
2001 nov 29 thu
- define SHELL containing the actual shell
Worked on it. It works on Linux.
Discovered a lot of nacities:
1. ARG[] is wrong and GET-ENV doesn't load
2. ARGS seems wrong
3. Editor hangs on MSDOS but not on a booted system

2001 nov 29 thu
* define SHELL containing the actual shell
* get options right under MSDOS.
* FORGOTTEN must be undone. A pointer in the middle of a word
   could be passed.
* make SRC>EXE for msdos / windows
* make -c option work under MSDOS
- make -c option work under WINDOWS
- make readable system errors part of the distribution
- other clean ups of error system

The editor on MSDOS hangs in ROUTE (part of editor), but
none of the composing parts of ROUTE hangs!
Maybe this has to do with the use of standard READ-FILE
for REFILL-TIB.
Anyway it gets too messy. I must hunt down that bug.
Version 3.259 is still okay.
The error is introduced between 3.261 and 3.262.
3.261 editor works also with the screens that belong to 3.262.
It has to do with the negation of the msdos error.
This has been removed, but now the regression test fails as
a reminder.
3.266 at last has a MSDOS version that works with SHELL.
The MSDOS version fails to work with options, because the
leading blanks lead to error 3.
3.267 MSDOS options okay.
3.268 FORGOTTEN undone.
Oops. The options were still not okay in 3.267.
They are now. -l option for msdos :okay. -e: okay -h okay.
-c: okay.
That is now 3.269
2001 dec 1 sat
Starte with work on documentation of errors, and getting started.

2001 dec 2 sun
* other clean ups of error system
* make -c option work under WINDOWS
* make readable system errors part of the distribution
The documentation of error is all done.
Created toblock.frt

32 bits code
2001 dec 3 mon
I introduced ETYPE and threw away .LINE.
Also (D.R) which was long overdue.
The msdos version passes the regression test apart from the known problem
of not negating the error numbers.
I have renamed the dpmi version to wina and the msdos version to mina.

The wina version no longer works.
How to attack this?
Version 3.261 works.
Version 3.266 in the middle fails to.

I guess I should do the following:
make the mina version absolutely clean, passing the
recursion test.
try out the wina16 version and make sure it passes the
recursion test.
Then attack the wina32 version.
One of the problems :
there are just too much differences because I mixed up
the spelling check with other changes!
2001 dec 4 thu
I have a clean wina16 version.
I have tried it: it fails.
Now I am going to add successively more new stuff to 3.261
But 3.261 is not a working version it turns out, at least
not for 16 bit.
Oops the puzzling bit is that 32 bits versions give problems
if they are made smaller than 64 K.
So 3.261 is a working version for 32 bits.
3.262 doesn't work however.
Undoing the changes from 3.261 to 3.262 in the latest version
also not.
3.266 (where the error negation is changed back, also not.)
So I guess I should try to work my way up from 3.261 to 3.272
using the assembler file, because the generic files has the
spelling errors different.
There was a problem with removing STACK. It turned out
that the two zero's saved us from a crash while executing
a 16 bits instruction in 32 bits mode.
After this is fixed and the modification to not trim the
output of biosn to the carry floag, but leave that to BSDOSN
the windows version works again.!

All versions lina wina mina pass the regression test.
All .ps files can be generated succesfully. After an update
to manual.mi in behalf of the wina doc's. To be done:
inspecting the documentation and placing the MSDOS error
message in forth.lab.

2001 dec 13 thu

Hurrah. The internet works again.
Planning:
* decision about ABORT -> START and rid of (ABORT")
* test whether documentation can be built
* regression test on *windows *linux and *msdos
* other test as in test report
- announcement in comp.lang.forth
- wikie problems mentionning in comp.lang.forth.

Notes announcement : documentation may contain loose ends,
like unexpanded macro's and inconsistent naming, indexing where
the most important reference is not obvious.
wiki problem : point Wavrik.

About (ABORT") : ." contains TYPE or compile TYPE and so it is
smart. (ABORT") could be replaced by code to conditionally jump,
or compile this. I guess I first cut the state smartness of ABORT".
Done that. Looking at ABORT . It is not just -2 THROW. It gets things
under control. A better name might be START . It makes no sense to
test stacks there. Removed. It is important to get HANDLER regenerated
if things get really out of hand. So added 0 HANDLER ! . But I guess that
initialising the 2 stacks and resetting HANDLER should be in one piece
of machine code.

I can generate pf files now, but they have no index. It is still a beta
program.

The version RELEASE6CI is marked. The makefile is not up to the generation
of fg..zip lina.zip mina.zip and wina.zip.
The texinfo must play a central role. It must never be deleted
automatically.

2001 dec 14 fri
I must just get the release out the door.
This is the last beta release 3d275.
The utilities to manipulate blocks in MSDOS are problematic,
Reason the error channel.
So the handling of blocks is left out of this release.
made releasemina.bat that must be incorporated in the Makefile.

2001 dec 22 sat
Since last night the system is up and running again, including
the local network, the large disk, a removable disk with Windows
95. The backup system works again.
Going through the documentation of lina wina mina:
* The documentation is checked for non-expanded macro's, and I
    found only few, that are fixed.
* all .ps files can be built, without problems.

2001 dec 23 sat
Some cleanup to the optimiser.

2002 jan 2 wed
Tried to improve the texinfo stuff.
1. Getting rid of the indent in paragraphs
2. Getting rid of the extra line in starting examples.
I must give up on at least 1 and 2.
See file texinfodefects.txt.
Done quite some editing on the general documentation of lina.
2002 jan 3 thu
Advanced to page 37.
Now page 50, i.e. working onthe glossary.
Advanced to the start of DICTIONARY
2002 jan 4 fri
If I take on the rule that no chapter can have more than
20 sections I have to split the DICTIONARY thing and the MEMORY thing
and the CONTROL thing.
The DICTIONARY could split of a DICTIONARY HEADER. The MEMORY
could split off ACCESS words, that include port words. CONTROL could
split of the auxiliary words (those thatr contains parens.
In the legenda it must be clear that ' is to be found in a denotation
that all defining words are primarily sought in the DEFINING and wordlist
primarily in the WORDLIST chapter.
I guess that the DEN prefix must only be used where necessary.
The double quote convention must be explained preferably by ".

I proceed now by detail inspection first.
2002 jan 5 sat --
2002 jan 5 sun
We got till OPERATORS , however there is some unfinished business left in qqq.
2002 jan 7 mon
Some more progress.
There is a small change: TRIAD gets it bootom line back.
At last it becomes clear what is going on with Split.
Anytime prelude.m4 is included you get that stuff on some channels.
Worked once through whole documentation.
Got rid of the "Split here for" lines, where I don't want them.
2002 jan 8 tue
The concept index has been fully handled.
The other indices have been checked for anomolies (like words
that belong in an other index.). Remains the paren_BACK word.

The block wordset is too long but no longer if we split of the
SAVE etc. and the memory layout things.
2002 jan 9 wed
Studied mathematics.
Read debian news.
2002 jan 10 thu
shift was still not correct. Undefining shift and symbols maybe is the way to go,
but failed.
I must proceed by making the wina and mina documentation also correct.
Then make distributions. All else may be postponed.
2002 jan 11 fri
It seems that at last I have nice subsection headers
(BLK) instead of paren_blk etc.
It was a simple change in gloss.m4 (!)
12..18 I have done virtually nothing. (Rubik Cube).

2002 jan 18 fri
Started with looking into the version mechanism.
make lina VERSION=4v0
now works.
Added an install to the Makefile.
This is no good. The install must be in a block, and as option -i.
I have made an install command a la
install -i binpath libpath

2002 jan 19 sat
Thought I killed my Debian sysem by reinstalling.
I had no backup of manx! Fortunately it was not so dramatic,
once I found back the boot floppy.

2002 jan 20 sun
Checked in the install related stuff for Linux.

2002 jan 24 thu
Decided to instroduce the _SUPPLIER_ macro for all instances
where the generated files comprise a copyright notice.
Checked in everything again, at last.

2002 jan 28 mo
Start working at the optimiser seriously.
First I must check in.
Got the new savessystem in the generic information.
Got R\W instead of R/W.
The use of the macro processor for generating forth.lab is unfeasible:
there are too many dangerous and strange constructs in general
Forth source:
  - curly brackets
  - words that are macros for M4 in particular HEADER (but maybe
   it shoudl be named _HEADER anyway.
For the moment I put my name in as is.

It looks like I have now a system that could bne the base for an rpm
file.

2002 jan 29 tue
Done a write up of optimisation stuff.

2002 jan 30 wed
Looking into the rpm documentation in detail.
It looks like it is very well designed.
Before rpm :
1. cleanup of directory, make snippets subdirectory.
2, generate man page from m4
3. make a normal release
4. announce the release
5. make also an rpm release.

2002 jan 32 thu
backupped (in due course this time).
I have celaned up the directory fig86 from 600 to 60 files.
It is renamed into ci86.
I found back the ispell.personal file.
snippets directory has been made and many others

Proceeding towards man page.
Make in a clean directory. Take care of the impossible to
make .c. Do a make clean that really removes all files.

Make -TRAILING observe ?BLANK.
Two improvements to Makefile towards a clean build:
added target cleanall, names.4 is needed for the documentation.

fri
Reduced the number of files in the working directory of ciforth
from 500 to 60.

sat mon ??
I have been thinking (vaguely) about optimisers.

2002 feb 4 mon
Get that release out!
_BITS_ in the official documentation is not expanded!
Fixed.
Made a readme according to the prescripts in ~doc/Software-..
Done. Called readme.lina.
2002 feb 5 thue
I guess lina is now ready for release.
Well an official version gives an error in the regression test,
but that is okay.
I got to split the blocks.frt otherwise the msdos release is virtually impossible.
okay done. Created
options.frt blocks.frt errors.linux.txt  errors.dos.txt
3.289 checks okay.
2002 feb 6 wed
2002 feb 8 fri
At last the archives are uploaded.
And the announcement made.
2002 feb 9 sat
Oops the archive was short. But that has now been fixed.

2002 feb 12 tue

Decision:
The outline of how the optimiser works is first to be written
in mi towards html, to be published in forthlectures.html
If finished, it is pasted into the ai document.
The generic assembler is probably the first target for the ai movement.

2002 feb 19 tue
Created analyser.frt . For now it only detects the stack effect of
code words.
The following bugs have been detected:
DO LOOP doesn't handle $7FFF,FFF0 $800,0000 DO LOOP correctly , or 0 0 DO LOOP
RESTORE in behalf of POSTFIX should be RESTORED
RESTORE-INPUT doesn't leave a flag.
(PARSE) is in fact PARSE .
2002 feb 20 wed
Written up about analyser for high level words.

2002 feb 21 thu
Changed asgen.frt. (DISASSEMBLER) no longer requires putting data into
POINTER. This is used in analyser.frt now. .SE replaced by SE?
I can now fill in the stack effect of all sorts of definitions
(CODE DOCOL DODOES) provided the effect of the constituents is
known.
2002 feb 21 fri
All stack effects are filled in automatically.

2002 feb 25 mon
Adding the NSI and NSO information to the headers.

2002 feb 26 tue
Introduced FETCHES and STORES sets for a pretty good coverage of
fetch and stores.
It works now perfectly>
So I have an analyser that finds out about all stack effects and
knows about fetches and stores.

2002 feb 27 wed
- make an optimiser that can optimise a linear chain.
- publish about compiling in line with the crc check as an example.

optimiser.mi has been checked in, with a number of concepts and a description
of how stack effects can be analysed.
I have been quite unfocussed today.

2002 feb 28 thu

2002 mar 1 fri
Optimiser documentation.

2002 mar 2 sat
Worked on Forth gg board
2002 mar 3 sun
2002 mar 4 mon
2002 mar 5 tue
2002 mar 6 wed
Optimiser coded.
It looks like the wina version release 4.0 need considerable work.
2002 mar 7 thu
- add the known defects in defects list
- maybe fix those bugs and release 4.0.1

Working hard on the wina release 4.0.
2002 mar 8 fri7 thu
It becomes clear what there is to be done.
In the first place aparently it is possible to make an alias for
the 16-bit protected mode view of the real startup segment and
make it 32-bit. In this way a larger body of code can be copied.
A first attempt at this failed.
With some testing (using a program that fills the memory with incrementing
numbers during compilation, then dumps is on execution) it turns out that
the area copied to the newly aquired 32-bit data segment was always the same number
related to how big the Forth was to start with. Now it is adjusted dynamically, by
fetching this from where the dictionary pointer actually is.
The windows Forth sits on my site now.

2002 mar 9 sat --
2002 mar 10 sun --
2002 mar 11 mon
Starting with optimiser again.
First of all I have sent the new feed with announcements.
2002 mar 11 tue
No progress with feed.
Integrated the recursive looping through things with opt-fold.
2002 mar 12 wed
I am not half as far as I thought.
An important issue it the discimination between high level and
low level words.
The folding optimisation now works to satisfaction.
And there was considerable simplification possibe compared to the original
optimiser.frt where mutually recursive words were used.
2002 mar 13 thu
Made an article and filled in lecture 5.
The optimiser doesn't handle constants well.
after 12 CONSTANT KOE : aap ' KOE ' KOE + ; KOE has the
not a " no fetch no store optimisation".
This is fixed by doing a ?FILL-SE? which prevents updating code
words, such as CONSTANT.
But there is a strange thingy. A bit is used for two flags
at the same time, and removeing that bug, makes it not work.
2002 mar 14 fri.
I have dispatched the dpp.zip database on the internet.
Maybe I should leave it there.
2002 mar 16 sun
There is a substantial cleanup, and it works except for
a situation where a zerobranch is not taken, such as in an expanded
M* .
I have just replaced M* with a code version that has no branch in it.
(Which was long overdue.).
Now the testq test runs fine.
2002 mar 18 mon
Did the wrong things ...
2002 mar 19 mon
At long last the tForth manual has been sent.
2002 mar 20 mon
I guess I have to redesign the optimiser in the following direction :
CSC holds track of what we currently have on the stack regarding constants, like so
1010101011 : the uppermost 2 are constant, then one non-constant, then one constant
etc.
For each item : if folding still holds, just copy. Else cash.
Now we still know how many constants we have. Use that to decide
whether we can optimise using a pattern matcher.
Oops. That helps with the pattern LIT .. EXEC. But it doesn't help with the
pattern  LIT .. + LIT .. +  The second + knows it has one LIT and a +.
(because CSC says so). But CSC reports a non constant before that, because the other +
had one non-constant. Just looking for the LIT is not enough :
LIT LIT * + LIT + . or even
BRANCH LIT * + LIT + .
So maybe we should keep track of the inliners.
2002 mar 20 tue
With some discussion with CH I come to the conclusion that what is to be done
is a separate go over de code after expansion and folding to do pattern matching.
At first some of the things must be changed to use SEQUENCE instead of DEA's.
Done.
2002 mar 20 wed
Redone the pattern matching, but it still doesn't work.

2002 mar 21 thu
The pattern matching optimisation works now.
The next thing is to add a trick that it goes on, as long there is some progress.

This leads to some erratic sessions. I don't seem to be able to make any progress
and weird things happen. Till I discover that I don't start up the folding correctly.
!OPT-START must be done within each EXPAND , not before the loop.
Furthermore there was a bug with the ^^ (CRACK-CHAIN).
Since removal of ^^ debugging went smoother. And version 1.15 now loops over the
optimiser until there is nothing left to be done.
^^ reintroduced. All test examples now work properly and the explicit calling of
extra parses with internal optimisers is no longer necessary.
Also a testr example introduced, where the associativity is exploited.
THE M* didn't work because the stride of the table was too low. Now the stride
can be adapted.
2002 mar 22 fri
At last I have sent the mail that contains a description of my optimiser.
I have formulated and sort of designed some more improvements.

2002 mar 23 sat
Rick Hohensee has sent an improved version!
I have saved it. (rednickify it.).
2002 mar 24 mon
Coded the swap search routine. (COLLECT-SWAPPER)
2002 mar 25 tue
Debugged the COLLECT-SWAPPER routine.
Integrating it is a problem.
What I did wrong. It must be a separate pass.

2002 mar 26 wed
anyway the swapper works.
2002 mar 27 thu
The annihilator code.
2002 mar 28 fri
The annihilator debugged.
The folder thinks ( BRANCH <OFFSET> ) is a nice piece of code
to execute during compile time.
So I guess I should introduced the no control change bit.
Do not forget that we also have to invert the no stack side effect bit.

2002 apr 2 tue

The flash program accepts filenames as arguments, however crashes
on any error whatsoever.
2002 apr 3 wed
-I must really backup now.
-try to remove the problem why it would work crash on any errors.
- design a kind of annihilator list.

2002 apr 9 tue
The "crash on any errors" of turnkey systems is clear now.
If you compile a program, the handler has been filled in
to catch any errors from the block. So there are no uncaught exceptions
in the resulting program, only crashing exception.
The solution is to put a 0 HANDLER ! in screen 3 before TURNKEY
This works nicely. With the new forth.lab and
alias lina=lina -l forth.lab
we are on our way for a good flash program.
Introduced $[] to select the ith line of a program.

The elektuur flash program now works quite nice.
It turns out that we certainly want them in a vocabulary.

2002 apr 10 wed
The little tools like ARG-STRING ARG-NUMBER are quite nice, and they
will probably fit in one screen.
I have tested almost everything and have to add now a few remaining things :
* testing of the interface
* discriminate between Intel hex and binary
* convert to binary
* analyse file name for bin hex
2002 apr 11 thu
For the elektuur flash : the following remains :
- one file
- write intel hex
- dynamic allocation

* write man page.

kdehhelp is ideal for viewing man pages.

2002 april 20 sat
The improvement of PRESENT? made at last.

2002 april 21 sun
The installation of a proper error handler for option -c,
such that it doesn't try to start up an interpreter in turnkey programs.

2002 april 22 mon
QSORT is now in the lab as a preparation for using it in the optimiser.
(blocks 4.1.1.3 )                                             )

optim1.frt contained the problem with annihilating that a jump into the
code spelled problems, and jumps over the code would become too long.
* change ANNIHILATE to only identify annihilatable parts maybe only not
  regarding jumps.
* do not have trivial annihilatable parts (that start with DROP or 2DROP)
- make all branches absolute,
-  make a list of targets
- eliminate annihilators based on branching into them
- reinvestigate interior of eliminated annihilators
- Annihilate annihilators
- make all branches relative again

and retry them
2002 april 23 tue
*  make a list of targets
* eliminate annihilators based on branching into them
  (i.e. look up whether there is a branch from any of the BRANCHES
  list into the current annihilitee.

Making all branches absolute, then relative again doesn't solve a thing.
Instead: what we do now is once we detect an annihilitee we replace the
discarded area by DROP's, and rework the list of BRANCHES.

2002 april 25 wed
* eliminate branches from set starting from annihilators.

2002 april 26 thu
* adjust branches over the gap from left
* shift to remove the gap
* fill remainder with drops.

I can now annihilate :test IF 1 ELSE 2 THEN DROP ; to : test DROP ;

The back branches have not been tested because the code analyser gets
into an infinite loop.
2002 april 27 thu
* No longer crashes on back branches
* back branches over gaps can be handled
- BRANCHES must be adapted after eliminating GAP

2002 may 1 wed
Looking into optimiser.frt once again.
* BRANCHES must be adapted after eliminating GAP

It still crashes for the code
: test
IF 1 ELSE 2 THEN DROP
IF 3 ELSE 5 THEN DROP
;
2002 may 2 thu

2 more bugs solved, including the one that resulted in the
crash for two gaps in one word.
So ANNIHILATE seems to be in good shape now.

Introduced FORBIDDEN-GAP? because there must no be jumping into the
gap either.


2002 may 3 fri
* introduce 2>R
- do folds in place
- Use FORBIDDEN-GAP? to forbid folds
- do swaps in place
- Use FORBIDDEN-GAP? to forbid swaps
* do optimisation in place
* use forbidden-gap? to forbid matches

The matches now are done in place.
Moreover a bug was found in FORBIDDEN-GAP?

2002 may 6 mon
* do swaps in place
* Use FORBIDDEN-GAP? to forbid swaps

2002 may 7 tue
There was a defect in FREE-WRT? (a 0 instead of TRUE for the
case that a branch jumps to the start of a gap.
What is left to do:
- do folds in place
- Use FORBIDDEN-GAP? to forbid folds
- handle EXIT and LEAVE in OPT-EXPAND
* handle branching in EXPAND

Introduced EXPAND-NEW in front of EXPAND.
This still handles the regression test.
Now handle branching in this EXPAND-NEW.
This works for a simpel unconditional backward branch.

2002 may 8 wed
* simplification of EXPAND in view of EXPAND-NEW
- handle EXIT and LEAVE in OPT-EXPAND
- Use FORBIDDEN-GAP? to forbid folds
- do folds in place

It turns out that the backward branch example is not handled
in the regression test. It crashes.
Getting rid of the now superfluous cpying is the first thing to do,
I guess.
2002 may 7 thu
Despite efforts I didn't succeed in doing the folds in place.
2002 may 10 fri
* clean up made gap elimination a tool.
* do folds in place
- handle EXIT and LEAVE in OPT-EXPAND
* End fold where a branch target is detected.

I have put up the gap correction as a separate tool.
It is no good to forbid folding using FORBIDDEN-GAP? because
branches out of the folded code are not possible (the folding
breaks down there.) Moreover, if we make the folding break down
at branch targets, we don't miss folding oportunities, which is the
case using FORBIDDEN-GAP?.

After a few hours it works. The Chuck way. Just reimplement!
There is a difference in the regression test, caused by the better
handling of branches accross the gap.

2002 may 14 tue
Some more debugging reveals that there was no problem in OPT-EXPAND
as expected, but it was with the folder. The remedy is not to consider
EXIT as optimisable code.
Stiil the example J crashes.
2002 may 15 wed

Done a cleanup. The "stack depth changed " optimisation killer bit is now
filled in properly. This doesn't help.
But the example J shows a wrong offset in the branch that results from the
expansion of an EXIT.
This is puzzling as the other exampling featuring two exits is no problem.
Anyway the problem should be fixed real soon now. Than we can proceed with leave.
2002 may 16 thu
It becomes clear. The offset is correct, then spoiled when the SHIFTS
are applied.
2002 may 17 fri
The precompensation works.
The regression test is changed. The results to compare against
Forth too. And the decompilations are compared.

2002 may 21 sun
At last introduced the special branching w.r.t. LEAVE.
Posted the results.

2002 may 22 mon
Eliminating branching to branches.
This works. Going on with dead code. It is discovered that the ANNIHILATOR
must remove most of dead code like   BRANCH [ ... ] A B C [ branche lands here].
This is because all paths throough this do not affect the lower stack, plus.
The same applies to 0BRANCH [ 0 ] and this cannot be handled.
The reason is the recurssion. It must start with one advancement,
otherwise it will always return an empty GAP that indeed meets the specification.
Now if we follow two branches out of 0BRANCH the branches must be able to stop
immediately.

2002 may 23 tue
Trying to find out if we can do by using a CATCH THROW mechanism.
Indeed. We can now handle `` 0BRANCH 0 ''.
Problem with DO LOOP. LEAVE must count also the DO's, and go on unitl
after one more LOOP than the DO's. Furthermore the optimised
code of DO .. LOOP example testK is ugly. There is too much optimsied away.
This is caused by not recognizing the LOOP as a branch target.

2002 may 22 wed
Just making the assembly stuff up to date.
asgen.frt as80.frt and asi86.frt went smoothly.
Now trying to get rid of all the quoted (obsolete) definign words
in asi586.frt. Made a script to introduce commma's for better readibility
and a minor change (rid of UM/MOD). Saved that one.
Now making all numbers exactly 4 bits. That succeeded and passed the regression
test. Now an automatic editing to get rid of the quoted words.
This has been done and checked in. (3.7)
Now automatical editing to get rid of the AND's introduced into this.
Done. Finally trimmed down the position of bits in commaers
that was above 16 for legacy reasons. Version 3.9

Idea's of what still can be done:
 - CREATE-- that results in -- not showing up in the dictionary
 - The placeholder _ for the xt's in asi586.frt
 - Cleanup of >CFA . I think where a proper xt is used with EXECUTE
    they shouldn't be there.


2002 may 23 thu
There is something fishy about the VOCABULARY search.
Putting F-D and DDD aliases for ASSEMBLER words in FORTH cannot find
the assembler words, while clearly they are in the search order.
This is a strange problem that doesn't show up in a straightforward test
of 4.0, but does in a test of 4.0.1.3 .
 * CREATE-- that results in -- not showing up in the dictionary
 * The placeholder _ for the xt's in asi586.frt
 * Cleanup of >CFA . I think where a proper xt is used with EXECUTE
    they shouldn't be there.
All been done now and I can check in.

The program ps2pdf supposedly handles postscript files.
But the result is ugly and extremely slow with acroread.

The best stuff goes directly from text to ps.

Trying to do the sib byte test. This gives errors.

2002 may 23 thu
At last doing the sib byte works again. This was slightly tedious,
but probably mostly due to a lack of concentration.

2002 may 24 fri
Full ahead with the dec Alpha version.
2002 may 25 sat
Idem
2002 may 26 sun
Made a color highlighting addition.
2002 may 27 mon
Published the color highlighting addition.
Ahead with dec Alpha.
2002 may 28 tue
Down to no differences with the latest Intel version.
Evenign regression test with Coos Haak.
Three problems remaining. Solved these myself later at night.
The regression test is now fully installed. Including the test of
mister Hayes.
2002 may 29 wed
Looking into the DEC Alpha assember.
It looks like the assembler is modelled after digital Unix inasfar
PALcode. The callsys code works (i.e. Linux system call.).
The RSCC instruction I would like to have very much (TICKS) is not there.

The lina version has a number of alignment traps.

The times system call can be used to implement TICKS.
The resolution is 10 ms on the Intel Linux and 1 ms on the Alpha.

The arguments and the SAVE-SYSTEM require !32.
Now before releasing (even preliminary)
I have no choice but to fix the mechanism for making a block file.
2002 may 30 thu
Making a version with source fields fails.
This is because of the header.m4. This is a fix I don't want to make
right now.
Furthermore I must not try to have the SAVE-SYSTEM working again before
releasing.
The make file has been copied and now generates the documentation okay.

I have generated the original errors.linux.txt for Alpha.

2002 may 31 fri
All modifications to the block file, made at the creation of the Alpha
Forth have been applied to the copied blocks.
In particular : save system works now.
2002 jun 1 sat
It looks as if the bulk of the manual has been updated correctly.
Not however the introduction, and also the sysem must still be switched into
using source fields, and no longer be limited to 256 blocks.
Gone through all m4 files. The documentation generation for aiforth
system now looks
compatible with ciforth 4.1.
Two more inventions :
    define( genforth, aiforth)
    define( thisforth, lina).
The Dec Alpha Forth is of course also generic.

The documentation framework and the chapter ``manual.mi'' have been updated.
This means that the errors are properly documented, and the status of the Alpha
assembler is explained.
All .mi files have been checked and updated now.
The sourcefield turned out to be not problematic. The file header.m4 must
be updated too, allocating space for one extra cell. That is all.

The Neil Baden program showed a bug in ?DO in the Alpha Forth.
This one has been sent in now.
2002 jun 2 sun
2002 jun 3 mon
Before going on with the Alpha assembler I must take care of the
interesting bit in asgen.frt
Suddenly the tests for 8080 8086 and 80386 don't work anymore.
First leave at that for the moment. One mayor shortcoming is that the
assembler doesn't switch to HEX appropriately. The second one that the
CODE and ;CODE words must not be in the assembler wordlist but in the
Forth wordlist. I leave it at that and just try to get the Alpha
running. No, I didn't. I fixed it up to the level that the test for the
8080 runs again.
2002 jun 4 tue
Gone a long way towards adding fp to the dec Alpha assembler.
Evening : got it all done!
2002 jun 5 wed
Testing. The AMASK stuff has been checked thoroughly.
I need a slew of bad bits from everything interfering.
Introduced a bit to indicate that the choice between #| and R|
is not relevant. It sends the disassembler along the wrong trail.
2002 jun 6 thu
Must at last get the assembler okay now.
2002 jun 7 fri
The assembler is fully checked against the decompilation made
in by as.
2002 jun 8 sat
Forth gg meeting. Demonstrated the coloring.
Appointment with vd Mark to get serious about the documentation.
2002 jun 10 mon
Plans :
*Get version right in ai86
*Check documentation for bad mentionning of Intel 86.
*Implement AMASK distribution over bad bits.
*Rename the registers according to the doc
* get tables in assembler.mi of Alpha right.
-Make official release of Alpha
-Add Alpha assembler to the assembler distribution
-Announce Alpha assembler to the net c.l.f
-Announce it to Linux announce.

NO:
-Invert the order of registers and test

Interestingly indeed the documentation looks better if the
ps file is generated from the texinfo file on the S.u.S.e 7.0
system instead of the Dec Alpha itself!
I leave renaming the registers alone. That is not really worth while,
and risky at this stage.
2002 jun 11 tue
*Make official release of Alpha
8Add Alpha assembler to the assembler distribution
* Put alpha assembler on the net.
* Put Alpha release on the net.
-Announce Alpha assembler to the net c.l.f
-Announce it to Linux announce.

The official release consists of a binary distribution to
be put on the net and a source distribution to be kept in
$W/archives.
The assembler for the ALPHA comes in the general Alpha assembler
distribution.
The test for the 386 failed and required an update of testset386.
test.mak has been adapted to include the DEC alpha.
The archive for the assemblers has a README.
The references from forthimpl to the alpha and other releases
has been improved, and in general the crossreference towards
the assembler and between the version that have their own description
(so unlike the mina and wina that are hardly more than a binary
distribution.).
2002 jun 12 wed
Not doing much
2002 jun 13 thu
Simplified ENVIRONMENT? just using (FIND).
Simplified (FIND) using (MATCH),
no more MATCHING-WORDS or RESULT.
checked it in.
2002 jun 13 fri
Quarreling about info on the internet.
info -f lina.info
supposedly works.

2002 jun 18 tue
Coos Haak has found 3 bugs / PFCR's.
- FORGETTING in MEASURE-PRIME is a mess
- $@= returns inverted condition
- ARGC not implemented for MSDOS
  (but required for the compilation in 4.1 !)

The first is solved by using ?LEAVE-BLOCK instead of NEW-IF.
The second by leaving out the word alltogether.
The third is filed in todo.txt.
Experimenting with threads. fork works, but for
doesn't foit the bill (copy on write!)
2002 jun 19 wed

With true cloning (which is intended for multitasking)
(i.e. system call
stack are used by both processes which tends to either crash
or leads to more of the same actions.
Furthermore before I used the trick
'doit >DFA @ >R with 'EXIT >CFA @
the execution address passed to clone, I could not have it run
code I want it to run.

Worked out the clone example somewhat better.

Fork could be useful when you want to do a MARKER.
Did a post to that effect on Usenet.

The clone example works to the point where I can indeed clon
a certain action.

2002 jun 20 thu
Fooling around with threads, and little result.

2002 jun 21 fri
Published on comp.lang.forth that fork could be used to provide
MARKER. This however is actually not true, because the stack BASE
etc. at the moment of invocation of the MARKER is not used.
It looks like I am getting threads under control. The problem was that
man 2 clone doesn't document the system call clone, but rather some
c-library thingy.
2002 jun 22 sat
Published threads.frt on comp.lang.forth
2002 jun 24 mon
Talked with Frans vd Mark.
It looks tha I should proceed along the following line:
- study win32Forth on sourceforge
- copy ciforth tentavily into a CVS thing.

Frans is going to try to port ciforth to Solaris.

2002 jun 25 tue
installing the sound card.
It appears that kmix gives error messages all the time.
Playing midi stuff doesn't work very nice, the sound is distorted
especialy when the system is loaded extra.

Showing the threading to Coos Haak.
It just doesn't work!
The memory is not cloned.
2002 jun 26 wed
Deinstalled the sound card.
Looking deeper and deeper into the clong stuff, I find that it is poorly
documented and not working as advertised in man 2 clone.
2002 jun 27 thu
Studying CVS further. It looks like a must.

2002 jul 1 mon
DON'T KNOW WHAT TO DO.

2002 jul 2 tue
The threads work. Just stupid mistakes, a race condition on
usage of the return stack.

2002 jul 10 tue
The threads work, also cooperative.
The simplified preemptive version works. Another stupid
race condiotn removed with help of CH.

2002 aug 11 mon
The threads are a bit messy. I don't want to save it in the source
system. (and there was no lock anyway.) So the experiments using
threads are in the subdirectoy threads.
2002 aug 12 tue
Working on regular expressions again.
2002 aug 13 wed
The $DO $LOOP mechanism (inspired by a python advocacy post) has
been implemented. It now must be added to the forthlectures and
the blocks.
2002 sep 3 tu
After the holiday I am disoriented. At least the gigantic number
of messages in the ICTbox has been read, and Frans Verschoor is
gone now.

Trying to get an overview of what to do.
Maybe continue whith the exercices in the master plan of the
computer intelligence, or reinstalling stuff on Artemis.
First get another read of my thesis.
Working on re. The idea is to work polish for + ? * .

2002 sep 4 wed
Finally started. First defining character sets.

2002 sep 16 mon
The regular expressions stuff has been fully coded, except for the replacement
things. I want to proceed along the following lines.
1. Make it running on the released version of lina (4.0)
   by incorporating the library screens (such 2SET+! SET).
2. Make a comprehensive testset along the way.

2002 sep 30 mon
RE coded and placed on the internet.

2002 oct 15
12:40
Yesterday I made an inventory of the changes in ci86.gnr, after
4.0. The cvs directory has been created a few days before, by
eliminating from rcs all the 4.x.x.x version. The idea is to rebuild a
stable version, and test it thoroughly, than go on developping with the other
version as planned.
Before this also the changes to the blocks must be summed up.

thu 2002 oct 16
* clean up forth directory, move things to PROJECTS
* subdirectory lina with sources from cvs, build and test lina
* update to version 4
- Makefile able to create lina-N.N archives properly
- Add all innocent changes from ci86.gnr blocks.frt Makefile options.frt
- assembler working properly
- Full scale test as in testreport.txt
- Collect reports
- Handle reports
- Place lina in own directory
- Load up Wina version to .. sim archive
- Advertise, announce
-
forth/firstattempt has finally been deleted.
It has been backupped more than a hundred times.
Furthermore the subdirectory ciforth has been created.
The command remdup was not really good.
It deleted files that are not present in the other directory.
In trying to run make for the latest pre-4.0 version in
forth.ciforth the Makefile run into trouble. The dependancy from
RCS files gets me in trouble.
After removing this rule from the Makefile lina passes the regression
test. The long standing problem of a corrupted lab file after a test
has been solved too.
All files have been transferred to version 4.0 now.
To be mended before release 4.0.1 :
- assembler working, at least 30386
- the real bugs found this far
- the conveniences in the lab file (DEFER VALUE ...) that have no ill
    consequences
All updates in the options file have been introduced into cvs.
However, MY-ERROR should use OLD: that is not working.
Moreover

Updates list :
 DPMI version can turnkey into more than 64 K
 -c options aborts (not hangs) on errors
 ISN'T UNIQUE prints the name that isn't unique on the error channel
 POSTFIX works again
 MATCHING-WORDS is only used in (FIND)

It turns out that CRACK no longer works after the update to (MATCH)
7h
fri 2002 oct 17
12:00
I have retraced the change to (MATCH) , but it is now only used in (FIND).
Without introducing this we have a reasonable version that passes the
regression test.
Except for the following update
    MATCHING-WORDS has been replaced by (MATCH) allowing hooks for a case
      insensitive system
all changes of 4.0 have been incorporated.
(ci86.gnr 4.4    blocks.frt 4.2.)
First real improvement: CO implemented and used for
using regular error message even with -c options.
(Incorporating blocks.frt 4.1.1.5 and ci86.gnr 4.1.0.5)
(ci86.gnr 4.5    blocks.frt 4.3.)
It looks that the problems with ISO-incompatibility with CHAR and
' can be solved by :
 - making CHAR not IMMEDIATE
 - have an alias for ' in the FORTH dictionary that is not IMMEDIATE
   and not a denotation.
mon 2002 oct 21
Apart from the above, I have discovered the problems
- there are no more backups
- the archivation system is not up to snuff

I guess I will go on with this:

- Add all innocent changes from ci86.gnr blocks.frt Makefile options.frt
 * change blocks.frt such as only to use the denotation '
 * have an alias for ' in the FORTH dictionary that is not IMMEDIATE
   and not a denotation.
 * making CHAR not IMMEDIATE
 * get CRACKER working again
 - add BIN-SEARCH QSORT DEFER
 - make chess.frt thingy loadable

Cracker now assumes a high level word is a chain of execution tokens.

tue 2002 oct 22

Investigations reveal :
- the assembler is a bit messy.
  * assembler-high should rely on assembler
  * proper headers for each block, and consistent layout
  - rearrange blocks if necessary
- MS@ requires the use of TIMES if TICKS is not available
  * define ticks_per_second using MS
  * define MS@ from TICKS, or if impossible from : times 0 0 0 43 LINOS ;
* TRIM left something on the stack

FORGET-VOC doesn't work for two reasons :
 all totally forgettable wordlist must be most recently defined.
 all to be forgotten words in a wordlist must be go on till the end
However this must be added to the instructions, I am not inclined to
change FORGET-VOC.

With the help of Coos Haak the word TICKS (under Linux) is now protected
from being used if it is not available. To this end we need to inspect
the ID-FLAG (bit 21) in the EFLAGS register. It must be settable and
resettable to make sure we have a 32 bit processor. Moreover the instruction
CPUID must be executed with data 1, and bit 4 must be inspected
in the DX register. It must be on. (But in practice 1BFH is returned for
old Pentia.)
This update resulted in howto.txt 4.2 and blocks.frt 4.5.

Added to forth.lab : DEFER IS   EXCHANGE PAIR[] QSORT .
Simplified MEASURE-PRIME : no extra word / POSTFIX .
Removed : $@= .
* add QSORT DEFER
* MS@ requires the use of TIMES if TICKS is not available
This update resulted in blocks.frt 4.6
wed 2002 oct 23
Added [IF] etc. to blocks.frt.

* add BIN-SEARCH

With respect to the matter of not using DEFER in QSORT and BIN-SEARCH
I refrain. Now I can just cut and paste these block for those that
want a utility.
I have added a host of things to allow fcp.frt to compile.
BIN-SEARCH has now a reasonable test in via binary_search_test .
BIN-SEARCH needs no DEFER, because the execution token remains on the
return stack.
So in blocks.frt 4.7 we have :
Stack manipulations, double return stack words, conditional
compilation words, values, sets added.
Improved binary search with respect to empty range, tests added.

This leaves only thread related blocks from the RCS system to be
copied.
This is blocks.frt 4.7 .

The last patch from the stable version if ci86.gnr has been applied
to cvs, the one eliminating MATCHING-WORDS and RESULT. The world
RESULT had to be removed from CRACK too.
blocks.frt 4.8 ci86.gnr 4.7
Some real bugs removed :
*RESTORE-INPUT doesn't leave a flag.
*TRIM doesn't clean up stack
* ;C must be renamed to END-CODE
  plus preparation for optimiser:
* DIGIT now has deterministic stack effect and ?DUP as much
  as possible eliminated (
blocks.frt 4.9 ci86.gnr 4.8

Some more harmless updates:
* optimiser killers in high level like : 1+ 1 + ;
* all code definitions now end in NEXT even if not needed
* documentation details
Resulting in ci86.gnr 4.9

The words CHAR ' are definitively no more state-smart.
All kinds of small words added, such that John Coombs chess program loads
with only words from forth.lab
blocks.frt 4.10 ci86.gnr 4.10

thu 2002 oct 24
Added case insensitivity to ciforth.
Amounts to one screen, a small improvement in (MATCH) and
lots of documentation.
blocks.frt 4.11 ci86.gnr 4.11 + .mi files

fri 2002 oct 25
Been experimenting with an ERROR that does a better analysis.
It gives messages like
Error in file aap.frt
Cannot find xxx . Trying to define yyy by definign word zzz .

sat 2002 oct 26
POSTPONE <non-exisiting> doesn't give a proper error message.
It uses 0 ?ERROR since day one! As does [COMPILE] .
Also edited the error list in the documentation.
I have put a pad in screen 1, replacing PAD.

sunt 2002 oct 27
Added PRESENT to mean an exact match, contrary to FOUND.
ci86.gnr 4.12 plus others.

mon 2002 oct 28
In fact added AUTOLOAD : a facility to automatically load
facilities from the library.
REQUIRE and thus autoload made case-insensitive.

tue 2002 oct 29
WARNING Was a bit messy, with as a result that redirecting channel
2 cannot get rid of the warning messages for recompile. (Writes
space+cr on stdout.)
FCP.F does now autoload.
Added -t option to AUTOLOAD. This block also changes REQUIRE to
caseinsensitive.
Cleaned up the setting of WARNING . MESSAGE did write on standard
output (space and cr)!
ci86.gnr 4.13

Documentation fixed, like prefixes etc.
Some files added for archive, but README.lina is still not
in cvs.
It looks like a stable pdf file canbe made using pdftex
several times. THe index file apparnetly contains correct line
numbers, but they show up wrong in pdf.
Like making .ps files you must run it several times to get the page
numbers right.

ci86.gnr 4.14

Trying to build wina.com. The change in (CREATE) must of course
be conditional. ETYPE is not available on Windows.
wed 2002 oct 30

The mina and wina programs pass all the tests.

Building version 4.0.1 for generic lina wina and mina.
Oops. I must commit first, then generate archives from what
is cvs. I now have the wrong file numbers. So be it.
The mina version is not placed on the web.
The generic and wina versions are.

fri nov 1
Contacted Simtel for upload

sat nov 2
Generated .pdf file for chforth, together with Coos Haak.

sun nov 3
Fixed README.ciforth for 4.0.1. It is not part of the archive yet.

nov 4-8
Worked on updating to Suse 8.0

sat nov 9
Updating was unnecessary, as pdftex worked okay.
I just forgot to run texindex to make the indices.
I am now left with a 8.0 with a non-running YAST2,
a non-working internet interface and a non valid rpm packages
database.

tue
the network works again.

wed
KDE and YAST work again

tue
Reinstalled rcs cvs

fri nov 15
Restored the cvs directory.
The system works more or less since switching to Suse 8.0.
I have managed to get rid of junk in my working copy of CVS.
There is a branch rel-4-0-patches . The working directory
will be called 4.1 shortly after the threading patches have
been applied. Bug fixes for 4.0.1 will start from rel-4-0-patches.
So to say :
  4.0.0 is lost in cvs.
  4.0.1 exists in cvs and is widely distributed.
  4.0.2 still doesn't exist.
  The branch point for fixes is half way between 4.0.1 and 4.0.2.
Going towards threads!
The latest patch, introducing the hooks in ci86.gnr works
with _THREADS_(_yes) and _no .
Furthermore the regression test works with the threading added
into the library.
After some fooling around with the memory layout.
threads.frt work :
INCLUDE threads.frt
PAUSE   ( we gaan naar rome)
do-it ( type lower case, reflected as upper case, end with ^D)
sat nov 15
Some cleaning up done. There must be constants for rts, dts end
tibsize. There are two updates, and the first one is
only about generating the documentation. It should be separated
out and added to release 4.0.2.

It looks like the Pre-emptive and cooperative multi-tasking
work.

2003 jan 27 mon

At last ee is properly installed on Suse. It has an archive
and a HOWTO for compiling an xterminal version and a console version.

We can now add threads to the official experimental version of ciforth.

Or to the official released version??

It is by no means clear, but there are now 2 cvs tags present.
(release 4.0.1 and patches for 4.0 ??)
It looks like : there is a concurrent version with patches for
4.0 ...
There is a new version 4.1.

It is unclear what the version in forth/ciforth is :
 hopefully it is an improvement from 4.0.1 towards 4.0.2
 to get rid of some reported bugs.

2003 jan 28  tue
2003 jan 29  wed
2003 jan 30  thur

No progress.
2003 jan 31  fri
At last connected again to the internet.
The serial ports of the Plato board were broke,
now with the internal serial card it is fine.

Some days :
No progress.

2003 feb 5 wed 7h30
No longer worrying about my health I have these new plans :
  8 hour work on AI
  1 hour organ exercise
  2 hour SP activity (on average)
  start day with aikido exercises

If AI is far ahead of schedule, I must use that time to do
the menage.

I do no longer have a working iforth on ``apple''.
The iforth installation on artemis/debian is severely hacked.
The current manx.frt is an edited file, based on the latest version.
Its status is unclear.
There is a branch from the current 1.86 version of manx.frt with lots
of simplifications. I am not sure about that status either.

I guess what I should do :
* copy the archive to apple
- get additions from forth.lab to miscutil.frt for the moment
- make the apple version work with the latest forth.lab
- make the development directory on artemis for lina compatible with apple
- start making manx gforth compatible
- debug the branch using gforth, fold back in
- add modifications from the latest version to branch 1.86.1
- debug the branch using gforth, fold back in

Strategy
- keep the development directory on artemis for iforth.

The official version 4.0.1 of lina is installed on apple.

The manx archive works again on apple.
2003 feb 6 thu 8
Almost ported to gforth.
Problem with access to headers.
2003 feb 7 fri 8h
The gforth package loads almost, except for access to headers.
2003 feb 8 sat 1h5
Hcc Forth meeting. Anton Ertl supplied information about
headers this works now.
2003 feb 9 sun
I can now really compile the gforth versionof manx totally.

2003 feb 10 mon  m 1h45 a 3h other computing activities 1h
Starting with debugging manx for gforth.
To the point that gforth writes to the tingle tangle.

gforth and lina can again :
* play a score file using PLAY
* execute TOONLADDER properly
* execute `` DUMP-MIDI toonladder.mid toonladder.txt'' properly

One problem remains : the names of instruments are not correct,
it looks like some random data.

This is about the time to ditch iforth.

2003 feb 11 tue m 2h30 a 2h e 3h sp0h10
Plan :
* load the speaker driver without disturbing remainder
* play toonladder on speaker using PART
* play toonladder on gold using PLAYS
* play toonladder on speaker using PLAYS
* compose a piece for speaker plus gold. Works.
* do PLAY-OFF for all parts at the same time.
- adapt the silver driver
- load also the silver driver without disturbing remainder

After introducing the speaker PLAY toonladder stops before
playing the last scale. This is because the PLAY-OFF of
speaker is done, and its buffer is empty.
Hence that PLAY-OFF must be done for all parts.

This also works for ciforth.

2003 feb 12 wed m 3h30 a 3h
* use half-objects for the RECORD things
* adapt silver driver
* load and run silver driver
- test timing

I have introduced the half object successfully for the
track header but not totally for the record itself.
DUMP-MIDI works nice again. The problem of incorrect midi names
had to do with alignment in the midi map GM-map .
FIELD-TRKH has been eliminated, but the creating of record
structures is not fully done with |F: .
Also R: has now been eliminated.
Further cleanup (conditionals).

The silver driver had been added, and doesn't interfere
with the other drivers present, software wise.
Helas : the silver driver only rattles the relays erroneously
for now.

2003 feb 13 thu m 1h45 a 2h
The timing is much better now I have introduced the
giving up of the time slice every now and then.
Furthermore it is mandatory there is no KDE or some such
sucker is running on the machine.

Some testing has been done. It looks like it is okay to give up
the machine if there is 30 ms to spare. And then wait for 20 ms.
The timing has been tested. The delay for a low scale is
2 ms for an event at least and 22 ms worst case.
Of course there could be done some good work in preparing buffers
before hand.

2003 feb 14 fri
Artemis went down, is probably irreparable.

2003 feb 15 : anti Iraq war demonstration
2003 feb 16 sun

Working on Artemis. Peter Nooy offers help.
2003 feb 17 mon
Building up the system for twin prime counting.
+PS.
2003 feb 18  tue
Visited Nicely's site again. Fall last year the record
has been improved from 4.65*10^15 to 5*10^16.
I need 10^7 bytes (10 megabytes) for the prime table alone
if I want to improve on that.
I have built up the new system using the 1 Gbyte disk.
The transputer runs okay, with 8 Mbyte. I have not yet
connect any transputer.
Peter Nooy has tested my P III, it is okay, so Artemis'
motherboard is broke.
Now testing orange using the gimp prime test.

2003 feb 19 wed
Worked on 4 color problem.
2003 feb 20 thu
Bought a new motherboard for Artemis.
2003 feb 21 fri
Four color problem
2003 feb 21 sat&sun SP

2003 mar 18 tue
2003 mar 19 wed
At long last my transputer network has been built up and is
counting twin primes.
( A twin prime are two prime numbers differing by 2.)

It consist of a grand total of about 300 processes, 3 for each of the
106 calculation nodes. And 4 on the root nodes, not counting
the Forth interpreter.

The console system is a PC running Windows 3.11 with a
8 Mbyte Parsytec card. This card is connected to 3 pipelines:
a parsytec supercluster with 56 transputers with 4 Mbytes each,
a pipeline with 24 transputers with 4 Mbytes, and a pipeline
with 26 transputers each. The latter two pipelines are realised
on an assortment of boxes with transputers.

At the time this hardware came into my possession it was already
obsolete. The world record was at 137 . 10 ^12 then.
I can better this record in 14 days with this hardware.
It probably meant that no serious hardware was dedicated to the
task of twin prime counting at the time.

The current world record is now 5 . 10^16 totally out of reach for
this computing network.

On the program :
The calculation progam is written in assembler supported by an extensive
Forth MACRO mechanism.
Booting, starting up and loading is all done using a transputer
Forth (tForth) running on the Parsytec card in the PC.
The display show what each transputer is doing, and there is
regular crc checks that guard the integrity of the programs.

It is not at all advanced mathematically speaking. There is just
a sieve. From a programming point it is more interesting.
Only 15 twin primes are possible in a range of 210 numbers.
This program stores a range of 420 million in one million
machine words ( ca. 4 Mbyte).

The program is available at the site below. It is not entirely
up to date regarding the latest improvements, however these are
small.

I uploaded wna4d0d1.zip and mna4d0d1.zip to the simtel archives.
I didnot fill in the xml properly.

2003 mar 20 thu

The simtel boys didn't accept it. I wrote back that I will upload 4.0.2

The padgen program just doesn;t run on windows 3.11

The following problems are due to be solved into 4.0.2
- ARGC is not known, so compilation fails
- this triggers reorganisation of the whole ARG ENV stuff
- better run "C:\command.com" not "\command.com"
- the README of mina/wina is pessimistic about pdf
- ETYPE probably works under MS-DOS as well
- you can't change the drive
- DIR doesn't work in emulator,
   at least the length of the command tail is wrong (contains ^M)
  This means : COMMAND.COM must become C:\COMMAND.COM
- compiling mina results in problems with THREADS

It turns out that mina runs well under emu.
First make the font huge, than resize the window to 25 * 80.
It even runs the block editor well!
Beware of running "edit.com" though, because alt keys are not accepted.
before you type F10 (! Don't ask how I found out.)

The dos emulator refuses to run "DIR" etc.
It keeps complaining about not finding the file.
This triggered an investigation in SYSTEM, and resulted in
finding the above bugs.
However the problem is simply: there must be an absolute path
for COMMAND.COM. When running on drive D: command.com just doesn't
cut it.

2003 mar 21 thu
The following problems are actually addressed into 4.0.2
* ARGC is not known, so compilation fails
* this triggers reorganisation of the whole ARG ENV stuff
* better run "C:\command.com" not "\command.com"
  DIR doesn't work in emulator on Linux because of this.
* the README of mina/wina is pessimistic about pdf
   at least the length of the command tail is wrong (contains ^M)
* Makefile copied from 4.1
* test.mak copied (for doc .pdf index. etc.)

The latter ensures that the documentation can be made correctly.

mina 4.0.2 passes the regression test on DOSEMU !
I can do SAVE-SYSTEM and TURNKEY, but -c doesn't work.

2003 mar 24 mon

 - SEARCH-ORDER is in fact CONTEXT
 * mostly textual remarks of vd Mark processed
 * CPU as a label may cause problems --> LCPU
 * comments
2003 mar 25 tue
lina passes the regression test.
2003 mar 26 wed
Working on the release. text's in behalf of Simtel.
I have installed Windows Nt. wina works, but I can't compile
nor SAVE. This generates exceptions.

2003 mar 27 thu
Release 4.0.2 seems ready.
mna4d0d2.zip and mna4d0d2.xnl have been uploaded to simtel !!
2003 mar 28 fri

Confirmed threads into cvs repository.

2003 mar 28 sat
Fooling around?
2003 mar 30 sun
Discovered f230 on Simtel.

2003 mar 31 mon
11:00

2003 apr 1 tue
I want to replace !CSP and CSP by LINK and HEADER.
* get rid of !CSP and CSP in favour of DSP@ ... ?CSP .
* Split factor HEADER off (CREATE)
* Split factor LINK off (CREATE)
* Rename macro HEADER to _HEADER

It turns out that HEADER is a macro name for M4 and results
in a bad menu label. So a long standing problem (HEADER
must be renamed _HEADER) has to be solved.

It now runs again. There are however two reasons why I could't
move linking in to in the ; handling.
- RECURSE couldn't find itself
- The current vocabulary has changed

Furthermore, it triggers problems in the assemblers that use !CSP
here and there.

2003 apr 2 wed

Plan is to recheck the assemblers for 4.1 and check the modifications
in.

YES! ci86.gnr 4.18 checkked in.

!CSP and CSP replaced BY LINK and HEADER

!CSP removed from assembler and optimiser porgramms,
the assemblers are tested again and work.

2003 apr 3 thu
Looked into colorforth. Posted a message tot the effect
that is is better on a DEC Alpha.
(Working in the garden and on the SP amplifier.)

2003 apr 4 fri

Going on with the optimiser.
A saved system sometimes crashes. This has to do with threads.
If the user pointer is already at a proper boundary it is incremented
by the stack size, this may result in a segment fault, if the single
byte that is one off is addressed.
Anyway, since the user pointer offset is created properly, it doesn't crash
anymore.

2003 apr 7 mon
Going on with the optimiser. I have read my story again, it could be
published in a compiler writing thingy.

I think going on with loops. First of all I should eliminate all (DO)
(LOOP) (?DO) (+LOOP) from my code. Currently LEAVE uses that the third
item on the return stack is a return address.
Let us start with making high level equivalents if the looping constructs
only using 2>R 2R> 2R@ (FORWARD FORWARD) (BACK BACK) BRANCH 0BRANCH

2003 apr 8 tue
It looks like the code for the elimination of crashes ( DO-TRAP?)
has disasappeared. Furthermore I can't find the changes to
screen 5 with the elimination of I like DOS.

The optimiser has a hard time with +LOOP with a non-constant
stride. DIfferent high leve code is needed for positive and
negative cases.

I-LIKE-DOS is still present in screen 5, spuriously.

I have added SET-TRAPS again to version 4.1.
(Got it from my posting on usenet, otherwise it was
lost.)

It turns out that the phrase
WRM1:     DC WARM
is superfluous. The label WRM1 can be put at the start of the
high level code of WARM. The same for CLD1 and COLD.
Another 8 bytes saved!
Made a file called doloop.frt containing only an optimizable definition
of DO LOOP using only the return stack.

2003 apr 9 wed
Staring at the byte benchmark, after inlining.

There is a constant on the return stack, it could be eliminated but there
seems to be no reasonable line of action.

It remains to be seen whether it is not better to do inlining based on
two constants passed to DO.

The byte benchmarks lasts 55 mS but is very hard to measure while KDE
is running.

I guess I have to proceed with code generating (from the compiled
source.) Once again I have to handle branches and targets.

A logical way is (original lines with %)
% : DO-PRIME-ISO
% 807B350 1FFE 1 FILL
% 0 0 1FFE >R     AX:0 BC:0 DI:1FFE
% [ (BACK ]
%     >R   807B350 I + C@
    SI:=BX BX:80x CX:=SI BX+;=CX BX:=[BX]
    SI:=BX BX:80x BX+:=SI; BX:=[BX]
    SI:=BX BX:80x BX:=[BX +SI]
    SI:=BX BX:80x TEST [BX +SI]
( after analysing the back branch)
           BX:80x TEST [BX +SI]
           TEST flags[SI]
%     0BRANCH [ (FORWARD ]   I   DUP +   3 +   DUP   I +
    JZ                    BX:=SI CX:=BX  BX+:=CX CX:=3 (Clumsy)X+:=DX CX:=S BX+:=DX
    JZ                    BX:=SI BX+:=BX BX+:=3 CX:=BX CX+:=SI
    JZ                    BX:=ea[3+2*SI] CX:=ea[BX+SI]
%         [ (BACK ]   DUP   1FFE <
        CMP CX, 1FFE
%         0BRANCH [ (FORWARD ]   0   OVER   807B350 +   C!   OVER +
        JL                     flags[CX]:=0                CX+:=BX
%        BRANCH  [ SWAP BACK) FORWARD) ]
        JA
%        DROP   DROP   1 +
        AX+:=1
%     [ FORWARD) ]
%    R>   1 +   R@   OVER   SWAP < 0=
    BX:=SI BX+:=1     CMP BX,DI
    SI+=1   CMP SI,DI (modifying at the start of the loop) BX:=SI
% 0BRANCH   [ BACK) ]  RDROP   DROP
  Jx?x
[ .S ]
;
This is near optimal machine code generated.
BX := 0
BEGIN, SI:=BX
    flags[SI] ?  IFNZ,
    BX := 3+2*SI   (LEA)
    CX := BX+SI    (LEA)
    BEGIN CX<?0x1FFE  LTWHILE,
       flags[CX]:=0
       CX += BX (LEA)
    END
    SI += 1 (INC)
    BX:=SI
SI<?0x1FFE GTUNTIL,

2003 apr 10 thu
Made a file codegeneration.txt with the idea
that fixed registers are bound to stack locations.
From that point you may have stacks in a particular style :
1. start with popping everything
2. operate directly in place
3. push back.

This could be amenable to a transformation to get a transformed
register allocation scheme, one that conforms to one place
difference on the stack.

CODE xor
    POP, R|  CX|
    POP, R|  AX|
    XOR, X| T| AX'|  R| CX|
    PUSH, R| AX|
ENDCODE

8FC1 8FC0 33C1 FFF0 0000 0000 |....3.......|
0001 0001 0001 0001   Correction for one register opcodes
0000 0000 0008 0000   Correction for two register opcodes
8FC2 8FC1 33CA FFF1 0000 0000 |....3.......| l

It becomes clear how to generate code at first:
Split at each branch and put it in a table like this
START   END  branch?   next   depth

next point to where the next segment is.
branch? tells whether before end there is a branch.
Then look whether any branches don't end at a start.
Such entries have to be split into two segments.
Now within each segment one can optimise at will.
(Lateron maybe we could allocate registers based on depth.)
It seems like we are wasting our time, unless we introduce
R[1] R1@ or R1.
Remember to handle J correctly during optimisation!

2003 apr 11 fri

4.19 of ci86.gnr committed in CVS
This is primarily about c; --> END-CODE (which is ISO)
(-TRAILING couldn't handle empty strings.)

Optimisation issues:
ci86.gnr is now such that only words that are implicitly
looping :  xxxMOVE CORA $I and $S use DI.
Such that DI is a likely candidate for permanently
keeping a loop counter.

2003 apr 14 mo
Interest in coloring is triggered.
color.frt is tested and works reasonably with 4.1

2003 apr 15 tu
The analyser is refurbished and checked in into cvs/
Looping is intended to use DI and the generic source is adapted
to keept that register free.

Poitns to keep in mind:
- maybe detection of DI can be automated
- the use of faster looping (such as I : pop DI ) can
be detected and implemented at high level.
- color.frt has some adaptations to the cracker
  these are behind the times now.

2003 apr 22 tu
Things to do
- the splitting with the branch endings
- trick with DI
- a color version

A color version of lina would be a saved version that had
included the assembler and color, but where only the bare
minimum would be present to add color to new definitions,
hopefully in blocks.frt

color.frt contains syntax coloring for the current Forth.
It is a separate program, but it has to be integrated into
lina.
The coloring part, displaying on an ANSI terminal, can be added to
the blocks file as a wordset.
The additions to the cracker are to be integrated and trigger a
redesign of the cracker.
The intention is that soon the assembler and analyser can be loaded
high, then cut off, in order to have colors without much additional stuff
in the kernel.

2003 apr 23 wed

The cracker has been cleaned up, and it can handle CREATE DOES>
words now, such as VOCABULARY .

THe analyser now takes advantage of this and is adapated to the new
cracker.

2003 apr 23 wed
The analyser is prepared for separating the code and the high level
definitions.
At the lowest level the stack effect is filled in immediately and
the names of the words are adapted.
A summary is present up front now.

2003 apr 24 thu
The optimiser is adapted to the analyser, and the test of
the optimiser still succeeds.
The optimiser (testoptimiser.frt) is tested by INCLUDEing
testoptimiser.frt. Then split at ``SPLIT HERE'' and compare
the parts.

2003 apr 25 fri
The sets have been cleaned up, renamed into bags.
The analyser uses them, and has a set of codetypes.

I have split the analyser in
- inclusion of assembler
- preambule with constants and flag manipulations,
- assembly code analysis, split off to asmanalyser.frt
- high level analysis
- debugging aids
For coloring color.frt must also be loaded.

This is a total of 4000 woc.
For use only the preambule and high level analysis remain (700 woc).
With color.frt the result is 1000 woc.

There is a problem, it keeps on crashing.

 2 may
Succeeded in splitting analyser.frt.

put into cvs with the text :
    analyser.frt has been splitted into several files, in order to
    facilitate the use of stack information without the need for
    loading the assembler. Usage of @+ further introduced and
    normalized.

 5 may
Apparently the apatchx in the directory for the experimental version
have been applied. They are deleted now.

 6 may
The analyser is ready for coloring now!

This is the CVS log :

    analyser.frt has been fully split into components, the last one is
    analysermain.frt, the bulk for high level code.
    Including it adds flags to lina.
    This is automated by save-a, for this purpose the silencing of OK
    in COLD had to be changed. A lina with flags (lina+a) is generated.
    Including smallanalyser.frt in lina+a allows to add flags for high level
    code, using FILL-ALL.

    color.frt can now be loaded even if there is no BLOB, i.e. CRACK is not
    loaded. The handling of BLOB for DLITERAL is corrected in CRACK
    On a virgin system color.frt only requires analyserconfig.frt.

The small analyser and coloring has been added to the website and announced to
c.l.f
This is a snapshot of 4.1 : called 4.22

 7 may wed

Version wna4d0d2 has been uploaded to Simtel.

 8 may thu
Cleaned up manx, and put manx2.zip on my site with
somescore.zip.

An update made to the category of wna4d0d2.xml Hope it works.
 9 may fri

The new wna has been accepted.

13 may tue
There has been a small improvement in the display for the
twin prime counting.

19 may monday
Thoughts about pop symposium mailed.
20 may tue
Chapter 7 of Mhx revised together with CH.
Discovered that -1 0 ?DO behaves strangely.
(D.R) generates partly a string, partly prints directly.

21 may wed
It is unclear what changes made it into 4.0.2 and what
of those are already in 4.1
4.15.2.2 : At last CONTEXT is added to the stable version.
4.15.2.3 : (D.R) didn't generate a string with spaces

11 jun wed
Added TIME&DATE.
17 jun tue
Founding 6809 working group.
19
Got a disassembler from the internet. Nice thing.
6809dasm

22 jun sun
Worked for 3 days on 6809 assembler.
Checked against 6809dasm. No substantial errors found.
(except maybe the lack of indication of the direct field
in 6809dasm.)

24 jun tue
The 16 bits constants had their bytes swapped.
Some strange names in condition codes.
Sent a message to the author of 6809dasm.c.

26 jun thu
All assemblers have been simplified such as not to use hex constants
in an unpleasant long or illogical format. There is however the
following idea:
    the constant related to bad thingies can be hidden. You could have
    a defining word CONFLICTS
      CONFLICTS REGISTERS CONDITION-CODES
    where REGISTERS signals a bad condition that conflicts with that
    CONDITION-CODES .
    BY could be handled by WITH: IB, to indicate that the
    COMMAER IB, is required, instead of using the binary code there
    off.

The constant offsets from register in the 6809 assembler
cannot easily be replaced by DFI. The DFI id from the start of the instruction
such that LEA, and ADDA, [] require a different s#| fixup.
Moreover the disassembly is in unsigned hex, which is very unpleasant.
Therefore that version is stalled in /precious , until such time that
the DFI fixes up from behind, and it is possible to indicate unsigned
or signed behaviour.

27 jun fri
Committed a version of the assembler where all the long hex constants
are eliminated, without affecting the internal data structures.

30 jun jul mon
missed the dead line. Didnot manage to send in any solution at all.

1 jul tue
6809 second meeting

28 jun 30 jun
ifpc contest.

Conclusions :
 having a set of initialisatons INITIALISATION:
 ALLOT-IN-BEHALF : ALLOT and patch >DFA pointer
 a block with simple vector calculations
 a block with double precision stuff.
 sqrt is needed
 not having traps is unpleasant
 R: that patches the word following.
 edit WORD  if the word doesn't exist, create a source area
 else change its source area using YFE.
 { }
 compiler shouldn't crash with SHIFT-ARGS in the source.
 we badly need a visualisation tool
4 jul  fri
 ANALYSE-ARGUMENTS A>I A>D GET-I GET-D
 -c option should get its arguments first, lest the crashes
CONTAINS can be simplfied in view of DROP-WORD

5 jul  sat
Trying to understanf Paysans program for the ifcp better.
6 jul  sun
We must change the program to use relative coordinates.
Plan:
1. relative
2. spit out orbit
3. spit out plotfile for orbit

6  jul fri
At last I can run (probably) all ifpc orbits.
The binary search works.


7 jul  sun
Going on with tweeking of the orbits.

9 jul  wed

20 juli

The problem why wina didn't run on XP has been solved:
The command interpreter name must be copied to the pseudo real
segment too.

It is possible to add -g (grow) to a Forth.
For equ layout:
Add the offset to 0..5 and 15 at +ORIGIN.
Add the offset to PREV and STALEST (VARIABLE 's) and
at it in to the data field of EM FIRST and LIMIT (constants).
More tricky is that the startup code for DPMI no longer can use the
constant value and must fetch it from the data field of EM (which
is of course perfectly reasonable.)

I think the EMP values are used in a suspect way.
However it is not at all clear where they are used for.
They must be derived from EM's data field too.

2003 aug 29
We have now version 4.15.2.4 of ci86.gnr
The following changes have been made:
   EXEHEADER was wrong in several respects, such that SAVE-SYSTEM
   generated files that crashed under Windows XP.

   The screen editor has been cleaned up w.r.t. names.
   ^W ^R ^C has been added. (Pop word, scroll half screen up,
   scroll half screen down.)
   The line feeds are regenerated with each save of a screen.

   REG-SET test was valid only for 16-bits, removed.

   WRITE-FILE failed for files > 0x8000 . No more.

   SHELL's in DPMI require that the shell's name is written
   back to the pseudo real segment. This is now done.
   (shell name in XP deviates from tradition, this can be solved now
   by changing BLOCK-FILE and saving the system.)

2003 sep 01 mo
Working on an XP release for wina.
Introducing the third parameter for -i.
SAVE-SYSTEM fails under these circumstances.

2003 sep 02 tu
The following problems have been solved and committed to cvs.

"
 On a Windows system, SAVE-SYSTEM destroyed the inline
 arguments, (which could be the filename passed to SAVE-SYSTEM)
 No more.

 A third options is added to the -i option: the shell, and
 this is reflected in the documentation.

 The electives screen (-e) is cleaned up.

 The editor has a MARKER-like word EDITOR that shows
 loading went okay, and can be used to FORGET.

 All version of ciforth now use ETYPE where output is intended
 for an error channel though it may still prints on standard output.
 "toblock.frt" after redefining ETYPE should now work on Windows,
 but it still doesn't because of redirection problems.

 The documentation README.wina is made more generic, i.e.
 it need not be changed between minor patches.

 Removed REFRESH.

 The README.xxx files have been renamed for the extension .txt.

"
Now we are after MEASURE-PRIME.
The main problem is that MS@ and TICKS are entangled, and that
we need alternative code (interactive) for TICKS-PER-SECOND
on windows. This has been solved by some conditional blocks.

Attempts have been made to upload to Simtel, which led to a
conversation.

2003 sep 17 we
Yesterday there was a  meeting of the 6809 werkgroep.
This led me to the conclusion that I must make tools to go from
blocks to files and vice versa using ciforth tools.
For this to work I badly need READ-LINE and WRITE-LINE
And in the backgrond for this FILE-POSITION is indispensible.
The best way to accomplish this is to make a source with conditional
compilation.
After those words have been added to the library file, we just
can simplify those afterwards.
Then we can do away with the c-source that is now needed to build
ciforth.

Using this toblock.frt and fromblock.frt have been revised.

First actions :
get 4.0.3 out on the internet

2003 sep 18 th
Findalized my utility to go to and from files. They can now be used
instead of the c-utilities.

All test have been passed, even on XT. Except for building an executable.
It turns out that erasing the psp, even for a moment is a bad idea.

2003 sep 19 fri
Version 4.03 commited. All test have been passed, even on XT.

Added a utility in Forth to go from block to text and vice versa.
Renamed for conflict with toblock.c and fromblock.c and to prevent
problems with MSDOS.
Erasing of the psp fails in MSDOS and DOS boxes on XP.
I now just dump the trash after the exeheader in the first paragraph
right into the .EXE file, with no adverse effects (cross fingers).

2003 oct 6 mon
After an alarming number of day of hard work, it seems that we are
up and running again, apart from the connection of apple to the
internet. There was a virus attack and apple was almost dead.

2003 oct 8 wed
Enormous panic. SAVE-SYSTEM no longer works.
Possibilities :
read in executable, patch it, write it, write remainder.
map executable to memory below BM, then proceed as usual.
It turns out that the executable found in the distributed archive
still works. This relieves much of the pain, it will be relevant
only to people who actually built a lina on a very new system.
It turns out that you can still link an object file generated on a modern
system on a very old system, despite the warnings. (Tried on 1.2.xx
kernel.).
The problem is that the header of the program is no longer in readable
memory to inspect or play with. It turns out that the loader trims of
any whole pages (probably 0x1000) that donot belong to the content of
the object file. And also the loader finds it necessary to padd the
header to a full complement of one page, adding approximately 4K to
each and every executable.
It is very difficult to find out the actual default
link script used by ld. strace reveals that it problably (for suse
linux) sits somewhere in /usr/i486_suse_linux/ldscripts.
There is no documentation about those scripts too (as I have told the
"powers that be" already). I don't want much: Either I must trim the
headers to something that is smaller than a page, but it is unclear
where and how the padding occurs. Or I must generate the ELF headers
whole sale. But I seem to have lost where I left my ELF documents.
There is just three segments needed: dictionary forth and shstrtab.
shstrtab is just there to contain the names dictionary forth and shstrtab.

2003 oct 9 thu
There is a problem with CVSROOT. There seems to be some directory with
bookkeeping needed. But that is not saved with the backups. So at the
moment we have no idea, what is missing. The backupping is
reestablished (``bus'' has been put in the crontab.)
The backupping has been changed, such that the whole of CVSROOT
is backupped.

2003 oct 10 fri
Looking into the rel-4-0-patches version (in ci40p) :
this one apparently is still related to the correct version as
``cvs diff'' reports relatively little changes.

Trying to get the stand alone system working again.
The floppy drive has been renamed into fd0h1440 by the installation
of suse 8.2, and has become untouchable for the world again.
After fixing this: `make trboot' makes a standalone version.
It boots on Artemis and can be installed properly using
''REQUIRE INSTALL-FORTH-ON-HD``.
I have made some improvements to the HD. commands.

Looking into the problem that the lina has no access to the elf
header in the suse 8.2 system. The idea is to have a header in the
file itself that with the help of an extra save could get rid of this
problem. It is not a good idea to just make an ELF header in nasm,
because then we must pull a start address out of thin air. I rather
leave that to ``ld''.
It turns out however that the lina's generated no longer have the
problem. Something in the code before _start makes ld not use on
offset. The most simple "somethings" like one cell 0, or a cell
with the magic ELF number doesn't help however.

Another possibility is to patch the header, such that the offset is
eliminated. This proceed as follows:
In the header at offset 38 is the offset at which the file is loaded.
This must be subtracted from 3C and 40 (physical and load address) and
added to 44 (the length to be loaded.) This is all to no avail.

Solution: it is sufficient to put
        DD _start
in the line before _start .

2003 oct 13 mon
Worked on the tingle tangle software.
The midi interface is copied from the iforth software,
and is not half as difficult as I expected.

2003 oct 15 wed
Talking with mhx. The part of the midi software that I worked on
(playwav.frt) has nothing to do with midi.
It is a bit distrubing that lina executables after saving have no
proper headers. I try to have the pointer to the section headers
eliminated.
The directory ci40p is now freshly generated from the cvs files.
or so I hope.

2003 oct 16 thu
By zeroing a word at offset 32 in the elf header, and two half words
at offset 48 we arrive at a valid elf header without section
information. 0 SM 32 + ! (blank out section header address)
0 SM 48 + ! (zero sections, no string section.)

2003 oct 17 sat

2003 oct 30 thu
Been working on manx lately.
Using my regular expressions to change manx files.
Problem! There can be no escaped white space \n etc.
in replacement string.
Solved.
2003 oct 31 fri
The above problem is solved, and the regexp still
handle the regression tests.
However it turns out that now
"ACEF"  "AB*CD*E>" (which should fail) hangs in an infinite loop.
"ACD"  "AB*C>" (which should fail) hangs in an infinite loop.
The problem is related to the assumption in backtracking that
the character pointer has not advanced.
This is not true for the combination fixed string+boundary
check. The solution is in (MATCH) to not just restore the
expression pointer but also the character pointer.
This problem has been added to the test set, and succeeds.

2004 nov 1
Ported some
2003 nov 4 tue
The prime record is running again.

The structure command has now a separate CREATE-<struct>
feature. This allows to embed structures in other structures.
The addition of this feature was not to blame for the crashes,
this was due to the printing of the field CBLEN etc. for non
allocated data structure.

It runs out that \ doesn't work on the end of a line.
It discards the next line. This was discovered in the manx
sessions.

2003 nov 4 wed
The solution is to backup one character. Solved in 4.15.3.3.
It is possible to implement MS using standard msdos calls.
There is a command Get Time. Interrupt 21 function 2C that
returns the time in hundreds of seconds. Good enough.
This means that we can add MS to the windows version of
ciforth, and make manx more portable in this way.

2003 nov 25 mon
The message generated by ?CSP has been made more general.
(It is also used in manx.)
About to release 4.0.4. At least lina passes all tests and both
generate all documentation files all right.

2003 nov 26 tue
The regression test fails on windows XP. It turns out that
the test of denotations increases the search order with several
Forths, due to misplaced use of ALSO.
After remedying this, few problems in XP remain, but the Windows
95 test crashes!
Also turnkey crashes on Windows 95.
There was a problem with redirection! A windows XP program
did not stop after the input stream is exhausted.
To surprise catching the -20 error is only done on Linux.
Surprising! With this remedied, the testing is smooth.

Changed the testing files for wina to be compatible with lina
(wina.test.1 --> testwina.1) . Much easier too!
MS@ test was not good. MS documentation was not good.
wina on xp fails the test for the SYSTEM word.
"type hello.frt" SYSTEM
Apparently the command interpreter is started, but
the file content doesn't show up.
The improved test etc, has been committed, also solving the redirection
bug mentionned above.
Separately a more cosmetic improvement was committed regarding errors
detected by !CSP / ?CSP

The reason turnkey didn't work on Windows 95 is fundamental.
The stack specification in the EXE header for TURNKEY is wrong.
There was in fact no startup stack reservation. This has now
been added as the other end of the SHELL name buffer: 256 bytes.
This looks like ample, but it was a surprise how much stack was used
by XP during startup. There is now a wide margin, plus that the shell
name is corrupted and noticed before the system itself is corrupted.
However this change doesn't work properly. A large compilation
(>64 kbyte) still crashes if the saved program is run.

2003 nov 27 wed
We are going back to the SAVE-SYSTEM of 4.0.3 that worked for XP
(somehow). Further more this is patvhed for WINDOWS 95 with the
4.0.2 stuff. The update to 4.0.4 mostly relates to MS and is
essential to the tingle software.
howto.txt is updated regards moving tags in behalf of such new
releases.
It appears that the problem is more fundamental. Any save-system
of >100,000 bytes has a spurious stuff at $10000, at least at
windows XP. This is puzzling because the whole program is written
to the protected mode segment in one go.
The spurious bytes are not present in the exe file.
Playing with the parameters in the EXEHEADER word
(minimum allocation, maximum, size ending in 1FF instead of
<EVEN>00) all make no difference.
So essentially we can run manx2 on windows 95 only by loading the
program source, not from a turnkey program.
Specifying that the executable contains overlays makes no difference.
Removing all stores from the program prelude (detrimental to communication
issues like returning from the program and bioso and such) makes no difference.
Moving the DPMIentry address around makes no difference, or deleting
the MEMhandle stuff.
It turns out that memory above 64k was returned immediately.
After remedying this to only the memory needed (which changes after a
SAVE-SYSTEM), windows can handle larger programs, on win95 as well
as windows XP.

2003 dec 2 mon /tue
MERGE-SORT implemented and added to version 4.1.
The FORTH wordlist cannot be sorted with SORT-WID because it
contains the DENOTATION wordlist and there is a nameless link
between the two. (But mixing DENOTATION into FORTH is a bad
idea anyway.)

2003 dec 9 tue
Version 4.1 has been changed such that ONLY is a regular vocabulary.
'FORTH SORT-WID now works.

2003 dec 10 wed
INIT added to Forth 4.1. simplifying WARM COLD and ABORT.
ABORT no longer changes the base or search order.

-place SYSTEM problem in known bugs
-releasewina.bat complains about fromblk.frt non-existing.
-haydn has still an empty measure.

2003 dec 26 fri

The Toshiba laptop can boot the standalone version, but floppy accesses
fail.
ci86.gnr no longer builds for 16 bits, due to a LEA, but that is
easily replaced by an ADD
However version 2.148 can readily access the floppy disk.

2003 jan 8 tue
After experimenting to get the 16 and 32 bits protected mode
to be similar, it turns out that the respectdos version with
jumps to next fail in the same way on artemis and ananas.

2003 jan 9 fri
infocmp is a useful way to view the capabilities of your terminal.


2003 jan 28 wed
I have made sure that the -s option works under linux.
ciforth for 6809 passes all regression tests.

2003 jan 29 thu
Adding m4 macro's to do an allocator for e.g. the ram part
of a rommable Forth.
define(DP,eval(DP+1)) only leads to recursive disasters.
It is mandatory to use an auxiliary in-between-variable like
so :
define({DP},{0})  dnl
define({ALLOCATE},
   {define({AUX}, eval($1+DP))  define({DP}, {AUX})dnl}   )dnl
ALLOCATE(4)

2003 feb 10 tue
UM/MOD in aiforth has been cleaned up (U2 has disappeared from the
wordlist.) An experiment with RPCC shows that RPCC is usable.

Cleanup with regard to html : have non-compressable spaces between
the words in html files index. Back reference to the glossary
didn't work!

2003 feb 11 wed
Cleanup with regard to html commited to cvs, partly cosmetic.
This is based on help from Coos Haak, but the style sheets are
not yet copied.

2003 feb 12 thu
Trying to find out about the availabity of nobits sections under
i86 linux. It turns out that these are (now?) possible.
Working on the old gas.m4 and transforms files to get this
going.

2003 feb 13 fri
The new GNU even supports Intel format by a the directive
.Intel_syntax. This doesn't really help with the directives.
The directive .balign does't workas advertised regards padding.

A facility is added to the Makefile/test.mak to make lina using gnu tools.
This is possibly because the version of as supports nobit sections.
gas.m4 and transforms where debugged to generate an executable
functionally the same as lina.
Minor tweaks where necessary in other m4 files to make a consistent whole.
Remarks about the gnu build situation are replaced in the documentation
of the generic system.

Somehow I fucked up the tagging.
The latest ci86.gnr for the stable release is now 4.15.3.7
instead of 4.15.4.6 as intended. The error messages are worthless.
This has been fixed using rcs directly. It is now all right.

2003 feb 18 wed
0< is now implemented without a jump.

--
A test for ?DO and more exhaustive tests in UM* must be copied
from the 6809 project.

REQUIRE @+   still fails because ALIAS isn't known.
SAVE-SYSTEM somehow doesn't preserve the search order.
SAVE-SYSTEM doesn't adjust fence.

(Those remarks added to todo (2004may3)

2004 feb 22 sun
Working with the assembler on the DEC alpha.
The assembler must handle signed bit-fields more easily.
The DEC alpha assembler must have variable register fields.
Both are added in the pear directory.

2004 feb 25 wed
At last the tag for ci86.gnr is at 4.15.4.6
This version is however not good at all. It is bad compared to
the 4.15.4.5 In the following respects:
- html generation will probably not work
- interrupt table is crappy
- BIOSN usage not phased out.

2004 apr 19 mon
In behalf of the BIOS project all Intel assemblers have been
refurbished to use AS-, AS-ALLOT AS-HERE and retested.
The test succeed while compiling to a buffer.
Label OKAY1 points to this tested version. A progress report has been
made for the colorforth workgroup.
To be done still : proper handling of switching in the code between 16
and 32 code.

2004 apr 20 tue
Improvements in the report towards the colorforth group.
The report has been posted to cola too.
The disasambios project can now insert labels from a data file
into a disassembly. label DIS_PRINTS_LABELS .

2004 apr 21 wed
*Use labels for commaers offsets.
*Use labels for relative jumps

2004 apr 22 thu
Looking at the bios of my Toshiba, I see that interrupt vectors
don't point into rom. It looks however that they stay clear of
the memory above C700. However interrupt vectors pointing to
random places in memory is certainly bad news. Moreover
starting the Toshiba with DEBUG under XP and DEBUG under MSDOS3.3
gives different vectors. My theory is now that the stand alone
version of Forth only work if the BIOS is located in ROM
at addresses like F000:0 and C000:0 in real mode.
Looking at address F,0000 in real mode with debug show that
there is ram there. (This is tested with MSDOS 3.3).
With wina I can request a pointer to physical memory 0 and
4 gigabyte. This shows that nothing interesting sits in the memory
at low addresses. Moreover this crashes at about 11,0000.
The negative relative branches were no good for bytes.
Now there is a sign-extending fetch.
And some miscellaneous improvements.
2004 apr 23 fri
*Add ORG
There seems a V20-BIOS somewhere on the net.
I made a second progress report for the colorforth people.
It turns out that firing up DEBUG under XP just exposes
the BIOS and the vectors   dF000:FFFF and d0:400
The ORG code in test.dis.asm is still messy.
-Work t least one hour on the Minsky problem
2004 apr 26 mon
Formulated my Misky solution partially.
2004 apr 27 wed
Trying to add comment to the disassembler
2004 apr 28 wed
Succeeded in adding comment to the disassembler
2004 apr 29 thu
Classes of labelstructs are registered.
2004 may 2 sun
Plain labels are renamed to EQU labels. They are constants
again.
They can be used subsequently to define other labels.
2004 may 3 mon
At last there is a SECTOR-LABELS thingy.
There is a mystery why it does an extra sector after it
is finished. No, it counts by oneinstead of two cells.

To do:
* make two sections in the test example
* introduce LOOP-LAB and DO-LAB

2004 may 4 tue
The disassembler can now handle named and unnamed code sections
through -DC: and -DC- . This version gets RCS-label CODE-SECTIONS.
Other types of sections should be a snap now.

2004 may 5 wed
Added a bag of instructions in the 80386 that results in
an unconditional transfer of control.

2004 may 6 thu

Made a man page for cias cidis.
Thinking about the 16/32 bit switching in the Intel assembler.
In the asalpha.frt all "bad" bitmasks now fit in 32 bits 1.19.
This is not reflected in the archive on the 80386.
There is one overboard bit for the 23 bits constants, outside of
the 32 bits value, but this doesn't result in failing of
make testasalpha
(it results in accepting invalid instructions, same applies to
the existence of overboard bits in the /SU /U fp stuff.)
in a failing test in the 4.2.
Maybe I got it. AS: must set a flag SUPRESS-RESET.
This will suppress the initalisation of the BAD-FLAGS at the start
of the next instruction. All prefix instructions must do this.
It is not clear whether this can be used to advantage in IB| too.

2004 may 09 sun

2004 may 10 mon
Introduced a 16 and 32 bit mode into the assembler. Cleanup was needed
for the words that handle indirect addressing in 16 bit mode.
The 16 bits instructions are now regular (need no longer be patched
by using !TALLY manually.)  Split from X, into W, L,

2004 may 11 tue
Disassembly works too generates L, W, information.

2004 may 12 wed
There is now a mechanism in place to keep the bad bit information
accross instruction boundaries.

The mechanism is improved to the point that there is a word
(stored as an execution token) in any instruction that is intended as
a prefix. This is used to adjust the bad bits, during assembly as well
as disassembly.

The label SHAKY16-32 is associated with this version. At least
The following tests succeed: testas386 testas386a testas80  testas86 test386
Tests that fail: testdis
With an update to labelas.frt (1.7) testdis now works again too.
A test is added to test.asm for the switching between W, L, by AS:,
A similar test for IW, IL, still fails, and is not added yet.
Called AS-PREFIX

2004 may 13 thu
OS-PREFIX added. It turned out all was okay, except the test.
Some clean up of the comment in asgen.frt and asi586.frt.
It seems difficult to get rid of CORRECT-R REVERSE-BYTES
etc. So at last all interference between prefixes and data segment
are handled.

2004 may 17 sun
Made a man page for cias cidis.

2004 may 17 mon
Added a man page for consult file lay out.

2004 may 18 tue
Worked out a design for the CRAWLER.
For the CRAWL-er we need a BAG-INSERT. This uncovered a bug in
BAG-REMOVE (moved one item too much.)

2004 may 19 wed
It looks like crawling is complete.
It compiles and is manually debugged until JUMP-TARGET.
The test.asm example is made more amenable to crawling by
ending code sections with returns.
The crawling seems to work. All words debugged.

2004 may 20 thu
Sent a progress report to the colorforth mailing list.
The crawler is in a separate file, called crawl.frt.
This version gets the label CRAWL.
The next thing to do is get rid of asnowrap.frt and only
use aswrap.frt when reverse engineering. Done.
Added a command line interface that behaves differently for the
program if it is named cias or cidis. This is used to replace the
testdis action in test.mak. The program works interactive if
there are no parameters. DELAYED-BUFFER added such that the executable
is restricted to 120 Kbyte.
This version gets the label CIASDIS.
2004 may 21 fri
Looking at asgen. The design should be changed in the following
way.
- the opcode and bi parts should be in the data fields like they
  are in memory (now it is like how a table representation
  of the opcode is stored as a cell.)
- introduce TRIM-TABLE  HERE HERE1 ! 0 , 0 INVERT , HERE HERE2 ! 0 ,
  : TRIM2  HERE2 @ ISL @ -   @ AND ;   now selects the first ISL
  bytes from an instruction.
  : TRIM2  HERE1 @ ISL @ +   @ AND ;   now selects the last ISL
  bytes from a fixup.

SHOW-REGISTER added.

2004 may 23 sun
Added the # decimal command.
Tried out a good definition of R: .

2004 may 24 mon
Some small improvements to the doc's
To be done
- DUMP-ALL
- separating disassembly lines in at most 0x10 bytes
- disassembling should default to byte disassembly
- debugging the DPMI version

Debugging the DPMI revealed very little. Crashes in the vicinity
of the abort vector.
Because DPMI cannot examine the programs name cias.frt and cdis.frt
have been added that do only one of cias / cidis. This results in two
executables.
2004 may 25 tue
It looks like the ABORT vector is at an unaligned address.
Using the aligned Forth version 4.0.4 the assembler/disassembler passes
the test on windows xp.
I have now installed 4.0.4 on my laptop, but it is not clear what I miss
from the previous installation (I overwrote forth.lab).
Working with CH. The DUMP-LABEL shows pretty clearly what's going on.
There is now a separation between sections.

Trying to disassemble hal.dll. Sometimes it goes into an infinite loop,
and sometimes it crashes. However crawling works in principle.

2004 may 26 wed
I think I should get rid of the separate 32 sections besides normal section.
Done.
There is a bug that triggers because of a call outside the code area.
It is only a starter for crawling if the target is in the code space.
This has been fixed.
The call was caused by an instruction starting in C1.
The embarassing thing is that it is decodes as a SIB suffix.
The instructions starting in C1 and C2 have been added.
The jump outside of the code space has disappeared.

2004 may 27 thu
Posted the bugs on the Internet.
2004 may 28 fri
Worked on documentation cul.5.
2004 may 29 sat
Worked on documentation cul.5.
2004 may 30 sun
The DB DW DL commands are renamed, because Frans van de Markt
warned for confusion regarding hex words (DB DC).
2004 may 31 mon

2004 june 1 tue
With great effort at last there is a vector to print a label in
any section. The DIS-CR-XT field.
Now it is possible to also cut those section in appropriate
parts, at last for db sections.

2004 june 2 wed
Reorganisation SWAP-LABEL (now ROLL-LABEL) into generic.
WHERE-LABEL and LAB-UPB introduced.
2004 june 3 thu
Collapsing build parallel with a test set.
2004 june 4 fri
A mysterious bug still prevented some collapses.
By rewriting COLLAPSE(I1) it disappeared, but I still don't
understand it. (It is clear that that word was the culprit,
because COLLAPSE(I1,I2) always worked.)
Labeled COLLAPSE.
The adding of labels for jump targets was prepared.
It is now installed and worked immediately.
2004 june 5 sat
The assembler directive d$ works now.
2004 june 7 mon
The disassembler directive -d$ (and family) works now.
2004 june 9 wed
The disassembler now checks for the fitting of ranges.
A cleanup has been made, especially regards ends of ranges.
This works on debug.exe too, but target labels ``L000,0A89'' are
redefined all the time. This comes about, because >LABEL only
works on a sorted BAG . The solution is to sort the labels after each
ne entry. (Not very elegant, but it works.)
2004 june 10 thur
elections
2004 june 11 fri
The in between ranges are to be dumped as a special section,
but this presents a problem.
- use a dummy section (or a specially created section) destroys
the current section pointer
- any other solutions doesn't invoke DIS-CR for a string section,
which is 'CR+d$  There seem no way to isolate that, because it is
called via the SECTION structure at line endings determined
by different other words, all placed in DIS-RANGE .

2004 june 12 sat
The solution is to introduce new sections for all holes, prior
to disassembling. This works.

2004 june 13 sun
Some cosmetics: the disassembly no longer uses ID. (with three spaces)
but a new %ID. that has one space. Spaces are also weird within d$
and this too has been fixed.

2004 june 15 tue
The word DECOMP-ALL dumps all consult information from the memory,
in a reconsumable form.

2004 june 16 wed
Promoted in colorforth mail.
2004 june 17 thu
        2004 june 18 fri
Plan to add before new version :
/Not-yet /Done #  MARKER CASE PARSE-WORD ."$" $= :NONAME

The -c options now only revectors included.
The bags are added to the library.
This is commited to cvs.


Adding struct end-struct to the library.
Introduced CF: and used where appropriate
Also #. This were about all things to be copied
from the assembler/disassembler.
This is committed to cvs.
Added $= ."$" SCAN-WORD CASE DOC etc. to the library.
revision 4.13.2.13 of blocks.frt

manx2 and ciasdis now work with the new Forth.
Still maybe to add: the new-fangled assembler, and the
delayed allocator.

The lexmark can be installed under windows XP as a laserjet II p.
But postscript files print slightly better with the ljetplus in ghostview.
The x has to be offset by -40 for even pages for an evenly type.

Both the KNOPPIX and SUSE installs are messy caused by the CUPS
printer driver.
2004 june 19 sat
Working on inventarisation of Forth properties.
2004 june 20 sun
Defect: the change regarding $ require that screen 5 now must contain
REQUIRE PREFIX. NO! REQUIRE $ must be replaced by REQUIRE PREFIX.
This occurs in options.frt and blocks.frt.
The generic versions can do make lina and make zip .

Mysterious problems :
 1. "TYPE hello.frt" SYSTEM works on XP, interactively, and if passed
 via echo and a pipe, but not in the automatic test.
 2. glina can do SAVE-SYSTEM allright but ``glina -c hello.frt''
 gives a program that always crashes.

All tests are okay and passed with minor remarks, see testreport.txt.
Notes with the commit:
    Makefile includes more files for the generic version, especially namescooked.m4.
    A generic version can now be used to generate lina glina and archives.
    glina however cannot compile (-c).
    releasemina.bat releasewina.bat generate testfiles with better names.
    REQUIRE $ no longer works and is replaced by REQUIRE PREFIX.
    Sufficient tests has been done for a release, which is reflected in
    testreport.txt.

Tue
The test on the ananas fail. The printer port isn't accessible.
Now trying the boot-ancre system.
This is okay

Linuxtag : the printer port is silenced in the BIOS. Activating
it is undone by Windows, each time it is started.

2004 june 29
tue :
The C't puzzle fever got me. Designed a system to do it.
Using Bernds Minos didn't succeed (for debugging).
Found out that I might want to have a -m option to increase
memory. Made a shot at it. The DPMI must fetch the length
from the data address of EM, otherwise it doesn't work.
2004 june 30 wed
2004 july 1 thu
2004 july 2 fri
The 4.1 directory is committed again.
The trboot version works on Artemis.
2004 july 18 sun

refilter.frt refurbished to be used as a real script.
Pusblished on my site.

2004 aug 29 mon
2004 sep 1 wed
The cidis system has been used to try to decompile ciforth.
?ABORT was wrong.
And crawl leads to investihgating whether an address is known
code while the SECTION-LABELS are empty. This crashes!
Fixed.
Discovered that the saved images of lina are wrong in that they
specifiy sections, that are not present in the file.

2004 sep 2 thu
Improvements submitted.

Going through cul.5 documentation once more.

2004 sep 3 fri
Wrestled with an unfindable error.
It turns out that the bag for EQU-LABELS was too small.
I had introduced MAX-LABELS, but not for EQU-LABELS (!).
This version now generates a reasonable disassembly, but
the software to cleanup the sections after generation is
not good.
Somehow they are not sorted. SORT-ALL leaves some holes,
but also overlapping sections. PLUG-HOLES must be rewritten.
It loops over the sections that are originally there.

This looks like a proper design.
- sort on the start address, type (disassembler) and end address.
- start with the last section and work down until the second
    - if it overlaps with or borders at the previous one and has the
      same type and alignment, and the second one is not named
      collapse the sections.
    - if it overlaps with the previous one and has the same type and
      alignment, and the second one is named, trim the first section.
    - if it overlaps with the previous and has different type,
        issue warning
    - if it has a gap, introduce a character section
  This may lead to an extra section, one less section, or no change
  in the number of sections, but only at or after the current section.
- As a last action, introduce extra sections at the beginning and end.

This leads to words: SAME-TYPE SAME-ALIGN OVERLAP BORDER GAP IS-NAMED
(has been considerably changed.)

After collapsing, a section can comfortably be removed using the
regular removal mechanism for bags. A newly introduced section
automatically falls into place, because of the conditions regarding
the start addresses.

2004 sep 4 sat

Made a test, such that the effect of cleaning can be asserted.
Added a better way to collapse segments.
It is better to introduce a symbolic name for "NONAME".
In that way an empty string is more easily introduced.
There must also be a stride regarding the alignment of sections,
and a way to change the end of sections. (DIS-STRIDE and DIS-END!).

2004 sep 6 mon
elf header analysis now rather complete.
2004 sep 7 tue
crawl.frt cleaned up further
2004 sep 8 wed
The whole stuff is now free of abolute labels, but it doesn't compile.
2004 sep 9 tue
It turns out that changing CLD1 to PLD1 solves the problem.
Apparently the fixing of a label that looks like a hex number
is not okay, if it is a forward reference.
So FIX-NMB has been modified to carefully skip the remainder of the
label. Also it must force that the it is a single precision number.
2004 sep 10 fri
Testing added to generate lina 4.0.5 back from the disassembly. This
proceeds too slowly, so I have complete the RCS archive. Further I
renamed some things into more reasonable names, collapsed Makefile and
test.mak into one, and described all files in README.assembler.txt.
What remains to be done is add a test to test.asm for label names
that are handled via error 10 (missspelled numbers.).
2004 sep 11 sat
This testing has been done on the Toshiba laptop for speed.
The example, disassembling lina itself, has been taken to the
point that I can throw out a definition in the beginning (8 of the
denotations) and reassemble into a fully functional Forth.
When a label struct runs out of space it is now reallocated.
This allows for a starting size of 100 labels, and and makes the
executable around 130 Kbyte.
Some work has been done on the makefile, to make a nice archive.
2004 sep 12 sun
- run the regression test
- get the stuff back on the main machine
- look to the assembly documentation/ make a plan.
- get the archive right
- adapt the html on the website
- put the archive on the website
2004 sep 13 mon
* run the regression test
* get the stuff back on the main machine
Got the whole chapter 5 of thinking Forth ocr-ed.
2004 sep 14 tue
Chapter 5 of TF has been fully marked up with XML.
Got some USB specifications from the Internet.
The main thing with USB is that it is NRZI
This means that it changes state for each 1, and remains if
zero. However no more than 6 zero's can be had without a 1
(a "stuffed" bit) that is ignored by the reciever.
This also means that a classical signal cannot be faked,
except maybe on a very low level.
2004 sep 15 wed
* get the archive right
At last it becomes clear how to install info files:
use ``install info'', at least on Debian.
The -H and -V options have not been defined.
* adapt the html on the website
* put the archive on the website

The information for 4.0.3 -> 4.0.5 is about :
Added MS MS@ to the kernel and struct's and bag's to the library.
Numerous small improvements to the documentation and source.
2004 sep 16 thu
Plan :
* make xml for windows 4.0.5 all right.
* configure wina with the windows shell wna4x0x5.zip
- upload wna4x0x5 to Simtel.(failed)
- 10 points moved to friday

The regression test fails under windows xp.
A part of the file is interpreted by the command interpreter, which
is terribly strange. There tends also to be a crash with FORGET-VOC.
As per 4.0.5 the editor doesn't seem to work reliably.
It tends to crash after changing a screen. It is not related to
whether or not DEVELOP has been issued.

The regression test fails, because of the CATCH I introduced in
QUIT. I can't see why this catch would be any good, except for
hiding what the cause is of the exception in the input stream.
So I get rid of this catch in behalf of windows.
Because 4.0.5 has not really been released I can patch it up.
So the wna4d0d5.zip is build anew. It is patched into a version for
Simtel.
Problems detected: on xp the editor crashes if you attempt to
go out of the screen.
An executable on Windows can become as large as 1 Mbyte, but it then
cannot be loaded in real mode. (Approximately 600 kbyte is the limit.)
Add this to the documentation. (Progress! Previously it was 64 K.)
There are haphazard crashes related to file sharing on XP.
The regression test doesn't work on XP if the ALSO before DENOTATION
is omitted (scary!).

I don't succeed in uploading to simtel using a text only browser
like lynx.

2004 sep 17 fri +sat
- upload wna4x0x5 to Simtel.
- introduce label 405 in ciforth
- introduce label 010 in ciasdis
* work out announcement for linux announcement, forth gg, colorforth list
- send out this announcement to la
- send out this announcement to forth gg
- send out this announcement to colorforth list
- work out announcement for cimsolutions.
- send out announcement for cimsolutions
- fetch descriptions of editor work from
- upload editor stuff
2004 sep 20 mon
- upload wna4x0x5 to Simtel.
- introduce label 405 in ciforth
* introduce label 010 in ciasdis
* send out this announcement to la
* send out this announcement to forth gg
* send out this announcement to colorforth list
* send out to clf
- work out announcement for cimsolutions.
- send out announcement for cimsolutions
- fetch descriptions of editor work from mail
- upload editor stuff
2004 sep 21 tue
- upload wna4x0x5 to Simtel.
* introduce label 405 in ciforth
- work out announcement for cimsolutions.
- send out announcement for cimsolutions
* fetch descriptions of editor work from mail
* use this to define markups for thinking forth
* upload editor stuff
2004 sep 22 wed
- send out announcement for cimsolutions
- work out announcement for cimsolutions.
* upload wna4x0x5 to Simtel.
* upload wna4x0x3 to Simtel.
* get account on sourcefourge
* get account on sourcefourge
2004 sep 23 thu
* confirm account on sourcefourge
Looking into adding floating point.
Discovered that the VERR instructions missed a register
addressing more, due to its association with other
instructions, fixed and passed regression test.
Started with a file asi586.frt
2004 sep 24 fri
My mistake, it was not about VERR but amout SMSW and LMSW.
I have to redo all announcement and email messages.
This is due to not functioning of my e-mailer. It changes
albert@tomaatnet.nl to tomaatnet.nl! albert and probably the
revieving site could not handle that.
* add the other addressins mode to xMSW added
* compare new set (SHOW-ALL) with before xMSW added
* Add the new xMSW instructions to the regression test.
* Add all instructions from page 0F
* Checked opcode sheet for 0F
* send chapter 5 to Anton
* send ciasdis announcement to cola
* send lina 4.0.5 announcement to cola

2004 sep 25 sat
All floating point at the level that it can be compared
with GNU.

2004 sep 26 sun
Compared with disassembly of GNU. Solved all resulting
problems satisfactorily.
- send ciasdis announcement to forth user group
- send ciasdis announcement to colorforth group

Made an abstract to be used in the library.
However, I think the assembler in the library must be made
compatible with the large assembler before this will fly.

It turns out that my mail system is not working properly anymore.
Despite being in the spooldirectory, it doesn't seem to arrive.
Logs to the effect that it has been sent are in the mail logs.

2004 sep 27 mon
Attacking the assembler in the .lab file.
Starting out with the version in the 4.1 system.
So the result should be an assembler compatible with the large
assembler without error checking.
This assembler has been checked manually against asi386.frt.
The improved results is used to assemble testset386,
and it understands that whole content, but the resulting
binary is still not good.

Coos Haak has discovered that rw-line.frt is missing from the
distribution.
Simtel has installed the new mina and wina 4.0.5 and sent a
message to that effect.
After much testing the non-checking assembler is okay at last.
2004 sep 28 tue
I have shoe-horned this into blocks, and this still tests
okay.
I have made a non-checking block except of the Pentium instructions.
This has been added to the other non-checking parts of the assembler.

I have rw-line.frt added to my page. It is referenced from known defects.
The page has not yet been refreshed.

The non-check Pentium instructions still contain errors first at offset
1539, but checked in now.

2004 oct 5 tue
The floating point package can now be loaded.
Conditionals can be tested but are awful.
I really can't see why the floating point instructions should set
flags directly. Probably an early design error that never can be set
right.

2004 oct 6 wed
2004 oct 7 thu
Fooling around with the mail system.
It doesn't work. Reading SCO news.
2004 oct 8 fri
2004 oct 12 tue
Added the merging to the stable system.
Made an experiment adding far link fields.
However it is probably not useful.
2004 oct 13 wed
Added an analysis about double link fields to the web pages.
Sent a message to Coos Haak to investigate plain messages.
2004 oct 15 thu
Debugged the code for adding links.
This is okay now addlf.frt sitting in $F
2004 oct 15 fri
Improved double link analysis.
Coos message didn't arrive apparently.
The test release is now up to date compared to the latest stable
release.
The difference in length between lina and glina is dispelled.
There was a SHORT missing somewhere that lead to a difference between
lina and glina, no more.
It turns out that glina has two program segments.
I can turn that into one by throwing away segments like
.text .data from the object file.
The .bss cannot be ridden off that way.
It then automatically deletes any relocation information,
leading to an unrunnable programm.
Using -K _start -K forth helps to keep at least some symbols
and have forth running at the right place in memory.
It turns out that .balign 4,0x90 just doesn't work in the GNU
as. This make it difficult to compare but it seems that the bulk
and at least the header are the same.
Further investigation show that a difference remains w.r.t. to
the position of the high areas ( stack pointers tib).
This fully explains the problems in running an executable that is
otherwise almost byte by byte the same.
Created a mailbug directory to really keep track of what is
going on.
2004 oct 16 sat
Worked on a vocabulary example.
as working on just any source file generates .bss .text and .data
entries (empty).
With -R .bss -R .text -R .data
all symbols are removed, such that the resulting file becomes
unusable.
With -R .bss the .bss section is not removed no warning is given.
With --strip-unneeded and -R sections are removed and the resulting
file is usable.
This unsavory behaviour undoubtedly is the result of featuritis in
strip, resulting in a Great War of Options.
(I personally would find it acceptable if strip had no default
action, more so than e.g. for objdump. But at least define
one default action, and always discard the default action as soon
as any option is psecified.)

Using --strip-unneeded and -R section I can make a glina that is
usable for compilation (glina -c hello.frt).
Want to check in, but problems with patches tag.
2004 oct 18 mon
It looks like I have the sticky branches finally under control.
The revision defined as sticky must be a branch e.g. something like
4.15.0.5.
Defined ONLY as a vocabulary, instead of the denotation vocabulary.
Made it into the sentinel for ending the search order.
This works, passes the regression test, however the generation of
documentation is still problematic. Something seems to be redefined.

2004 oct 18 mon
Working on the reorganization of the DENOTATIONS.
There is no longer a DENOTATION wordlist. Instead denotations
are in the minimum search order ONLY, which has become a vocabulary
itself. The end-sentinel for the CONTEXT wordlist has become 'ONLY >WID.
PREFIX is added to the kernel. Appropriate changes to the forth.lab
file have been made (such as removing the PREFIX definition there,
and renaming DENOTATION word list wherever it is present.

2004 oct 19 tue
At last building the documentation works too such that the
new ONLY / denotation mechanism can be checked in.
Indeed SORT-VOC works flawlessly on all vocabularies,
but if applied to ONLY, one can no longer call FORTH.
Which is logical.
Checked in 4.13.5.2

The assembler is renewed, but that means that before I can release
it, all CODE words must be rechecked, that reside in forth.lab.
code TICKS .. works
REQUIRE --hda_LBA on a 16 bit system has the many problems.
This must be fixed in the assembler before we can go on
Checklist:
* just one name that is rejected -- , think about the equivalent
   of CREATE- in the great assembler
* RW-BUFFER is not known (Why is it called RWBUF now?)
* CD as hex is a problem on MSDOS, must become 0CD.
* use opcodes, now that is possible for utilities like TICK etc.
* REQUIRE NEXT, doesn't workfor 16 bits, because of 32 bits code in the same
   screen
----------------------------
revision 4.13.5.3
date: 2004/10/19 15:27:08;  author: albert;  state: Exp;  lines: +6 -5



All cfg files got a description header.
Half of the CODE words are now using new assembler (i.a. TICKS)
lina doesn't stop gracefully any more on end of pipe.
More block buffers and wordlists for 32 bit systems.
----------------------------

This remains:
- all opcodes must be checked, because there are many changes
  - dump the code words from an old, working version
  - put the code in a file and run it through the large
     checking assembler
  - make again a hex dump
  - compare and improve
  - put code back
- $-PREFIX is required for --hd-LBA
- try out REQUIRE --hd-LBA installing some old hd-version from some old
   fd-version
- try out REQUIRE --hd-LBA on the same old hd-version from a fresh
   fd-version
- try out REQUIRE --hd-LBA on a fresh hd-version from a the old fd-version
- try out REQUIRE --hd-LBA all fresh
- try out releasing a booting version
2004 oct 20 wed
Going on with finding in the context of double links.
This has succeeded. In adddlf.frt there is a version that
can add double links to a regular vocabulary (like Forth)
and then look up things there, provided it is passed the
wid behind the dummy vocabulary header.
It is discovered that the disassembler no longer generates
VOCABULARY ENVIRONMENT but instead CREATE DOES> word.
This was so in the test environment, however that was
caused by running the official lina. The stable environment
never had anything like that.

I have carefully commented the (MATCH) word.
It must be replaced by ~MATCH that returns a number whose sign
has significance. Negative: below match. Zero: at match. Positive:
above match. So if the dictionary is order,  negative means "we
are not yet there". Positive means "you can abandon search".
The dummy words got to get an (empty) name.
2004 oct 21 thu
Checked in the commented version of (MATCH)
Introduced ~MATCH that only compares the corresponding length.
The (FIND) word then checks for hidden words and denotations.
This results in a 30% speed improvement.
If FORTH is sorted, it is even almost 50%, but it is not clear
why. The corresponding changes to ~MATCH-IGNORE have been made.
Partly this is caused by writing $@ in assembler, at last.

The results is 2 extra lines of code for $@.
And one extra label and 3 lines in (find) to handle dummy headers
separate from invisibility.
OTOH ~MATCH-IGNORE is considerably simpler.
----------------------------
revision 4.13.2.19  blocks.frt
date: 2004/10/22 00:49:11;  author: albert;  state: Exp;  lines: +7 -7

The checks after comparison have been moved from (MATCH) to (FIND).
(MATCH) has been simplified accordingly, and compilation is approximately
30% faster.
~MATCH-IGNORE is simpler, too.
$@ written in assembler.
Cosmetic, comments.
----------------------------
2004 oct 22 fri

The trick to have the elf header in memory at a nice place is
to not define EM as a round number, adding 4 will do.
This has been added to the source, and tested.
And committed to 4.13.5.6
The FORGET mechanism is now proof against reordering of the links.
And committed to 4.13.5.7
README.ciforth must be added to the archive.

It turns out that the simple trick
NAME SET $
        ...
        DL NAME
        ...
NAME SET $
        ...
        DL NAME
        ...
just isn't available under NASM. (There is a godforlorn amount
of trickery with macros.)
This makes it unsuitable for
a situation where the definitions could be sorted because they
contain no reference to preceeding definitions.

2004 oct 23 sat
(FIND) has been made more transparent. The return stack
is no longer used.
The bottom line;
 (FIND) + ~ MATCH have now two more labels, and two more jumps,
and three extra words
for a large gain in clarity, and preparation for the change to
search in ordered vocabularies.
It is expected that the speed is no less, maybe slightly better.
2004 oct 25 mon
Working on adddlf.frt. Introduced OPT at an appropriate place.
Doens't work.
2004 oct 26 tue
The extra field has been introduced conditionally.
_EXTRAFIELD_ option in prelude.m4
The (as yet empty) OPT is called if the extra field is installed

Looking into diverting within m4. It turns out that it is not
well possible to get the diverted output from a certain channel
in m4 to a specific file.

-g option added in options.frt
REMAINDER is initialised as null string.
This required removing a bug from $I. It could handle empty strings
okay, but not a null string.
2004 oct 27 wed

Checked in a version were the (FIND) word has no longer
start with a check to treat a dummy field. Dummy entries
can no occur anywhere in the chain. Herefore it was necessary
to introduce valid namefields for the dummy headers.
Hence the following improvements in version 4.13.5.11

The small constants are no longer code words, but CONSTANT's.
The dummy headers of vocabularies have a valid name field,
that points to the data field of the word 0, an empty string.
_DATAFIELD macro added to header.m4 and cosmetics to improve
visual appearance of assembler code.

Forgotten:
VOCABULARY now makes a full header.

In 4.13.5.12 improvements to the appearance of the assembler
source have been made. lina has not changed.

The code for $@ is not 16-bit proof. (change DX to BX).
2004 oct 28 thu
In generating $s.s moving commands from transforms to gas.m4
pays off. moving 4 commands from 56 spares 4 seconds
on 57. The most embarassing transformations are the comment
sign and hex numbers. Even after doing that manually
xxx.msm cannot be understood well by gas with the command
.intel_syntax noprefix.

I have added OPTFIND and fill in the x-field the same as the
link field if present.
OPT can return a null and that too is reflected in the source.
I think we are now in a position to add optimisation.
2004 oct 28 fri
I have now an OPT that will handle linear lists gracefully,
provided both fields are filled in the same.
It isn't terribly slow. The cleanup gained 30 % over 4.0.4,
now we loose approximately half of that in a situation where
the optimisation lookup is installed but no libraries are optimised.

2004 nov 1 mon
I give up doing more things at once. Let's first get the
improvement in the generation of glina ready.
WO phones: REQUIRE cd loads CD. (fixed)
warning for failed REQUIRE (I doubt still).
Trying to get rid of order reversion, and comment
The exciting possibility to handle gas files, only using m4.
This hasnot be realized, because the .Intel_syntax command
has not been introduced.
Introducing it is problematic, at least.

We have now 4.13.5.13

Warning for REQUIREd, but not FOUND.
REQUIRE cd results in cd not CD.
transforms cleaned up, greatly minimalised, moving parts to header.m4
For this _C_ has been introduced and some constants for characters.
This comment symbol affects the <as>.m4 files, other m4 files and
stealconstant.c.
Labels in (FIND) even better commented. Simple loop now stands out.

2004 nov 2 tue

We have now 4.13.5.14

All intel H notations have been changed to 0x notation.
As a consequence masm files will need a sed transformation.

It is difficult to make the transformations from
(ABORT") to (ABORT\") using m4.
patsubst() stubbornly inserts zero or two backslashes, never one.
Using a recursive _quoted() and trimming the strings is also
difficult. A string with an embedded ) seems impossible to trim.

For the moment I have given up on this one.

2004 nov 5 ..9
Working on code lock for the hcc.

2004 nov 10 tue
2004 nov 12..15
At HCC fair. The code lock works.

2004 nov 16 ..20
Working on have things compiled with gas.
Using .intel_syntax noprefix looks promissing.
At last arrived at a situation where it all compiles,
by modifying masm.m4. But it still crashes.
The differences with the nasm version are not plain to
see because of the ghastly code padding of gas.
It turns out that the latest version has a means of
getting that code padding off.
Fetched that version from the internet.

2004 nov 21 sun
I managed to use the -n option and indeed the padding changes.
The difference turn out to be where OR is used. OR must be
defined in gas to be | and not ||, as it is indeed a bitwise or.
The quoting is now delayed from header.m4 and solved in <assembler>.m4.
This allows a quoting with \ to be put in gas.m4. I use patsubst for
that, it works despite earlier messages to the contrary.
The resulting glina is identical to lina, except for inconsequential
bits in the header.

2004 nov 22 mon
todo
1. Adapt my resume.
 A Dutch
 B English
*2. Make a message regarding the e-mail.
3. Make message regarding .equ.
*4. Send all using the internet, not uucp.
More points addressed wednesday.

The e-mail is fixed. My computer had the hostname sparc instead
of spenarnc. That was all.

2004 nov 23 tue
1. Adapt my resume.
*A Dutch
Open Office generates an archive with xml contents

I have now tested the class library in blocks, and it works.
Together with CH I also have defined the classes using classes,
and this example works.

2004 nov 23 wed
*3. Make message regarding .equ.
*5. Find out whether cvs gives the same time to things checked
 in at the same time.
*6. Find a strategy to update release 4.0.6 properly.
*12. Announce ciasdis.
*13. Actually resubmit the 4.0.6 files into cvs.
*14. commit the final version where gas.m4 works.

If cvs checks in several files at the same time, the times
appearing in the logs are not the same. Typically they may be off
by as much as 3 seconds.
However ci features the -k option. This preserves all keywords
and such in the file. This means I could check out the versions,
update the version number, reinstall them, and then outdate
the original versions.
It seems best to just update once more with the considerable
success in generating a fully gassed version of ciforth.

ci86.gnr 4.13.5.15 has been checked in.
This are the changes:
 gas.m4 in itself gives a file assemblable by gas.
 The quoting has moved from header.m4 to the assembler dependant m4 files.
 The intermediate .pres file is eliminated and transforms is superfluous.
 ci86.lina.s is added to the release.
 Some cosmetics in the doc: _C sometimes was present instead of ;.

I have managed to move the 4.13.5 branch to the 4.15.5 branch.
This is now the rel-4-0-patches branch. Hoezee!
I can make a release, and it contains both .gas and masm versions.
At last ciasdis has been announced both in the color group and
on linux.

2004 nov 25 thu
To my surprise Jeff Fox has reacted positively on the
optimiser article.
*7. Put class.frt in the blocks.
*15. Check documention about options.

2004 nov 26 fri
1. Adapt my resume.
 B English
8. Full test of release.
9. Look one hour into the booting version.
10. Decide whether to fix booting version for release
 and (opt) fix it.
11. Release 4.0.6.
*16 Check documention about assembling.

Made a documentation update exemplified by Makefile 4.2.2.8.

The -g options can be made to work on windows:
* the size must be patched at address SIZE^ in the header.
  This however is not necessary for windows.
* the allocation must be based on EM. In this way it is
   automatically correct after the image is patched.

Update: 4.15.5.16 of ci86.gnr now handles growing the memory.
Also class / endclass is added.

2004 nov 27 sat
Wasted a lot of time trying to debug why trboot doesn't wok in
4.0. Decided to get 4.1 up to the level of 4.0 presumably finding
which change makes the difference.
Debugging made it clear that switching to 32 bit mode succeeds
and Forth is entered.

Brought 4.1 to the level of 4.16.5.8 with the situation staying the
same.

2004 nov 28 sun
1. Adapt my resume.
 B English
8. Full test of release.
*9. Look one hour into the booting version.
*10. Decide whether to fix booting version for release
10 a  and (opt) fix it.
11. Release 4.0.6.

Brought 4.1 to the level of 4.16.5.16 but still trboot works on
4.1 .
I seem to be determined to fix the booting version for release.

2004 nov 29 mon
The problem with not booting lies in the disk buffers.
Once there are 16 of them, booting no longer works.
This is due to the fact that the boot-image simply grows too
large. (There is a limit at 10000 -7C00).
With making the amount of buffers 16 only for hosted 32 bits system,
we can boot again with 4.16.5.16.

2004 dec 1 tue
There is another problem solved related to installing something
on the hard disk. This failed because the bootsector got
some extra dots from the macro preprocessor.

2004 dec 8 tue
It looks like it is possible to place a Forth on a Nokia cell phone.

2004 dec 9 wed
Copying a sequence from the linux setup.S which inhibits
non-maskable interupts doesn't help either. (Sending 0x80 to port 0x70).
This is the limit. I'm not going to fix the booting version for the
release.
* get the graceful end of pipe in linux redirection back
* add a key-flush to the installation
* add a last warning to the installation
* check the code for installation on hard disk

The last is an overdue action related to the change to the assembler
It turns out that the installation code was interpreted from a block,
but that block was removed from memory while installing.
The bottom line was that the interpreter was set loose on
undefined memory which lead to crashes.

2004 dec 13 (reconstructed)
The wina regression test fails on the TYPE command.

2004 dec 19 sun

The talk about denotations in chat rooms has triggered some updates
to the documentation. In fact some things were quite wrong,
especially related to the latest update regarding ONLY becoming
a vocabulary.

2004 dec 20 mon
2004 dec 21 tue
Bad discoveries:
- I can't install trboot on the hard disk any more.
- the BIOS seem to be affected by when and how booted

2004 dec 19 wed
The logboek wasn't properly backupped!
I now have separate backups for stnt (stnt pus ciforth) and
other things (projects).
Todo
- stabilize
  make an official 4.0.5.17 just leaving out everything that
  doesn't work.
  test it at the release level: mina wina lina

We aim at a release that fixes
  grow, -l documentation, require (wo), ~MATCH, ONLY, gas.

2005 jan 1 sat
Discussion about assembler for retroforth.
There is some interest.
Trying to disassembler retroforth.
There is much source in it!
This triggers the need to introduce some better cutting for text
in ciasdis

2005 jan 2 sun
I have saved a version that passes the regression test for ciasdis,
labelled CLASSES.
I'm now going for introducing proper separators in the disassembling of
text. This was more difficult than expected. I end up with having a
cut after each string, and well after the next non-printable character.
This works quite well.

2005 jan 3 mon
I want to have labels for each plausible cell that points into
the code segment.
PLAUSIBLE-LABEL? For ADDR return "it IS a pointing into the code buffer"
This must be added as a separate parse, otherwise it will not apply to
labels that come earlier. This is added at the end of crawl.frt.
To the Makefile is added a facility to test against the rcs archive.

2005 jan 4 tue
Added a facility to clean away duplicate labels that have trivial names
from the reverse engineering assembler disassembler ciasdis.
I now can disassemble rf and reassemble it.
There was a mistake in calculating _end in elf.cul. The start address
within the file was not taking into account.
Consult now prints a cr at the end of a file.

2005 jan 5 wed

Worked on finding jobs on the internet.

Published a decompilation of retroforth.
I have rfnew.asm that works and is checked in.
I have rfcrawl.cul that now separates the macro and forth
headers.

2005 jan 6 thu
From now on I want to save the results to which tests are compared
in RCS too. Tests are specified in the makefile
* make a decompilation that works from the new rfcrawl.cul
* make a regression test from lina405 that works
* model a test around rf using that

Found a few more bugs.

By
co -rSOMEVERSION RCS/*
make sometest RCSVERSION=SOMEVERSION
an older test can be run.

To accomodate older situation the rcs file have symbolic links to
the old names. However the best names have been retained.
This is name### for the exutable. name###.cul for its consult-database
This should be largely generated, but is manually adapted.
The result is that an include command foranother manual file is
generated in the name###.asm file, such that it actually compiles.

In the makefile a regression test around rf has been made more or less
the same.

2005 jan 7 fri
The situation around the line endings in labeldis.frt has been
resolved. The separate execution to handle this was not
needed. It now revolves around CR-ADORNED that does all the
type-independant printing.

The bug with the FF\ for the comment after ``bases'' in rf751
has resulted in the convention that all numbers printed and all
words (like db to start a define-byte line) must now end in a space.
The addition of -b -B to the rcsdiff in the
Solved most of the bugs in the list,  in particular the ones about
spurious line finds and double printing of labels.

I have labeled REGRESSDIS a version that handles the regression
tests for test.bin and lina, and is able to create a reasonable value
for rf751.asm, that not yet assembles.

2005 jan 8 sat
Looked into the .EQU   AAP,0 problem. In fact it is unreasonable to
have two values in AAP that both cannot be resolved immediately,
because they are forward labels, or relocated.
Looked at the gnu assembler and compiler. What if ciasdis would be the
back end of gcc? It looks that is hardly possible.
The ugly part is to provide elf object files.

2005 jan 9 sun
Made unparse and parse work, generating code back and forth between
blocks with machine code and other. This sits in the directory
forth/retroforth and has been sent to childers.

2005 jan 10 mon
Worked on making the Internet connection usable from apple.
Installed apache, which is a http-server.

2005 jan 11 tue
Worked on making the Internet connection usable from apple.
Progress: at least messages can now be posted from apple.
Whether they appear on the Internet remains to be seen.
Tried to contact Tim Neitz. He at least sent a message.

Ported the 386 assembler to retroforth. With Coos Haak.
Some work. Published it on the Internet.

2005 jan 12 wed

I see that I must change the ]' thingies in the assembler to %].
Now is the time to do this, because the other change in the assembler
format is done.
Contact with Tim Neitz. He has some idea's for doing the assembler
in colorforth.

2005 jan 13 thu
Got a compliment from chris cilders about the assembler.
Tim Neitz has sent a whole file with fire wall rules.
But I think the problem is more fundamental. It looks like
the kernel just doesn't support masquerading. I need an ip_tables
modules that is nowhere to be found.

I have uninstalled several packages from the sparc system by
accident. And some trouble to install them again.

2005 jan 14 fri
See computerlogbook. My spenarnc system does maskerading. I.e.ping
xx.xx.xx.xx works from apple After filling in apple:/etc/resolv.conf I
could do ping xs4all.nl. Then after filling in the proxy stuff in
yast/konqueror, I can even do web browsingusing Konqeror from apple.

2005 jan 16 mon
Started with job application at vergelijk.nl
Writing my first perl program
2005 jan 17 tue
Finished my first perl program
A 80386 assembler
2005 jan 18 wed
Contacted vbergelijk and sent application and perl program
2005 jan 19 thu
Read mostly c-news.
Perl program increased by 3 in speed, by not using $pe
in the assembler part.
2005 jan 20 fri
The perl program is improved, with proper error handling and
using $. instead of a linenumber.
The program is back at its old speed. What gives?

I still haven't sent the disassembly of retroforth to
crc. A small test indicates that the regresssion test with
rf751 succeeds as soon as double labels are printed.
So that is the next change.

2005 jan 23 Sun
The file games.html is separated out on my website.

2005 jan 24 mon
Bought an excellent compaq keyboard. Furthermore, The IBM
keyboard is the best I ever hand. It can be used now because
I have a cable that goes from new keyboards to old.

2005 jan 25 tue
A minischeduler for reverse polish calculations is added
to the perl assembler.
Another minischeduler for all assembler directives, is
in more or less started.

2005 jan 27 wed
Three cv's to software bureaus

2005 jan 28 thu
Two cv's to software bureaus, one to yarosa.

2005 jan 30 sun
Dramatic, I almost killed my Suse system by moving the
init.d directory.

2005 jan 31 mon
It turns out that it is difficult to run mysql.
mysql is not available in a Debian package.
The version of Suse 7.0 will not run on Suse 8.2.
Reinstallation doesn't help.
Installing on a Debian system doesn't work either,
Debian doesn't seem to know where to get mysql.
The building from source fails because there is no curses library
available.
Building from source in Suse 8.2 is may be on option.
2005 feb 5 sun
The split between stable and unstable versions is to be
gone. I'm going to stablize the latest action into a branch,
then put it back into the trunk.
testlina works. The texinfo has no dangerous changes
compared to the cmp directory. The officialdecompilation looks okay.
lina.zip can be built. Let us check this version in .

2005 feb 6 mon
There are two versions of the minimal 8086 assembler, one in the
official archive and one in the assembler archive. The one in the
official archive is virtually untested, but it is a literal excerpt of
the lab. The one in the assembler archive is just the old version
checked out, don't worry.
So I'm going to check in the new minimal version. This one is to be
tested against e.g. rf.
So we have 4.15.5.17 checked in now:
    - alonetr has become an official target
    - comment added to configurations
    - ass.frt updated to iso
    - ?WIMS and ?HS
    - flushkeys in installation to hard disk
    - now DFW by { } in bootsector is protected against manglin by M4,
    - documentation reflects that ONLY is a wordlist
    - have 16 buffers for large (32 bit) systems

The website has been revised with respect to the description of the
assembler. What remains to be done is
- introduce % in the assembler, instead of ' in 16 bits code
- repeat all tests and refresh the Pentium code in the web pages.

2005 feb 7 tue

There is a test386 that apparently combines testset386 and testset386a.
I think it is indeed better to make a test386 that is stored in
rcs too.
There is a regression test problem with wina. It
produces -32, sharing violation, (unix end of pipe. )
This must be -38 EOF/out of input for windows.
But it shouldn't, anyway.
What happens during redirection that any shell spawned takes
over the input, or so to say the /c /k options imply doesn't work.
It may appeared to have to, but this is due to the fact that
the whole input already was in a buffer.
I can still try one thing: a multiple line string, that contains
a newline, and exit and a ^Z.
It looks like the best thing to do is stuffing the keyboard buffer.

2005 feb 8 wed
Stuffing the input buffer is a last resort.
In fact :
  command.com works
  cmd.exe only fails if input is redirected from a file.
What I'll do is document this problem. Those who want to
use system calls during file redirection must use command.com.
The handling of the prompt during options is messy.

2005 feb 9 thu
The redirection bug is documented on the web page.
I do not intend to try to fix it.

The mina test runs quite well. Except for MEASURE-PRIME:
it fails with a TICKS not found. This might be fixed at last,
but I don't know whether I want that done in this release.

Tests of assembler now run against rcs not the testresult
directory. However there is a bug in the disassembling:

CODE JAN HEX
    AND, X| T| AX'| ZO| [MEM +1* 0]  9090,9090 L,
    AND, X| T| AX'| XO| [BP +1* 0] 9090,9090 L,
    AND, X| T| AX'| BO| [BP +1* 0] 12 B,
END-CODE

This triggers the action that the sib byte must be tested
with a real life code, and for all offsets ZO| BO| XO|.

2005 feb 10 fri
The booting code is tested and works.
Installation on a harddisk however fails. After some testing it
turns out that the program cannot be loaded It crashes with
garbage on the screen loading the last screen, the one that
actually defines INSTALL-FORTH-ON-HD .

2005 feb 11 sat
The bug concerning the assembler is not dramatic.
The [MEM is always matched with ZO|, but the BAD bits allow a
byte as well as a xell offset. This is remedied by adding
0x08 to the bad-bits mask of [MEM .
This has triggered the action to test sib using the example
of a LEA, AX'| instruction. In this way it is combined with
all offsets, and the [MEM error would have stuck out.
There are no consequences for blocks.frt, the user has to take
care not to use the byte offset.
The regressontest for sib is done via the example code LEA, AX'|

2005 feb 11 sat
All intel family code passes the regression test.
This includes the reverse engineering stuff.
There remains a problem with the 6809. It doesn't even
compile. After some debugging a regression test without
testresults is added to the Makefile, using asgen.frt -r4.9

2005 feb 12 sun
The test for the dec alpha runs, at least on the DEC alpha.
It requires a modified version 4.9.
There has been a change with respect to the commaers (dixit
asgen.frt log). This is probably the reason why the 6809
no longer assembles with the new asgen.
The idea that maybe the memory checking during booting hits
a vital part in Forth in the second megabyte. This was not quite
kosher, but fixing it does not help. However the system now hangs
instead of showing random screens.
After probing of the memory it hangs, even if I say I want to
abandon. A loose MEM-SIZE hangs.

The DEC Alpha test also runs on the Intel. From the latest Makefile,
but some special version of asgen.frt has to be fetched.

2005 feb 13 mon

* assembler alpha+6809 in order
   * check in new test results for alpha
   * test 6809 with 4.9.1.1
   * test alpha on alpha
Checked in and labeled TESTAS49.
The foreign assembler still use an old asgen.frt.

I have checked in 4.15.5.18 of ci86.gnr with the following
notes:

"
    -s option now should work for Windows
    -f cleaned up (using ARG[])

    Redirection in windows has been investigated, the handling of
    end of pipe is reinstalled.
    Redirection just doesn't work, w.r.t. spawned processes, hence :
    "TYPE hello.frt" SYSTEM removed from regression test.

    The trboot version has been cleaned up to no avail. It now starts at
    1M. It hangs mysteriously, e.g. when installing to a hard disk.

    Assembler stuff removed from Makefile & other cosmetics.
"

2005 feb 14 tue
* testen built in assembler against great assembler
This has been done. It revealed a mistake in the sib code for
[MEM. It was aliased to [BP] instead of [BP.

Now I am in a position to release 4.0.6 after a last test.

MOVI|XR, is not consequent visavis PUSI|X,
This has been changed, and the trailing ' has been changed
to %. Now testing the whole lot. Slowly while I'm doing other things.

2005 feb 16 tue

* [MEM -> [M  and [BP]' -> [BP]% rename effected

4.0.6
  before release
    - give up on trboot
    - test scripts on wina -s option
    - xp version

2005 feb 18 fri
The assembler explicitly loads a class.frt.
This should remain so. After 4.0.6 is official the reverse engineering
tool should be migrated to to it.
So the acceptance regards the great assembler of 4.0.6 is that it
should run, not that it uses all facilities available.

I have gone through the assembler chapter w.r.t the ' --> % ussue.

I have checked in 4.15.5.19 of ci86.gnr with the following
message:
"
  The documentation reflects the ' --> % suffix for 16 bit indexing.
  (+cosmetics). TOGGLE is not FIG-compatible!
  Warning for assembler code in forth.lab that doesn't compile.
  Error 24 (REQUIRE) adapted.
"
2005 feb 21 mon
The scripting goes wrong, since INTERPRET no longer exists.
So a new version of lina-4.0.6.tgz and cifgen-4.0.6.tgz is to be
placed on the page.
Done

2005 mar 2 wed
rw-line.frt is still missing from mna4d0d6.zip. Patched in by hand.
The testreport and this version placed on my site.

This is release 4.0.6
The information for 4.0.3 -> 4.0.5 is about :
PREFIX and made ONLY a wordlist.
~MATCH instead of (MATCH)
class.frt
Full Pentium assembler

It is all set and cut and dried in the PROJECT/simtel directory,
but uploading doesn't seem to succeed.

2005 mar 4 fri
Thanks to Diane's internet explorer and fast connection, the uploading
to simtel has succeeded.
The assembler has been updated to use the facilities of lina
4.0.6, in particular the built in class.

The target testas6809 doesn't work, not even with the special treatment
it gets in the Makefile. testasalpha has special treatment but has not
been tested.
All other regression tests succeed.
2005 mar 5 sat
Merging 4.9.1.1 facilities into trunk. The test for asalpha succeeds.
2005 mar 6 sun
The test for the 6809 also. It was a changes stack diagram for the
decompilers of commaers. This is now documented too.
Resulting version REGRESSION_FULL does the whole regressiontest.

2005 mar 7 mon
Modernizing improvements to asgen.frt labelas.frt.
Downloaded a lot of coff information.

2005 mar 8 tue
2005 mar 9 wed
The downloads to simtel are confirmed.
The adsl package arrived!
2005 mar 10 thu
2005 mar 15 tue
Fully installed, so I can surf the internet with impunity and
have telephone calls at the same time. Last phone bill at
Euro 250.
2005 apr 1 fri
I must take on a job. There is only on application left running.

2005 apr 25 mon
For a job at waxtrap I feel entitled to go on with the animal guessing
game.
* install apache.
( try it out from the local network
- backup / backup system
   - install doc
   - order it more or less
- install d++ on sparc
   - rewrite dialogs
* phone jenrick
* keep in touch with rentacoder

2005 may 2 mon
- backup / backup system
   - install doc
   - order it more or less
- install d++ on sparc
   - Use dialogs over web

2005 june 14 tue

I want version 4.2 of ciforth with:
1+    loaded extension
2/ rename to RSA   loaded extensions.
2* rename to LSA   loaded extensions.
(WORD) rename to NAME
(PARSE) rename to PARSE
No compiled constants
RP0 at a 0000 boundary such that return stack pointer can be
    used for user variables
Some speedup of dictionary search
Compiler optimisation
Exceptions catcher
Floating point
Return stack trace
Up to date w.r.t. versie 4.0.6
BAGS with a count instead of an end address.
Official version of regular expressions
Get rid of the mess with initialisation
Don't pass a number to initial screen loads
REQUIRE --> WANT  (??)
L@ --> FAR@

2005 june 18 sat
I have managed to get release 4.1 into rcs version 5.1 and
release 4.0 into rcs version 5.2
The 4.0 directory has been burned down.
The 4.1 directory has hundreds of files left.

2005 jun 19 sun
Some manual cleanup of 4.1 directory.
Action :
- make a 4.2 directory.
- test all.
- add a solution for namescooked and constant stuff.
- add make clean to Makefile, that really removes all generated files
- use that to automatically clean 4.1 old ci86 and 4.0 directories
- make sure namescooked works okay
- delete assembler files from 4.2 aka cvs root
- delete dieren files from 4.2 aka cvs root
- delete superfluous files from cvs root
- use that to further clean 4.1 old ci86 and 4.0 directories
- script that moves non-doubles to a single directory.
- move loose items into library file

2005 jun 22 wed
* make a 4.2 directory.
* test all.
* add a solution for namescooked and constant stuff.
* add make clean to Makefile, that really removes all generated files

make cleanall now really deletes everything.
Remains
- use that to automatically clean 4.1 old ci86 and 4.0 directories
* make sure namescooked works okay
- delete assembler files from 4.2 aka cvs root
- delete dieren files from 4.2 aka cvs root
- delete superfluous files from cvs root
- use that to further clean 4.1 old ci86 and 4.0 directories
- script that moves non-doubles to a single directory.
- move loose items into library file

2005 jun 23 thu
There is a difference now between the archive of e.g. as6809s.frt
in ciasdis and cvs, caused only by the introroduction of version 5.1
what a pity!
First: get a good split w.r.t. assembler.
* delete assembler files from 4.2 aka cvs root
"
 CVS: Removed Files:
 CVS:    testset8080 testset8086 transforms wc
 CVS:    ass.frt ps.frt testas386a testset386 testset386a testset6809
 CVS:    as6809.frt as80.frt asalpha.frt asi86.frt asm386endtest
 CVS: ----------------------------------------------------------------------

 Files related to the PostIt FixUp assembler are now sourced at ciasdis.
 What is left here is a symbolic reference to the ciasdis files.
 README.assembler reflects this.
 At last wc is renamed to mywc.
"

In Makefile.add is a list of files that have to be cleaned with ``make
cleanall' but currently aren't.

2005 jun 24 thu
Remains
* delete dieren files from 4.2 aka cvs root
* delete superfluous files from cvs root
- use testclean target to automatically clean 4.1 old ci86 and 4.0 directories
- script that moves non-doubles to a single directory.
- move loose items into library file

This results in Makefile version 5.6

2005 jun 25 thu
This is more cleanup w.r.t. Forth files
rm   assembler.txt        # Obsolete
rm   blocktotext.c        # Plain wrong
rm   defer.frt            # For reference, moved to .lab.
mv develop.man README.artemis
rm formula.frt         # Moved to  manx2
rm   link.script
rm   merge.frt            # For reference, moved to .lab.
rm   myblocks.frt         # Plain wrong
rm   qsort.frt            # For reference, moved to .lab.
rm   set.frt            # For reference, moved to .lab.
rm   release.txt
rm toblock.frt         # Obsolete
mv xxx.frt   dictspeed.frt



Everything fig-related has been removed:
fig86gnr.txt figdoc.txt figdocadd.txt figforth.c figforth.mak
fig86.gnr  figforth.mi figforthtest.mak frontpage.tif  memmap.tif
glossary.txt

Mostly obsolete files removed.
xxx.frt  -->dictspeed.frt
develop.man --> README.artemis

The files related to the figdocumentation where removed.
They fetched burned down versions of the doc anyway.
Now there is a message as how to obtain figdoc.zip properly.
Other files related to buildig weren't even supposed to work.

2005 jun 26 mon

The threads require that BP serves as the user pointer too.
This has been moved from 5.1 into the trunk. A THREADS:no version
of lina still works. The threads screens have been installed too.
The experiments leading to the threads can now be removed.
That means after the next update.

This ups ci86.gnr and blocks.frt to 5.3
This version tagged THREADS

Obsoleted: gloss.mig modern.m4 tty.c tty.h wordset.mig
Introduced THREADS by using BP as the user pointer as well as the
return stack pointer. Added TIME&DATE to the library.

2005 jun 28 tue

I have incorporated READ-LINE WRITE-LINE in the blocks file.

2005 jun 29 wed
READ-LINE committed. 5.6 contains all trivial changes.
This completes
* move loose items into library file
There is a note4d2.txt that documents changes present in release 4.2.

2005 jun 30 thu
Much wasted time in getting the info file back in order again.
INIT is now a word, and the wordset INIT had to be renamed, but I
was not careful enough. Anyway 5.5 of ci86.gnr is now up to date
regards documentation. Also removed the flag manipulation in blocks.

Version 5.6 of ci86.gnr :
Factors for (CREATE) : HEADER LINK.   NUMBER simplified.

INIT remains to be done.

2005 jul 2 sat

It looks like the way to load the optimiser is not documented.
optimiser.frt and analyser.frt in 5.2 are not the latest version
apparently.

analyser.frt and optimiser.frt are updated from 5.1.
Now "analyser.frt" INCLUDED ends with a print of 0, suggesting
that all words have the stack effect filled in properly.

After "REQUIRE BOUNDS" optimiser.frt can be included.
A good idea may be to set \D on.
optimcodge.frt cannot be included yet.

     --

2005 aug 6 sat
I can have a saved system of the analyser:
"analyser.frt" INCLUDED REQUIRE SAVE-SYSTEM "lina+" SAVE-SYSTEM
The saved system can include color.frt and then
DO-COLOR CRACK TYPE etc. work in a normal linux text terminal.

2005 aug 9 thu

With lina+ I can do
   INCLUDE optimiser.frt   INCLUDE testoptimiser.frt
This is apparently compared to the output testoptimiser.out.
This output of testoptimiser.frt has been checked again and it is okay,
it is now saved in the subdirectory testresults.

2005 sep 08 thu

Committed a new cvs version with three unrelated small updates:

Testing is now against a target in cvs (tsuite.out).
ci86.gnr : cosmetic, comment etc.
blocks.frt : readded the installation on hard disk.


The only action remaining in ci86.gnr is the introduction of INIT.

I have done just that plus the handling of the flag in options
simplified. It looks like for piping it displays the signon message
which is not what I want.

There was an imperfection in ci86.gnr. Fixed and added pipe to stealconstant.c.
ci86.gnr 5.9.

We are now in a position to commit the optimiser.
There is a small problem left:  : test01 IF THEN ; is not optimised
to DROP. According to the log of aug 9 this was correct a small time
ago. Apparently this has never worked, according to the rcs logs of
testoptimiser.frt. The test was fudged to this purpose, and fudged again.
So this can be committed, but put this defect in the commit message.
Todo, add testoptimiser.out to cvs.

2005 sep 09 fri

The whole circus is up to sniff with the latest optimiser from the
experimental version. asgen and other assembler files are fetched
from the ciasdis archive using a symbolic link.
lina-opt is a target in test.mak. testoptimiser.out can as yet only
generated manually, because of a mysterious bug. The uploaded file
is the target to compare against.

OK is now overwritten by a high level NOOP (TASK) such that 'OK RESTORED
works.

testoptimiser.out must be tested manually:
lina-opt | tee testoptimiser.out
INCLUDE testoptimiser.frt

The automatic test triggers error 22 (which supposedly prevents -->
from a non-block situation.) and -25 inappropriate control for device.

2005 sep 16 fri

optimiser.frt has been cleaned up a bit. Committed.

2005 sep 22 wed

The assembler pieces of the block file are tested by getting them
out, and running them through the great assembler.
This has been partially done now, only errors encountered
in macro CP, B| --> B'|
This has been put in the file forthlab.asm

2005 sep 23 thu
In general there is problems with 16 bit code.
There are some tricks to test it on 32 bit, that must not
be retrofitted from forthlab.asm back.
Good progress with it, using a separate RCS archive, till everything
has been copied.

It looks like the combination LGDT, MEM| doesn't work in 16 bits mode.
Right! This must be LGDT, MEM|%
2005 sep 24 fri
All assembler code adapted to new assembler.
The 16 bit code remains to be tested under MSDOS.
This is version 5.6 of blocks.frt

[DEFINED] has been made immediate (!)

MEM-SIZE was wrong.
It is now a constant that is calculated once.
It left the PROBE with a bad value.
It is still wrong. The value of (MEM-SIZE) must be stored
into it.
2005 sep 24 sat
Het weglaten van elke bemoeienis met memory size haalt niets
uit. (Geen aanroep van PATCH-MEM. MEM-SIZE als constant.)

It turns out that booting from hard disk still nrrds {} around
DFW in the boot sector.

2005 sep 26 mon
cvs version 5.11/5.7 :

INSTALL-FORTH-ON-HD overhaul, i.a. fatal-question
typed a non-existing string, stack-unbalance in MEM-SIZE etc.
Curly brackets around DFW were missing.
Cosmetics, in DEBUG (blocks.frt) and around NBUF (postlude.m4)

INSTALL-FORTH-ON-HD now correctly writes the hd at least the screens
but booting fails.

2005 sep 28 wed
cvs version 5.12/5.8/5.4 :
 ``end of lab'' block introduced.
 #BLOCKS in screen 0 related to that, elsewhere removed.
 Better handling of drive id. INSTALL-FORTH-ON-HD works again.

2005 sep 29 thu

The booting version should become a la colorforth.
Just accessing the disk, screen and keyboard.

2005 oct 5 thu

All to do things should be moved into the FCR database, or deleted.
How to handle 4.2 :
Make an obsolete thingy in configure. (?OB).
Add it at appropriate places.

2005 oct 10 mon

lina 4.0.6 is installed on both sparc and apple.
install-info however on apple failed.
Further, a version number on the first page is mandatory.
It is ridiculous to scroll through to changes to find on whether
you have a new version.

ftp to sparc doesn't work with guest, only with ftp.

2005 oct 11 tue

organ.frt added to manx. It compiles but cann't play a scale on itself
(too fast).

2005 oct 12 tue

organ.frt debugged. Reason to assume it is fully ok.

2005 oct 13 wed

2005 oct 16 sun
To my surprise it was rather straightforward and hardly
tedious to convert from struct to class.
This has been done for tmanx, and all the tests still work.
Also the playing of scales on the built-in speaker.
This version has got the tag CLASS.

2006 mar 25 sat
Made a note4d2.txt that documents the changes towards
4.2. The multi-tasking plus link and header.
But there was a notes4d2.txt that is better.
5.14 checked in with documentation changes, .SOURCEFIELD
bug, and tsuite.frt updated.

2006 aug 26 sat

Discovered that maybe compiler security should not be in the kernel.
Dscovered that maybe POSTPONE should be used instead of COMMA.

2006 nov 24 fri
manx has now ARTICULATE that handles L1 ..L9.
L0 require two words, L0 is the usage, but one also wants to
specify the staccato-length. Albert Nijhof proposes /4 :L0
which I doubt somehow.

2007 jan 6
* tmanx seem to run on the 64 bit machines, but doesn't build.
  (Frans vd Markt has an AMD.) tmanx crashes on 64-bit machiens
  apparently because while accessing some harware port e.g. 278.

2007 feb 20
At last: REQUIRE renamed to WANT.

2007 feb 24
blocks.frt 5.7 options.frt 5.17 is committed:
WANT now continues until it either succeeds or the end
of the library is reached. The end is now a sentinel: an empty
index line, reaching it is considered an exception.

2007 feb 28
WANT couldn't handle recursive calls, with the new way FILL-pad
is used.

2007 mar 1
FILL-pad is now called for each ?LOAD?.
``WANT ls'' crashes.
REGRESS.frt contains ADDRESSES instead of X-ADDRESSES.

2007 mar 2
REQUIRE -> WANT rename now fully committed into cvs,
also w.r.t. documentation.
The screen for ls contained a non-terminated string.
So that is solved.
2007 mar 3
HIP is a strange name for the low level interpreter
pointer. It is changed to mean high level instruction
pointer. A start is made with updating the manual
accordingly.
Some information about which registers are used in the
current programming model, is added to the documentation.
There is work to be done before the definition of
e.g. WOR leads to properly documentating that
EAX serves as a WOR register on this implementation.
2007 mar 4
width32.m4 and width16.m4 more considered to be models.
No reference to Forth registers in the bootup code
that is not Forth and forced 16-bit code.
To my chagrin still 32 bit code has a mere 8 disk buffers.

A commit (5.16 for ci86.gnr)
width32.m4 is no longer included in a strange place in the main program.
Instead it is more of a model, and included in postlude (conditionally).
The redefines that allow to have 16 bit code transformed into 32 bit code
are placed inline.
Some advantage is taken to improve the documentation but not all.

The use of CELL_PTR in the DPMI boot code was wrong.
Flexibility where rigidness was indicated!

2007 mar 11
Version 4.2 of lina has been installed as my personal version.
It is now called 4.2A,b bevause it is not official yet.
All assemblers test all right, however the ciasdis system
seems to have problems, not able to find forth.lab.
This is a target in the Makefile ok. But not all what should depend
of it, has been indicated as such in the Makefile.
forth.lab is an integral part of ciasdis.

This was the matter with .pdf :
The first page of text is counted 1. That means the first
two title page have a separate count (so 1 2 1 2 3(.
However a pdf viewer starts with 1 and counts through.
So the pdf page numbers don't agree with the page numbers printed
on the page itself. This doesn't affect printed output,
but looks ugly while viewing.
ciasdis is as good as compatible with 4-2-A.
isp-el has been cleaned up with 4-2-A but cannot be tested, until I
find my single board computer back.

2007 mar 12
ciasdis regexp (including refilter, and its application to thinking Forth),
 manx all seems to work.
Idea : move screen one to ^W and have at screen one merely
^W LOAD   WANT -legacy- .

2007 mar 27
Renames $I --> $^   $S --> $/ etc. introduced.
(PARSE) --> PARSE   (WORD) --> NAME
This works okay, handles at least the testasses target of ciasdis
apart from the regular regression test.
Moved DEPTH to blocks.frt. This requires an extra file:
ci86.lina.labtest. That has been made and the whole runs
the regression test again. (after adding WANT DEPTH to the Hopkins
test.). ci86.gnr 5.19

2007 may 08
The renesas version has been cleaned up (now 1.26).

2007 jun 17su
The SEGMENT name is made into SECTION in the assembler package.
Regression test has ben repeated, but failed.
I think I should test 4.0.6 again, then add section, than
migrate to 5 current snapshot.

2007 jun 23
With the help of an extra program (ascii) and an m4 macro ascii,
I can now assemble and link the assembler source files on Linux.
The renesas assembler did not handle character constants well,
especially not in EQU and in calculations.
The resulting file can be flashed, though it will be placed in
RAM. After reset still nothing happens. But it seems possible
to verify that the program got there all right.
2007 jun 25
With Coos Haak arrived at a reads file. Also introduced
the handling of the identification byte. It is necessary because
otherwise the flash remains locked.
2007 jun 29
The ``reads'' works perfectly. But it just dumps data read for the moment.

2007 jul 1
I can now flash a .mot file into the renesas ROM
The commands have to be restarted if failing. I use non-blocking
reads, and CATCH/THROW.

2007 jul3
Attempting to get Forth into the flash. This must be done interactively
because reading the .mot file is put in the wrong place in the image.

Making ram_m16c.a30 succeeds and ram_m16c.mot, but it contains MS-DOS
CR-LF. This I though was handled by HANDLE-S in reads.frt.
After removing the CR with a text editor, we got ram_m16c in flash
at address $F,0000 . And a loader that moves it to $0 (actually $800)
at address $FEA80. For this we need to issue an erase command at address
FE000, which was not mentionned in the table.

2007 jul 10
Not very much progress. There is a program fflash that can flash a .mot
file, but sometimes fails to establish communication.
Some experimentation with kermit, to get a connection with
Forth failed, even to get any char back.

2007 sep 6
Led program flashed into renesas.

2007 sep 8
First prompt from ciforth.

2007 sep 12
Viewing the pdf documentation of renesas.
- No description of options in a single board computer, so .
  change the chapter's name 'library and options'
- SAVE-SYSTEM and TURNKEY documentation must be adapted.
- Mention in the documentation that CFA and DFA had to be swapped.
- Find a place to tell about flashing the program into the board
  etc.
- MSDOS stuff is still sticking around.
- "there is no word defining user variables" Take that out!
  document the maximum user variable present.
General
- Is the getting starting all that good? Is there an installation
  paragraph missing?
- all the references to >CFA etc must disappear from >CFA etc.
  Instead they must all refer to ' '_den and ['].
  Those must refer to all the other fields.
- A stack diagram must show if a word scans the input directly.
- The heavy distinction between types of words must be lifted.
  More attention to the fact that disk buffers take space and where
  they sit.

2007 sep 16
Renesas ciforth runs the Hayes tests, and reveals a few more
errors in the assembler code: 0< and TOGGLE. (5.5).
OK and ERROR can now be successfully patched via their DFA's.
This version is called STABLE2.
The plan is to run now the offical regression test, but there
is a messy prelude, that fails. We get rid of that prelude by
getting rid of the old-fashioned DENOTATION wordlists (with weird
linking) and put the denotations in the ONLY wordlist, compatible
with 5.0. Well, it turns out that there is no prelude, and that the
change to the ONLY wordlist took an inordinate amount of time,
and in fact failed.
There was an error in MOVE, and we are going to remove that, then
run the Hopkins testsuite again.

2007 sep 17
After some help of CH MOVE works, also FILL contained an error.
Version 5.7 has this fixed.
The tsuite now succeeds!

2007 sep 18
The regression test test.cir30.1 runs. Reveals only small errors:
no error message to be expected, cora has its result inverted,
flags immediate was wrong.
Also the testing of the dummy flag in ID. was bizarre but this is the
same in lina (!) There also fixed.

More small err

2007 sep 19
Regression test improved.
Improvements checked in (5.7)
2007 sep 20
FAR@ added: 0F.FFFC FAR@ works!

2007 sep 21
Checked in FAR stuff. FAR@ and FARMOVE> work. Writing works not.
Writing in ROM requires a weird combination of settings
in the low control registers, not figured out yet.
2007 sep 22
Now adding library stuff, and a preliminary FARTEST word.
The BCLR and BSET instructions look weird in the assembly listing
as if not the intended instruction is generated.

There is just one SMOVF in the monitor listing of the EBV board!
This identifies the program that is used for flashing.
It suggests that prior to setting a word, one should write a
40H meaning a write command.

I have thinned the options to 16 and the blocks to 112 such
that together they fit in the first 128 of blocks.
There is now a command to write all those blocks to the flash.

This has been done. According to dump-image and FAR@ they are
there. The whole blocks wordset is added. Getting a buffer works
but 1 LIST doesn't. MOVEFAR> seems now to work okay.
1265 -102. FAR! crashes the system to the point that the dictionary
only lists from FAR! up. MOVEFAR> had the problem that I shifted
nibbles (4) instead of bytes (8).
R/W causes problems. Renamed to R|W. The offset was missing,
but 513 LIST worked. Added now as an M4 configuration item.
Also fixed ERRORSCREEN. 1 LIST and error messages works as
per 5.12

Made renames like NAME WANT NAMESPACE . WANT SIEVE works.

2007 sep 23
- take over NAMESPACE to generic forth
* generate pdf file, info, and look at it.
- introduce (LOCATE) that finds a screen with a text, from a screen on
- make the Hayes tsuite clean.
- run the Hayes test suite
* speed up to 19200
- clean up flasher against documentation
- try out gold tingle
- prepare gold tingle screens in chip
- put gold tingle screens in chip
- try board with portable

Motivation (LOCATE) will help make a LOCATE on Renesas without the need
for a source field.

All vocabulary consequence to the documentation has been implemented.
The --legacy- has been removed from the lab, the available options and
screen 5 cleaned up. SIEVE has been tested against lina.
It turns out that after reset the chip is slow. This can be remedied
by putting 8 in CM0 (after unlocking).
Very surprisingly, the problem of not directly connecting to the flash
boot program goes away if the initialisation of the memory is done first.
This is probably a timing problem, and warrants a good look into the
whole shebang.

2007 sep 29
I couldn't get the tingle to work, at the comsolutions meeting of
the 27. Showing primes works okay.
Adapted the test to 19200 baud and version 5.0 (NAME).
The test runs but hangs on the FAR words. These will not be
tested for the moment. Let's just have an up to date test again.
At last tsuite.out works properly. I cannot have CR not output
^M but that wasn't an problem with the motorola neither.
So I copied the test carefully this time from the test.mak and
edited it with vi. This removes the ^E and ^M from the output.`

The test system is now okay. Tag TEST_SYSTEM. This doesn't mean
that the tests pass okay.
There is something mysterious with WORDS. It seems as of the dummy
link is printed.

A long standing inacuracy removed from ID. If a DEA is dummy
it must not be printed regardless of other flags. (One could undertake
to put a flag there to indicate it is a wid.).
Notwithstanding this, it is not possible to remove the trick to force
a valid namefield (pointing to an empty string) into a vocabularies
wid structure. (I86).

The problem with renesas OTOH was that the flag field was just at the
wrong place.

2007 sep 30

At last ?DO works sensible with an inverted range.
This has been implemented in the official lina.

LINK and HEADER are nice factors, but are used just once, and are
not likely reusable in embedded situations. So renesas and motorola
are excempt for tracking this feature of i86.

Made a bigben program. It is in screen 128 ..134
This LOADS without problems. Now whether it works.
Testing runs quite well, and I have markes a version STABLE1.
At least it runs the tsuite and misses only the writing to flash.
(Such as MOVE>FAR R|W )

2007 oct 6
The HEW environment has been loaded and the writing to flash hijacked
into a file writeflash.dis which is now in RCS.
Copying the pure writing part from this file to MOVE>FAR doesn't work.
It even crashes, meaning there are severe memory problems, such as lack
of wait states. So a second attempt will copy more surrounding code from
the writing to flash example.
Despite meticulous copying the flashing doesn't work.
An experiment with commenting out the writing to flash reveals that
writing to flash is not the culprit.

There is some hope giving paragraph 24.15.6 and 7 that suggest that
writing to flash is sufficient to unlock then write it.
Even if the cycle in the text is interpreted as "instruction", (what
I have seen is that commands are put into a register to prevent cycles
betweeen the two flash accesses) doesn't help.
Slowing down the clock by 8 doesn't help either.
The setting of the FMR0 register (first 0 then 1 ) doesn't help.
At least this dosn't hang the processor, like the code stolen
from the HEW debugger does.

Even stranger, some versions with very few adjustments, like just
only adding wait states, can do a MOVE>FAR once (without success)
but then MOVE.FAR hangs (or crashes.).
An attempt to add testoutput within the loop fails, it now hangs
immediately.

Debugging SEE on renesas. It is a bit of an ugly program.
Trying to make it better using bags.
The i86 blocks.frt no longer uses @+.
Decompilation of OS-IMPORT readded.

2007 oct 7
Given up on using bags for see. It is not clear what should be improved.
Two modifications turn out to be necessary on the Renesas.
- Use >DFA instead of CELL+
- The invisible and denotation bits are on a different position.

Furthermore ?RE was inverted. Now WANT MS works.

I have modified the WANT mechanism in order to only check for
presence after a block loaded. Without this, checking for a non-existing
word takes 4 seconds on the renesas 12 Mhz.

2007 oct 13
In renesas ciforth BYE didn't work because it was no colon
definition. PREFIX was absent. Some improvements to documentation.
VERSION 5.21.

2007 oct 19
The WANT mechanism didn't nest properly, because ``pad'' is overwritten.
Cleanup of assembler, rid of 4 load screens, TICKS doesn't leave the
assembler in memory. Check in blocks.frt and options.frt.

2007 nov 3
Added FLASH-CLEAR to the Renesas board, which indeed clears
the flash. It turns out that I then can write into the flash,
but then the Forth crashes.
At least this gives hope that some day ...
It is not possible to write to 8.0000 e.g. block 0, but it is
possible to at least trash the value that was previously there.
And it is possible to fully erase the flash at address 8.0000.
and then get some value into it at the same run.
It looks that maybe writing into the flash is done at too fast speed.
Thank heaven, there is no need to enable interrupts in order to access
the flash. Furthermore after FAR! the speed mode is set the same as
before now, which was a bug.
You cannot write multiple times to flash, in fact what you do is and the
0FF with some value, and then what is there with the new value you store
there. So it looks like it is not easy to get a new screen there.

2007 nov 5
Saved as 5.21

2007 nov 11
Renesas:
The FARDUMP utility sort of works.
I have filled in non-available error mnemonics.
The startup selects a turnkey at 0F.0400 it there is no
virgin flash there.
Saved version 5.24
FARDUMP now works okay.
Working on SAVE-SYSTEM.
The version in the working directory must still be flashed, but is
believed to work okay.

2007 sep 17
SAVE-SYSTEM TURNKEY okay and checked in.
make test now is perfect, except for cutting off the part before
'split here' .
Written historie.txt ain dutch voor de vijgeblad and Cimsolutions.

2007 nov 19&20
Make test now fully automatic. Succeeds.
The normal documentation of the blocks now is updated.
This is how it is going to work.
On UPDATE the block pointed to by PREV is just marked, as in FIG.
When it must be written to flash, the first cell of
the original screen is set to 0 (which is always possible in flash).
Furthermore the first virgin screen is looked up in the overflow
flash. It first cell is set to the block number.
R|W must be modified such that if the first cel is zero, the blocks
is looked up in the overflow flash area, until a virgin screen is found.
The last screen found must be loaded.

2007 nov 24

It starts to become clear.
Block in the context of flash.
I have a reasonably succesful port of ciforth to the Renesas chip.
For the moment I have just read-only blocks, although a MOVE>FAR is
in place that writes a memory chunk to virgin flash memory and
FlasH-CLEAR to clear flash block.
Those blocks contain the ciforth-style lab (library accessible by
blocks), i.a. DUMP SEE QSORT MERGE-SORT EDIT (not usable yet) class
BAG SAVE-SYSTEM TURNKEY , error messages and examples like
TAARTEN-AUTOMATISERING.
As usual the WANT mechanism (formerly REQUIRE)  is in screen 1
so you can do
1 LOAD    WANT DO-DEBUG   WANT CASE-SENSITIVE   CASE-INSENSITIVE

(and if that bothers you you can do a SAVE-SYSTEM to start
CASE-INSENSITIVE

In ciforth any blocks being LOAD-ed are locked in memory
(which is against the spirit of blocks, I know).
I appreciate that BUFFER means "associate a buffer with a
number", and BLOCK requires in addition to get the content.
The original intent of blocks was to use memory as efficiently
as possible, to make things possible, at the expense of possible
trashing. This is where UPDATE comes in.
I have simplified this in ciforth for Linux native Forth's
by just writing to disk immediately, so with UPDATE, the block
is written to disk "immediately". (And linux doesn't write to disk, but
just does a linux-UPDATE thing, so the original idea of update is kept.)
Now with blocks in flash I face a different situation.
I think I will keep the LOCK-ing. This will allow to EDIT
screens and not have to write to flash so often, because
LOCK-ed screens are not written out, when a screen is needed.

FLUSH in flash is expensive. My blocks comprise two flash-blocks
say A and B, each 64 k.
To rewrite a block from B I have to clean a spare flash-block, write
the B to this flash-block, except for the screen itself. Then write
the screen to the flash-block part that was kept virgin. Then clear the B
flash-block, and copy the spare flash-block to it.
Of course it makes sense to FLUSH several blocks at the same time.

(I have thought about a preliminary write where blocks are written to the
spare then a bookkeeping about where the dang block 43 hangs out.
I would have done that with old flash where the number of times
you can flash is limited. But I find it too complicated, especially
after block 43 is written several times to flash.)

Development can be done with a spare flash-block (whose Forth-blocks
can be addressed by a block number too). This triggers an optimisation
in FLUSH to do a simple write if the target area is virgin.

So flush would look like this:
    - lock all blocks that are UPDATE .
    - Invalidate all blocks that are not LOCKED
    - clear spare flash. Write all blocks to spare-flash, only
      LOCKED blocks will be different.
    - clear original flash, copy spare flash.
    - remove locks.

EMPTY-BUFFERS remains easy. Never has been different in ciforth
from    "FIRST LIMIT OVER - ERASE".

The bottom line is that is doesn't seem to make sense to have
UPDATE and LOCK different.
It doesn't make sense to UPDATE a block
I have a situation where I can afford 4 disk buffers

2007 nov 25
EMPTY-BUFFERS in error is an embarasment.
It kills any UPDATED buffers. I should be able to get rid of
it by doing a 'LOCK CATCH ?DUP IF .... THEN and leaving it up to
the CATCH to regain the buffers.
This is because BLOCK can indeed fail, e.g. -1 BLOCK gives an error
on Linux.

Error messages to the effect (no error message available) added into
ci86.gnr 5.22. At the same time removed EMPTY-BUFFERS in ERROR.

The mini editor has been cleaned up, such that it is usable.
Indeed it works with Lina and now even with Renesas.

2007 dec 1
P doesn't work, cause no line endings are added.
And UPDATE is not called yet.
Plan:
   * remove STALEST from x86 master ciforth and test it.
     5.22 ci86.gnr Also a small cleanup from the testing, because of -legacy-
       is now CREATE d , So fewer messages show up.
     5.24 blocks.frt

   * Make sure that there is an error message if the disk fails.
   * Make message depending on disc / flash, or medium neutral.
   This has been realised in version 5.23.
   There was an defect the catching of LOCK. It dropped the throw
   messages, such thath the block nummer came out as an error nr.
   * Error messages are printed if they can, and don't lead to infinite
     loops on disk errors.

The documentation is up to date now too, and ``make $s.info'' works again.
(It did not for some time. Apparently. )
There is a start of a disk test, which leads to documentation too.

Try to get the PLL stuff working.

2007 dec 2
New version of Renesas ciforth
    Error 48 if all buffers are locked.
    No more empty-buffers in ERROR.
    LIST with line numbers.
    Virgin flash blocks load as empty.

Remains to be done, a reasonable handling of updated buffers.
(Writing back to flash etc.)

2007 dec 4
R|W tested, it works both ways.
Speed on 24 Mhz, experimentally tested out via screen 141.
Now built in, but the regression test fails with 38400 baud.

2008 jan 4
Session with A. de Knegt.
Electives screen adjusted to a normal user.
WANT DEADBEEF would be a good idea, but it doesn't seem to work

2008 jan 5
The version such as improved dd. jan 4 now on the site ,
and marked as BETA1.
count is wrong after (ACCEPT) receives the maximum number
of characters. ACCEPT made as a proposal to replace that.
ftp site upgraded, also with a list of current defects.

2008 jan 6
Sent a mail to Glyn to announce the package.

2008 jan 8
The Renesas has now a better ACCEPT that doesn't have problems
with buffer overflow. It still needs a CR in ACCEPT at the
end after accepting the 0D to end it. (ACCEPT) now
uses ACCEPT. This may change again of course if interrupts
are going to be used.

2008 jan 9
It looks like the tsuite works okay, except for the
blank space around OK. This is before the change in accept
has been made.

The change in accept looks okay now.

2008 jan 15
Opmerkingen van de Knegt, tevens van 14 januari:
- LOCATE is belangrijk maar niet gedocumenteerd in het hoofddocument
- REQUIRE schijnt nog in het hoofddocument voor te komen
- DEPTH wordt geladen, maar is er al
- ?PAIRS verhindert bepaalde constructies van AN
  misschien iets van NO-SECURITY

Een turnkey in het Renesas boardje gezet.
Gedemonstreerd bij de SIG embedded groep.

2008 feb 5
Plan : first make everything work flawlessly under 4.0.6,
especially manx, ciasdis, colorforth, renesas flasher.
Then make a definitive 5.0.0 release using remarks from
Renesas and 6809.
Then test all other works.
Then test all 5.0.0 under wina.
Then upgrade all other ciforth compilers to 5.0.0
Go through all remarks, maybe putting them into a
freebase database first.

2008 feb 13
The 64 bit lina version assembles.
Debugging using gdb is very nasty.
It crashes, after doing a ss.

2008 feb 10
The turnkey options doesn't work in 64 bits.
The ELF header detection doesn't work because it should
use 32 bits only. This has now been changed to 64 bit compatible
code. Furthermore, I .SIGNON has been put back in ABORT , with a change
in test output.

2008 feb 20
This was wrong, instead -c changed to kill the .signon in turnkey programs.
The whole 64 stuff works, including compilation.
However the stealing of constants goes wrong. It is a real mess.
E.g __NR_open apparently means something different and it is not clear
how and why.
Now the whole directory is placed on apple, in order to integrate.
Wasted a lot of time on getting the 64 bit SAVE-SYSTEM to work on the
DEC Alpha in the same way. The DEC Alpha uses CORA in a clever way,
and that is copied back.

2008 feb 23

* get SAVE-SYSTEM right for 32 bits
* get the generic system on 32 bits generate the right assembler file
   for 32 bits
* regression test of old 32 bit system
* regression test of new 64 bit system
+ get SAVE-SYSTEM right for 64 bits on AMD
* test whether 32 bit documentation still flies
- adaptation of documentation to include 64 bit
- inspection of 64 bit documentation.

SAVE-SYSTEM 32 bits has been committed, and at last also DEPTH related
stuff.
Changing the QSORT interface is easy enough to do, but in principle
it breaks existing code.
Maybe just put   : QSORT ROT 1- ROT ROT QSORT ; in the legacy screen.

I have managed to make proper 64 assembler files, but they are not
yet compiled on the 64 bit system.

Now they have, and they work with the following manco's
  The 64 bit save-system had to be mended, and still generates executables
  that execute, but are not proper according to objdump
  The SYSTEM command doesn't work

tsuite.frt runs and the output differs from the 32 bit output in the
expected ways. testlina.1 runs not unreasonably until it crashes with SYSTEM.
So lina -c works !

2008 feb 24 (sun)

* adaptation of documentation to include 64 bit
* inspection of 64 bit documentation.
There is also some improvements in cifgen.mi regarding debugging,
and there was still mentionning screen 8 instead of 5.
Documentation is now in reasonable state.

2008 feb 25 (mon)
Added a target testlina64 that generates files needed and a test script.
Also added a target lina64.zip

SYSTEM fails on the 64 bit target. This reveals a bug. If the execve
fails an attempt is made to report an error, then BYE. But the BYE never
happens and it fools up the error channel and the standard out channel of
two processes no end.

"PATH" GET-ENV TYPE fails on 64 bits. The address is apparently too high.

This triggers two modifications for the standard system unrelated to
64 bit in fact.
TYPE has now a THROW, and the child part of the system fork has now an
ERROR not a THROW.

Also ETYPE needs a throw. The SYSTEM command needs a second argument that
goes by 32 bit longs, not cells on 64 bits. This has been checked in.
Output of 64 bit tsuite.frt is also added.

2008 march 18
MS KEY and KEY? may go wrong because a store of 32 bits is needed in
the TV struct. MS has been confirmed. The solution is to add L! and
L@.
5.32 /5.33
   Renamed L! L@ into FAR! FAR@
   Introduced L! L@ meaning 32 bits fetches and stores.
   Fixed up MS KEY KEY? for 64 bits using those.
   They used 32 bits fields in c-structs.
   + dash removed from name long-store
This snapshot is placed on the site, and works after fetching to my
64 bit system and adding two % signs. 5.33 is *not working* for
64 bits!

R|W has at last been introduced fully, with one reference to the old
fig-Forth word in cifgen.mi remaining.

2008 march 19
It turns out to be difficult to get the correct names into the
html glossary.
On 64 bits systems the grow option doesn't work. The resulting
file is not a well formed program according to objdump

In 5.34 a % is added to the forced register indication in ci86.gnr
in behalf of L! and L@. Unfortunately this update has no CVS log.

This triggers an improvement in the Makefile because as on 32
bit Linux can assembler (but not link) the 64 bit version:
    lina64 is at least assembed.
    Default for VERSION is test.

2008 mar 27
Some time spent in debugging why I have to do init-communication
two times in iflash for the renesas. Even catching the
individual test doesn't help. ixon ixoff changing doesn't help.
It doesn't matter of the serial line is open twice, or the first time
it has been closed.

2008 mar 28
More testing. The protocol is: first try. If that fails,
send nulls. Now you either get B0 back (success) or not.
In the latter case, the board has to be set to an other crystal
because it cannot accomodate you.
More accurate following the protocoll is to no avail.
So I build in the first failing test, and catch it, then go on.

2008 apr 1
The Renesas new ACCEPT is still to be checked in!
Done! 5.29

2008 apr 12
The last few days Spykerman has worked on porting ciforth to OSX.
My conclusion is that I should try to make the Unix version (now called
linux) more generic.
It turns out that there were some loose ends w.r.t. the 64 bit version.
Furthermore there was a difference in the lina and glina executables,
because lina was not stripped from symbols and the .comment and .bss
segments like glina. Now lina is likewise stripped. The 64 bit version
is called lina64 in the Makefile, but cannot be build on a 32 bit system
anyway. This has been checked in and marked BITS64.

I have changed the name of LINOS to XOS in the main program and the
library.

With version 5.23 of the blocks XOS is introduced. And corresponding chances
in the documentation regarding operating systems, and in de m4 files the idea
of _OS_ has been introduced.

With the -N option of the loader
the kernel can be in a .text segment and the dictionary
in the .bss section.

This has been announced and 5.35 is put on the Internet.

2008 apr 13
The corresponding 5.35 of lina64 has been put on the internet too, and
a beta version of the generic system. That one doesn't assembler, and there
is no binary image in it neither.
The use of the -N options has been confirmed in the ubuntu 64 bit system.
So I have update all instructions in the Makefile, and in the description
at the start of the assembler files to reflect the new technology.

This is version 5.36.

The corresponding 64 bits beta version has been build on ubuntu 64,
checked and published on the web site.

2008 apr 15 tue

The cleaner fetching of the place of the SIZE instead of just
an offset of 0x48 in the file, results that grow doesn't work.
I have patched that back. A similar patch to the lina64 version
has to wait, because there this doesn't work.

2008 april 22

The renesas flashing now handles regular blocking I/O with
a time out. This is sufficently under control to be able to
initiate the communication.

2008 apr 26

The communication starts up fine now, as long as the
sbc is reset, without the need to reopen. The number of
zero's I used to start the communication was too low.

Remaining problem: reading out memory fails on the
Pentium 90 directly after a disk read. At least I hope
that I don't confuse the casue and the consequence

This can only be solved by a retry. However,
since I use VMIN in the termio structure exactly
the amount I want is read.
This means that I can consider the situation of a partial
write an exception, and cut out two layers.

2008 apr 26
The partial reads have now been eliminated.
The latest version works stable, except for a bug reading at address
F,8500. This is quite mysterious.
This version is good enough for the website.

2008 may 2
More experiments with the retry bug. A longer mini layout (TMIN),
or a check-status call, doesn't help. Neither does erasing the
content to FF.

2008 may 3
Trying to get the Spykerman version integrated.
Added to the generic system, xina.cfg.

2008 may 4
OSX version published on my FTP site.
5.29 version of Renesas compiled with 4 blocks.
This handles block 5 alright.

2008 may 20
The spykerman version is tested and Spykerman found a few problems,
the version before the problems are solved are in 5.38
5.39 is supposedly a working osx version, with minor problems.
Here is the comment of Spykerman, that I didn't copy into the
main source:
"
 Roberts comment about the syscall
 Don't ask me why, OSX expects a 32bit word extra on the stack.
 I believe BSD and OSX expects one to call int 0x80 by creating
 a separate jsr to a subroutine that just does the Int 0x80 and rts's.
 so if you do it that classical way, when you jsr, you pad the stack with
 the return address. We do it this way because we are lazy and don't want
 to waste cycles by jsr'ing. So...
 OSX BSD expects the call no. in EAX. the TOS is just padding

 Roberts comment about the forking.
 Syscall coded in assembler
 ( pads stack before syscall, I guess you could sub ESP, 4 if you wish)
 Mainly to mantain compatibility with SYSTEM word which expects a return
 value on the stack much like the linux syscall. Unfortunately on OSX, the
 return value from fork is different and has to be interpreted differently
 Basically, linux behaves as it says on man 2 fork
 OS X does not - it returns 2 values, EDX - 0 = parent 1 = child
 EAX = pid of child returned to both processes.
 where the error code gets returned is your best guess. I hope it returns in
 EAX

 Return code for
 Robert's Mysterious manipulation
 basically mashes EDX and EAX together to return in EAX for compatibility with
 system. Parent gets the pid of the child (and hopefully err msg which may be in EAX
 if the syscall fails.
 child gets a return of 0
"

2008 may 24
The save-system functionality is broken.

2008 june 10

5.40 : words in right order.

Tested: testlina , officialdecompilation, doc builds.

Loading the assembler goes wrong in test-next.
SAVE-SYSTEM fails.

5.34  blocks.frt
5.40  ci86.gnr

Config added for OSX : OSX?
SIZE^ was mauled, it was for GROW only, now documented.
WORDS gives recently last.
No more line numbers with -v -e options in copyright message.

Assembler crashes if not case-insensitive, this is not bad,
at least not worse than silent acception.
There must be a notification that NAMESPACE's are no longer
IMMEDIATE. This has been done. However the VOCABULARY word in the
file blocks.frt is as of old.

5.35  blocks.frt
5.41  ci86.gnr
NAMESPACE is not longer immediate, FORTH and ONLY in ci86.gnr
adapted accordingly, documented.

2008 june 17
wina doesn't work at all. Went back to 2005/06/17 for a reasonable version.
2005/06/30 version 5.3 has no major problems.
2005/07/01 version 5.5 has major problems: The cursor moves strangely,
the stack is seemingly infinite and contains mainly FE.

2008 jun 24
5.43 for ci86.gnr  5.39 for blocks.frt
wina works again, reasonably after a bug was fixed in farmove.

2008 sep 2
ciforth Atmel adapted to the point that the file of Ron Minke
that assembles, is almost reconstructed. Version 1.12

2008 sep 20
It turned out that I lina -e no longer worked after fooling around
with traps. This is a solved by editing the INSTALL-TRAPS screen.
The traps are now reinstated in lina after a warm restart.

2008 sep 22
lina -a now has (LOCATE) that looks in the library.

2008 oct 21
The strip command was wrong. Updated.
The grow command only updates the length of the data segment
but everything outside of the text and bss segment is not stored.
This includes a place with ".shrtab" ".text" ".bss" and the
empty bss segment points there.
This has been checked: by replacing .bss by .bst over there the
output of "objdump -x lina" is changed.
Otherwise the -N options works quite well.
The -g option works on 32 bits, but on 64 bits it leads to a crash.
The only difference is the offset of the place where the size of the
.bss section is to be filled in.

2009 jan 3
ALIGN was immediate (!?) . This has been fixed in 5.45.

2009 mar 26
Made the change in the official disassembler (ver406) from
sections to ranges. I can now rename SEGMENT to SECTION where
appropriate.

2009 mar 31
The disassembler has now SECTION as an intended name.
The documentation of CO is improved.
The definition of T[ is put into the screen with SWAP-DP.
A separate screen makes no sense.
5.46

2009 may 17
Adaptations to Renesas. Regards alignment. Must be retested again.
All checked in. CH+ is now $C+.

2009 may 21
The linking of an assembler file can use a very simple script
"
/* $Id: logforth.txt,v 1.66 2018/06/15 04:00:23 albert Exp $ */
/* Script for -N: mix text and data on same page; don't align data */
OUTPUT_FORMAT("elf64-x86-64", "elf64-x86-64", "elf64-x86-64")
OUTPUT_ARCH(i386:x86-64)

SECTIONS
{
  . = 0x400000 + SIZEOF_HEADERS;
  .text : { *(.text) }
  .bss : { *(.bss) }
}
"
This results in copying one to one of the assembler sections to output.

The command is
    ld -s -T as.script lina.o -o lina
Suddenly this doesn't work anymore.
What works is
   as lina.s
   ld -s -N a.out -o lina

Furthermore, -g as well as -c has worked for 64 bits.
It seems that there is no need to kill sections.
Just fill in one field in the header PSIZE where the total program sits,
and some other field TSIZE where the text size sits.
These can be updated separately for a grow and a compile situation.

2009 may 22 friday

I have designated two places in the header to patch for the
total size (G-SIZE) and the dictionary size D-SIZE.
lina -c and lina -g work for 32 and 64 bit.
No attempt is made to kill any sections.
The resulting executables can be loaded but are not accepted by
objdump -x.
The total size of the dictionary has been adapted, such as to
result in the number as asked by EM.
However the mangling in the 32 bits version for linux in the postlude.m4
(by 74 bytes) has been left in. This mangling seems not to be necessary
(any more).
The comment about building is now added in the source
as lina.s ; ld -s -N a.out -o lina


2009 jun 8 mon
The TICKS code is added to 64 bits Forth, allbeith in binary form
WANT MEASURE-PRIME now works. The MEASURE-PRIME .uS etc. that is in
principle independant of cell width is now no longer protected from
loading in 16 bits. (There is a constant 100,000 that will fail.)
The RDTSC instruction works. The 64 bit counter is still split over
register AX and DX such that they have to be combined into a long
with a m.s. cell 0. Result in blocks.frt 5.44.
Trying to build mina, but failed. I have now cleaned up the constant
M4_FILELENGTH to be properly contained in the postlude.m4.

Version 5.49 of ci86.gnr with some improvements regarding the
handling of macros for register names and (pseudo)-instructions.

2009 jun 9 tue
ci86.gnr version 5.50 has some spelling errors removed.
The same errors checked in ciatmega.gnr.

2009 jun 16 tue
Downloaded avra sources, and get the .DW and .DB directives working
in a .DSEG.
Error in manual.mi. VOCABULARY is to be standardized, not NAMESPACE.

2009 jul 8 wed
The offical RCS of atmel resides in the AMD machine.
The label FIRST is a version that assembles and has the total framework right.
Meaning non separate data and code spaces, and the tricky business with the
headers.

I have an Elektor R32C sbc!

2009 aug 24 mon
Decided to clean up the BLOCK wordset. R/W is gone. BLOCK-READ
BLOCK-WRITE and BLOCK-SEEK (instead of SEEK). This is ci86.gnr 5.51.

2009 aug 25 tue
Put 5.50 on the website for 64 bits. That means a version where GROW works.
Also made sure that the lina64 while is executable.

2009 aug 30 sun
Got rid of the KEY? in INDEX. This resulted in error -22 for something
as "echo 1 500 INDEX | lina". It only makes sense for tape systems,
and could be reintroduced if needed.

2009 sep 1 tue
Coos Haak reports a bug in the documentation: parameters for PUT-FILE
are reversed. Fixed.

2009 sep 22
Added ROLL and -ROT to the dictionary, improved formulation of GPL
extension.
 Removed: 0 HANDLER ! in screen 3.
Checked in, above plus NO-SECURITY and documentation.

There is no problem with errors and WHERE in strings or blocks.
However there are no tests.

2009 oct 10
There is a complaint about wina not working with -g.
This is true.

2009 oct 20
A 32 Mbyte wina forth works under XP.
Checked everything around -g for windows.
The only reason for it not to work in the given code
is the phrase CF: ?LI
Checked and it appears to work!

2009 nov 1 sun
Some time spent in checking why I can't boot from the Toshiba.
At least CS:PC starts with 0000:7C00

2009 nov 3 tue

Trying to commit changes, but I can't easily do cvs commit
without the graphic user interface (expects ee).
changes made:
   r/w -> block-read block-write (but still incomplete).
   A serious bug, storing DLHEAD stored garbage.
   TYPE using ?DO
   , and C, : allocate before store.

There is now a reasonable HELP for sources and the lab library.
(help.frt) and in error.frt at last a solution for half baked
error messages.

2009 nov 24
Just discovered that the elflash.zip misses timing.frt.
It doesn't work with machines that are too fast anyway.
Looking at the timing.frt in manx doesn't make me happy.
Maybe just switch to TICKS-PER-MS.
On a 64 bit machine TICKS should return a single precision
number, otherwise all the trickery around wrapping doesn't
work. We can't diminish the precision, in general, because
thanwe shift in 0 bits, and that generates a gap in the counting
between 000F..F and 0000..0 . The solution is to shift back
a difference, now we can just check whether it is negative
as we used to.

2009 dec 22
Cleanup of ci86.gnr regards block-read and write.

cvs commit test.mak names.m4 indexhtml.m4 ci86.gnr

The html glossary file has now the colors of chforth's glossary.
The references from SCREEN~ and other twiggled wordsets are fixed.
The header has correct program name and version.
ci86.gnr is now at version 5.56.

2009 dec 23 wed
Further improvements to the html glossary file. The variables where
sometimes named forthsamp sometimes forthvar. Made that consequent
and also have the variables bold instead of italic.
There is a difference between handling _VERBOSE_ in info and html.
info want _VERBOSE_({{aap,mies}}) and html want _VERBOSE({aap,mies})
(Otherwise expansions in aap are not done.) This is very fundamental
but as yet I just work around it, by {,}.
Also the word ( is not handled reasonably in the info part. I'm not
sure what to make of it. For now I have just made % take the place of
(. It becomes clear why sometimes forthsamp etc. is not expanded
in html. This is the problem of the brackets with _VERBOSE_

2009 dec 25 fri
More small improvements, in particular #LOCATED introduced to replace ?LOAD?
Experiments with { } to replace :NONAME ;

2010 jan 12 tue

SAVE-INPUT and RESTORE-INPUT must into forth.lab
IN is renamed to >IN
0>IN resets the input to the start of the line.
(>IN) and IN go to legacy.

Tests now fail because it must be replaced in the library
too. This has been done. "official-decompilation" updated.
In -legacy- there is l_>IN to minimize risk.

2010 mar 16 tue

A long way to debug the ALLOCATE package with the help
of Coos Haak.

2010 mar 20 sat
Bijeenkomst van Unix gg. Over debian packages.
dpkg is het hoofdgebeuren.
Het pogramma alien zet rpm naar deb.
dpkg -S <file>
laat zien in welk package <file> thuishoort.
dpkg --list
laat een lijst zien van alle pakketten die er op deze computer
geinstalleerd zijn.
Er zijn tools om een normale make (met configure, target en install)
om te zetten naar een deb pakket.
Het officiele programma daarvoor is  dh_make.
fakeroot check_install -D make install
The deb file is just an ar archive with a few obligate files,
build using `` ar r naam.deb ''
There is a program dh_make
(dh_make build_essential).
dpkg -buildpackage -rfakeroot
The policy is explained in debian maintenance guide.

A program like lina would be put into the contrib part of the
distribution, because it is available for just one architecture.

2010 mar 29 sun
ALLOCATE package fully test set.

2010 apr 6 tue
Renesas setup done for 32 bits.
Managed to get the pdf file from the Internet.
2010 apr 8 thu
Setup an environment for the renesas on the AMD via sparc,
where the RCS files temporarily reside.
2010 apr 8 thu
2010 apr 9 fri
The 32 bit Renesas assembles without errors.
2010 apr 10 sat
Forth meeting.
2010 apr 10 sun
The memory allocation wordset compiles in gforth with some
additions to the block.fb library.
Created testallocg.frt, there is still a bug in resize, the
content is not copied. testallocg.out.

2010 apr 15 thu
Hitherto I had debugged the 32 bit Renesas board using .mot files.
however it is better to use .x30 files, for then single step through
source which is much better. It is discovered that the idea of only \
using push.w to push a word leaves the remainder of the 32 bits
on the stack as it is. After using `pushm Dx' throughout we make it
to the .CPU word. Now also the program to copy the Forth to its
place has been debugged.
Another attempt at connecting to the board failed, Delorie's
howto of renesas flashing is optimistic, and it doesn't work for me
on the AMD machine.

2010 apr 16 fri
The first screen is adapted to work better on gforth ( using MAX).

2010 jun 15 tue
Version 5.50 of blocks.frt has now the MEMORY wordset.
It doesn't agree with the version in $F/tools because there
RESIZE gives back two values if failing.

2010 jun 22 tue
In behalf of version 5.0 all text files in the main 86 directory
have been revised and possibly zeroed, with the exception of tobedone.txt
that contains to much changes.

2010 jun 23 wed
Continued with writeup of changes from 4.0.6 to 5.0.0
The info for lina can no longer be built. Urgent action required.
2010 jun 24 thu
The info can be built again. I introdcued a worddocchapter(LEGACY)
where LIBRARY was needed.
A mysterious improvement: gloss never succeeded in showing
descriptions.

2010 jul 6 tue
2010 jul 13 tue
Release 5.0, the official decompilation is approved.
Make lina.zip : generates an archive, but there are errors from the
.texinfo file.
WANT MEASURE-PRIME fails with CASE-INSENSITIVE.
mywc has not been changed to use -s option. But it has revealed that
the -s option failed because of use of IN instead of >IN. (fixed).
Documentation: there are some internal links in the .html file that
fail. Partly because of too many curly brackets, partly because of the
prefixes that are present in the html as prefix_^ etc.
This should not prevent a release.
2010 jul 18 sun
The discussion with Dennis Ruffer has triggered an investigation
into source boards. For SourceForge and Google after a full day it
doesn't become clear whether and how an existing code base can be
put into the archives. On Savanah it is clear within 5 minutes.
SourceForge has tried to do a dirty trick to get hold of the
sources of the web site mechanism. Google doesn't seem mature.
Despite glowing messages, I have no convincing evidence about
superiority of SVN Mercurial etc over CVS.

So savanah is the board of choice.
I will first put my utility ssort (supersort, C++).
If that goes well, I contine with ciforth/lina.
Then ciasdis.

My ftp sports (final, finalsmall) a few non-reproducable
disassemblies.

2010 jul 23 fri
I want a few changes into ciasdis
  - the use of hard links to cias and cidis must go
  - I want links between assembler words, no use of dictionary
    links
  - IS-1PI ..IS-4PI is superfluous, so is BUILD-IP
  - the filosofy of a fixup from behind must become:
     backup a cell, then AND! OR! etc. with the content of >DATA
     and mask with >BI.
     This means that directly after filling the >BI and >DATA
     field we fix them as follows:
        fetch them and clear the field
        fixup the field from behind, byte by byte.
   - This result in that T!R can go
   - in fact by doing similarly for normal postit and >BI fields
     the assembler becomes a lot more portable.
   - the fields >DATA >BI >BY >BA must be accomodated by
   wish list: a fast dictionary search in lina, using hash
     an analysis of the opcodes, resulting in optimally fast
      disassembly
2010 jul 25 sun
I have still hard links, but can use also -a -d
Linking between assembler words is not advantageous. It would
server to eliminate REMEMBERm but REMEMBER must stay
in behalf of IS-PI (SHOW-OPCODES)
Although T!R is eliminated the filosofy is not changed much.
Postit and fixup work from the l.s. byte on, i.e. practically
big-endian. But fixup from reverse work from here -1 on.
Hash not yet done.

2010 jul 28 wed
Dennis Ruffer has published a disassembly with a lot of comment
and labels on his venture forth plugins site.
It is not yet clear what version of ciasdis has been used.
I have debugged a ?? for completion of an instruction,
but this has not yet been added to the disassembler.

2010 aug 9 sun
ciasdis still lingers on the AMD 64. I have at last added
SHOW-COMPLETION (short-hand ??). This all works neatly.
I know how to get rid of the phase error in rf751.cul.
It is not clear whether it's worth it.

2010 aug 16 sun
Trying to make a 64 bit threading Forth.
The piece with the threading is not 64 bit prepared.
The 64 bit version works with threading after making the
part behind the THREAD macro canonical (use AX the macro
not EAX.).
2010 aug 17 mon
Parallel sieve (parpi) works.
Trying to make a distribution fails on documentation .info.
This is caused by a change in gloss.m4 in june.
There was a mysterious improvement, I have turned it back.
Made a distribution for 64 bits lina, that will be hence
toforth threaded. The old archive in the home page is moved
to $W/archive and copied to the archive at sparc:/smallspare/ftp
The new archive is beta-5-63.
I've made a remark in the howto that a distribution for 64 bits has
to be pimped at a 64 bit system to include the executable.

2010 aug 18 tue
The remark is not right: as for now, I can't build lina with
gas, the 64 bit nor the 32 bit version.
Bug: a missing _OFFSET in the thread code did executables generated
by gas fail, solved in 5.64.
I can't still generate 64 bit versions using as on Suse.
It will link using the script ld64script, using the command
ld -T ld64script $s.o -o $b
Apparently i386:x86-64 is a acceptable output architecture.
Apparently elf64-x86-64 is a acceptable format name.
The resulting executable doesn't run on Ubuntu.
objdump -f to find out about format names.
It is a mystery why building on Ubuntu would succeed in view
of missing OFFSET

2010 sep 13 mon
Downloading cias*deb leads to a 600 file on Ubuntu. After
changing the files permissions it can be used.

After SHIFT-ARGS GET-ENV no longer works.

2010 sep 25 sa
ENV checked in and tested on the server.

2010 nov 7 sun
There was a request whether wina was suitable to handle colorforth.
This triggers to make wina working on the new version 7 windows.
I see what is wrong with SECTION : it has a file offset.
Instead what has to be done is consider the file-buffer as just
another SECTION that is to be split later.
Inspecting colorforth, I see that both of the tables are separate
sections that are forcefully put in the middle of a section that
is already in the file. There are two solutions, split the section
that is split anyway into two sections. This doesn't forego the need
to define the file offsets. An other solutions is to add a field
FORCED-OFFSET with in a section that is specific for writing to
a disk. I must think to decide. But in fact the only offset
applicable in the tables is w.r.t. some other section.
Furthermore it is important to split the thoughts over disassembling
and assembling. I don't think I'll get anywhere without making a
nice document in TEX (lyx) about disassembling. This triggers the
action to clean up my acts and install a clean Debian on my main
machine.
This triggers some renames of the fields of SECTION and a proper
explanation of the concept of origin in the documentation of ciasdis.
I can't switch to lina version 5 with the assembler
before it is stable, so.
First thing is trying to assemble the latest version of wina.
There is a problem w.r.t. quoted.
- I must start using lower case througout ciasdis.

The assembler that comes with .NET has some reasonable bugs,
and some unreasonable.
The reasonable bugs:
  1. DD can not be combined with a label
  2. The assembler cannot switch between 16 and 32 bits.
  3. DUP (?) is refused, DUP (0) is accepted. Despite the
     weird syntax, this is a directive, not an operator.
The unreasonable bugs
  1. REP/REPZ is refused together with a MOVSB
  2. ORG ### is refused despite mention in the manual
@@@
2010 nov 25 th
Inspecting the web site reveals a fault in the description
of FORTH. Fixed. 5.66.
2010 may 4
I have a VC directory on the portable, that contains an attempt
to assemble the windows Forth.
If using __write and __read instead of _write and _read it is
sufficient to use the libc.lib via INCLUDELIB.
We can then open a file and read and write from it.
2011 10 may 6 fr
The attempt is as follows:
rename wina.cfg back to dpmi.cfg ( no longer burned down.)
The i/o etc. is via _DLL_.
- Make an intro.
= Make a new style memory layout.
- Make an ECALL (external call) that assembles.
- Make a WRITE-FILE using ECALL
- Then ACCEPT/(ACCEPT)/KEY
Try to have it assembled.
I can now assemble wci86.wina.asm with
  Unresolved EPIPE BYE BLWRITE BLREAD WFILE.
The microsoft assembler is called ml.exe, is sitting in some bin
and cannot only handle 000H style hex numbers.

I have turned back dpmi, and installed wina as a generic windows.
I have introduced _DLL_ and _SHAREO_.
I have added the .ml generic extension to the Makefile,
and a line that edits 0xFFFF into 0FFFFH.

2011 may 7 sat
If the old wina version still works, and testlina works and the new
version compiles. The stuff must be saved.
So we have version 5.67 :
"
Added a file extension .ml for a macro assembler ML.EXE under .NET.
The old wina is now called dpmi (no longer burned down).
_DLL_ and _SHARO_ added to the prelude for calling shared libraries
from assembler.
The new wina is DLL and must work directly in 32 bit mode.
All necessary modification to ci86.gnr such that the resulting wina.ml
assembles (not run yet).
"
lina 32 bits has been tested. dpmi (formerly wina) has been tested and
only fails one test that requires forth.lab. wina generates a source
that can be compiled with ML.EXE.
Next step : handling WFILE and RFILE.

I have introduced READ-FILE and WRITE-FILE and limited the
number of externals that are missing.
It turns out that the equlayout doesn't cut it, of course,
I should say.
Documentation of ML.EXE is on the internet, but it is poor.
ollydebug fetched. It rocks!

2011 may 8 sun
Success ! The trick is to allocate an enormous text segment and
link it with /SECTION:.text,RWE.
This is lowercase .text . In the assembler file this section
must be named _TEXT in capitals and it is called a segment.
Introduced the term _LAYOUTBYSECTION_ as an alternative for
_EQULAYOUT_
I have now a version that outputs a signon text, including
the display of .CPU as 5.68.
layout macros added to prelude.m4 and postlude,m4 and used in ci86.gnr.
wina uses equlayout now, added i/o and definitions for i/o.
section macro's in ml,m and nasm.m4.
ALARM! The version checked in didn't work. I tested the wrong version.
It is very simular to a version that I saved. The difference is
really tiny. The file doesn't work if it ends in
    END _ORIG
Leaving out _ORIG fixes it.
2011 may 9 mon
I've attributed this problem to ML.EXE. So fixed in ml.m4 masm.m4
by an _ENDPROGRAM macro.
Version 5.69 fixes this.
Trying to add blocks. I discover that the disc offset can not be a
user variable as the block buffers are common. Hmm. Maybe that is
not correct, for the moment leave it.
5.70 :
    All file words for windows 32 amd all blocks words.
    RWFILE --> DUMMYOFFSET    DLL requires BLOCKS_IN_FILE
There is a problem with generating the documentation files for
the wina32 version.
After information of Elizabeth Rather it becomes clear that OFFSET
is not to be hidden for blocks in file.
5.71 :
    Changed CALL to have a count such that it can remove input.
    (ACCEPT) only works on WIN32 if the buffer is smallish (4000H).
    _DUMMYOFFSET_ is superfluous.

With this the windows forth works more or less. The words KEY and
KEY? are not present yet.
There is a lot of work to do in the lab-file.

2011 may 15 sun
I can use ollydbg to run it and find problems.

Managed to make a version that does console i.o with direct windows
calls to kernel32. The probem with that it is that stdio and stout
must be fetched, and that requires the knowledge of constants.
The constants can be stolen from win32forth. This has been carefully
introduced in version 5.71 but to no avail, yet. The executable
just returns.
This version, unlike the old one, cannot open the blockfile, it
leads to a crash.  I can place a breakpoint on the call in lcall.
Trying to debug using BEEP
It looks a bit like EBP is destroyed.

2011 may 16 mon
Trying to debug using version 5.68. At last: the problem is:
Forget to call VCVARS32.BAT.
With this the version 5.71 runs alright, WORDS 5 LOAD etc.
5.72.
Introduced reading and writing from standard input and output, via
KERNEL32.LIB. Also memory at 8 Mbyte.
This shows the signon.
Stupident! The DLL version uses an EQULAYOUT for relocatable stuff!
2011 may 17 tue
We'll try to get the layout right.
There is a bug report concerning a missing @. This is far more of
a problem than a typo. The handling of @ in the makefiles is not
correct.

2011 may 21 sat
Trying to get a CaCert at Bunnik. Filled in the form and 5 questions.

2011 may 23 mon
It turns out that wina works perfectly on Windows version 7, 32 bits.
2011 may 27 fri
I've uploaded version 4.0.7 of lina and wina to the account.
It looks like it is limited to 10 Megabyte, or at least small.
(ftp crash with files half transferred.)

2011 may 29 sun
I think I should give up for now on the version of Windows that
uses only the kernel. Also I must use the concurreny of CVS by
working on several problems in different directories.
I have a candidate now: the @ problem.
The convention must become:
  _comat_ is replaced by just @ for normal use, and with @@ for
  texinfo or tex use. This may be realised by m4, or else sed.
Not good! This will foul up the sorting. It is better to duplicate
the @ in all places that go to tex/info. Then at other places the
@@ is reduced to @ by a simple sed command.

Checked in 5.73

This solves a report by Bogdan Ouatu.
The handling of @ was messy. At some points it was doubled in behalf
of tex, at other places it was doubled by sed scripts. Now it is always
doubled in the source, and if e.g. html needs it, it is halved again
by sed.

2011 may 31 tue

Checked in 5.74
The windows version is back to equ layout and using the c-library.
Some cleanups in wina.cfg regarding size.

The executable is 32 Mega

2011 june 2 thur
At last it becomes clear why some windows versions just don't run.
If EM is less than 4 megabytes, the program counter is set back and
maybe even some nulls are put there. Now Forth has its stack in the
middle of the code potentially etc. The solution is to set
the origin at EM +40100H which cannot prevent that EM - BM is not
the intended memory size.
Now we just may try the precious stuff again.
Setting the memory with DB (?) just takes too long!
The console i/o and block i/o works reasonably well,
We go for small steps, leaving that working.
GET-FILE        tests OPEN-FILE READ-FILE separately CLOSE-FILE
INCLUDE must now work.
We could go for copying the library mechanism.
PUT-FILE        tests WRITE-FILE retest of OPEN-FILE CLOSE-FILE
BLOCKS          tests REPOSITION-FILE retest of all file.
standard error  tests GetStdHandle
standard out    retests a lot
standard in     retests a lot.

2011 june 4 sat
Diane helps with using the console io. This succeeds from Visual
Basic, but that is no better than what I already had.

2011 june 7 tue
We need
GetModuleHandle (for retrieving the kernel32 handle)
Can also be used to prevent loading a library twice.
LoadLibrary (to make a defining word that retrieves a module
handle from the filename)
GetProcAddress that uses a module handle to retrieve a callable
procedure from its name.
DLL-IMPORT  ( lib sc "name" -- ) defines a word that calls the
function with name sc.    NAME ( i*x i -- rc )
DLL-LIB ( sc "name" -- )  NAME ( -- lib ) uses LoadLibrary
but only if necessary.
The names are _GetModuleHandleA@4 _LoadLibraryA@4
_GetProcAddress@8

2011 june 10 fri
Experiment with LOLI and GPA. GetModuleHandle is not really needed,
it seems.

2011 june 14 tue

Identification of arguments to be precise handling options.
Using GetStdHandle to implement KEY and KEY?

Win32Forth suggests that GetCommandLine is a good starting point.
added _GetCommandLinaA@0 into ARGS.

2011 june 19 sun

An interpretation of the command line has been added such that
-e loads the elections screen. The test of LOLI and GPA succeeds.
There is a problem with generating a pdf file for the wina version,
and it was there beforehand.
An ECR must be added besides ETYPE. There seems to be no easy
way to interleave the channel2 tests and the channel1 tests, so
the best is to replace STDERR with STDOUT in the test.

2011 juli 3 sun

GLA --> LAST-ERROR           Done
Some ECR solution
GetModuleHandle removed.     Done
I have introduced an error handling for open file that is probably
usable for all other c-type functions.

2011 juli 5 tue
Checked in with LAST-ERROR >ERROR and no GMH. (5.77)
>ERROR now used all over the place.
testwina.1 redirection with STDERR coupled to STDOUT
now works (was coupled to STDIN!).

2011 juli 9 sat
- KEY and KEY?
+ working testwina
* working tsuite.frt
- DLL in forth.lab
I have checked in a version of testwina where >ERROR is used
and  considerable number of tests for file functions is added.

2011 juli 10 sun
testwina works with the following problems left:
    CREATE-FILE works but generates files that can't be deleted
    This means that the test of PUT-FILE only works the first time.
    SYSTEM is not yet present
    After BLOCK-EXIT accessing a block gives no error

Defect: if a blocks is accessed outside the range of the file
this was not detected. Changed it by checking that the READ-BLOCK
reads B/BUF bytes. At reading outside no longer goes unnoticed.
Reading after BLOCK-EXIT nicely crashes. Further problems are
caused by the windows function returning a negative number, but
no last-error. This is fixed by changing >ERROR to never turn an
error into a non-error.

blocks.frt 5.54 ci86.gnr 5.70
Hard work on error detection and the lab.
The notation ?WI adds DLL as an official target in
forth.lab, such as to able to start adding facilities.
From now on WANT DO-DEBUG DUMP $-PREFIX SEE and the
ASSEMBLER works, because I added a dummy KEY KEY? and SYSTEM .

2011 juli 11 mon
Binary file can be forced with $8000 OR. ci86.gnr 5.71
2011 juli 19 tue
Ron Minke wants a AVR ciforth.
Whole of kernel32.pdf walked through for Console.
It is virtually impossible to find a way to arrive at a
"console input buffer". This may be because we started from c,
stdin stdout (0,1), instead of using getStdHandle.

But maybe GetStdHandle gives us the elusive "console input buffer
handle".

2011 juli 23 sat
Indeed arrive GetStdHandle at the "console input handle".
We can now use PeekConsoleBuffer and ReadConsole to implement
KEY? and KEY. Successfully implemented in the files
keyq.frt and key.frt. Sleep is also a very easy function.

2011 juli 24 sun
The functions KEY? and KEY are added into 5.81.
(With SET-MODE and GET-MODE as additions.)
Also _OS_ is now defined for _DLL_.

MS is also added and has been tested, as a consequence MEASURE-PRIME
works. 5.82.

2011 juli 26 tue
Experimenting with FASM.

2011 juli 30 sat
Further along with FASM.
It contains examples for all file handling and no
c-run time in sight.
WriteFile works.
2011 juli 31 sun
ReadFile Works.
2011 aug 2  tue
Speedily along with fasm. createfile deletefile repositionfile
openfile sleep getcommandline all work now.
tHe last version has crashes if an unknown word is typed, but
this has worked at some time.
2011 aug 3  WED
Solution ERROR had its DFA wrong.
21 aug 8
The generic file is prepared to add the .fas version.
The LOAD and STORE have been removed. 32 bits transfers to segment
cleaned up.
21 aug 13
A successful presentation of the new w2.asm.
21 aug 14
5.86 has the FASM version added to the generic file.
It passes the Hayes test.
Known issues:
  GetCommandLine and GetEnvironmentString should be added to the
  kernel.
  ZERO is still in front of the getcommandline.
  It is dubious whether GPA and LOLI should remain constants.
  GPA   DLL-ADDRESS
  LOLI  LOAD-DLL
  GetCommandLine        COMMAND-LINE
  GetEnvironmentString  GET-ENV  -> library.
  SSYSTEM.FRT to be moved to the library.
The wina documentation cannpt be generated: EOF error in m4.

2011 aug 16
Let us start with DLL-ADDRESS and LOAD-DLL.
However the checked in version didn't work! Still the getting of the
std handles was suppressed. 5.87
COMMAND-LINE DLL-ADDRESS LOAD-DLL added 5.88
Next: rid of superfluous zero in CALL.
Adding SSYSTEM.FRT and GET-ENV to the library.
This has succeeded, and we have seen wina -c working.
SAVE-SYSTEM and TURNKEY in the library seem to work.
(small problem left probably.)
GET-ENV works from the library.

2011 aug 17
5.56 blocks 5.89 ci86.gnr
wina -c works . Doc for lina builds. testlina succeeds.
2011 aug 19
Desperado debugging w.r.t. EOF error.
Between 5.71 and 5.71 introduced. Turns out that
worddoc( {STDIN},{STDIN} is dead wrong. The first name must be a
chapter name, as defined in worddocchapter(.
5.90 wina documentation builds, at last.
2011 aug 20
Now wina does its built in test.
Experimenting with SYSTEM: We mist use CreateProcess with 10 parameters.
Only one makes sense. It is best to use the command interpreter.
Then the table of built in commands grows beyond one sector.
Throwing uit VirtualAlloc saves the day, because SAVE-SYSTEM would
have to be rebuilt then.
2011 aug 21
SYSTEM command works.

2011 sep 30
5.94  ci86.gnr   5.57 blocks.frt
We can loose the relocation section in wina.
Two library entries were exchanged.
TURNKEY SAVE-SYSTEM for windows added to library.

Arrived at beta testing for wina.
2011 oct 1
It crashed. Turns out the address for patching was not
correct in the official update!
Announced at comp.lang.forth.

2011 nov 12
Discovered a bug in ciasdis, de operands for obligatory word, and
immediate byte, are not in the right order.
This can be solved to have the priority of OW, changed to
after the IB, stuff, or introduce a special data thingy for the
ENTER, like OB, .

proc works like this:
it shoudl start with PUSH BP, BP:=SP
Now we have on the stack
  Old BP
  return addres
  Par 0
  Par 1
  ,..
  Par N
In order to return we must
   SP:=BP  \ Abandon locals }  together LEAVE
   POP BP  \ restore old BP }
   RETO,   N CELLS ,    \ Where N is the number of parameters.
To accomodate a Forth defined call back:
Save BP
Define a local return stack.
Move Return address, BP and other to be saved registers there.
    Call a Forth thing.
Pop everything from the return stack, return address in AX.
Assuming Forth consumed the parameters, SP is now okay, and BP
was just popped.
( Otherwise: LEA, SP'| BO| [SP +1* 0] N 4 * B, )
JUMP TO AX.

This works inasfar as it doesn't crash.
Replacing jmp  to ax by next, shows that the logic inside Forth
works. 413038
2011 nov 15
Added a block with doouble precision.
UNSTABLE! WANT SAVE-SYSTEM fails!

2012 jan 17

It is time to start release 5.
(WORD) is replaced by NAME
(WORD) must be loadable. PARSE-NAME is an alias.
(PARSE) is replaced by PARSE
(PARSE) must be loadable.
SAVE-INPUT and RESTORE-INPUT must be loadable.
REQUIRE legacy must load (WORD) (PARSE) WORD FIND
This has been done earlier.

WORD and FIND are to be in the loadable extensions.
TICKS-PER-SECOND now works up to 4 Ghz.
ci86.gnr 5.95 it also contains also changes w.r.t. wina SAVE-SYSTEM

The references to forth-78 are removed.E~`EE`E`AA[[A~E

2012 mar 18
The class cannot handle a loop in the defining part like so
  6 0 DO 10 /MOD SWAP , LOOP
The solutions is to require NEW-IF. This may now work because
the area where to interpret may be switched back.

2012 may 8
After patching the COMSPEC 5.98 wina.fas passes the test.
Nog even tsuite.frt

2012 may 17
The MY-ERROR in -s should end in a BYE.
It is better if like with -c the error is stored in EXIT-CODE.
ERROR tries to print WHERE which goes wrong sometimes.
The real problem is that the handler must be set to 0 at the
start of the script : 0 HANDLER !
Furthermore a simple THROW doesn't set the where pointer.

Then there is a separate problem on 64 bit systems.
Arguments may result in -14 wrong address, if TYPEd.

asm -32 doesn't work on a 64 bit system, because of [FS:BS]
Changing to FS:[BS] makes nasm fail. So I introduced _FAR_ADDRESS
as an m4 macro.
There was a non-existing forthcode macro in manual.mi

2012 may 29
Version 5.99 is installed on cherry. The definitions of ** and (.|.)
got lost, so I reinstalled them and notified this in the signup.
They must be put back.

2012 jun 5
See remarks about VECTOR and QSORT.
2012 jun 15
Added the FORMAT screen to blocks.frt
2012 jun 15
Discovered that a compilation check is missing in IF and
DO ?DO.

2012 jun 17
Checked in the FORMAT screen and NO-SECURITY: 5.64

Some error checking changes:
  compilation words like DO IF get a ?COMP
  ?EXEC is not used and removed.
  If a denotation attempt fails , the whole word is shown,
  not just the prefix.

  duplication checking is not yet moved from HEADER to (CREATE)
  It looks like I just moved it to HEADER, 'cause the label is
  called CREA

2012 jun 18
5.100 ci97.gnr 5.65 blocks.frt
error message no longer broken at a denotation.
?EXEC and ?LOADING moved to a legacy block.
?COMP used whereever appriopiate.

2012 jul 4
FORMAT had already been added.
The double WHILE would give an error message.
The security is defeated by a manipulation at compilation
time, not by using the SECURITY module.
>IN now renamed into IN for good.

2012 jul 10
At last it is clear why class fails when using FORMAT.
The s is evaluated in compile mode, so it is added to the
method being defined, not used to generate a string that
must be compiled into the method.
The solution is to look s up. This change is made to
FORMAT.
It is now possible to use FORMAT in class, and it is
results in a one screen class definition.

2012 jul 17
Even one more format removed from the class. Checked in and
used for the optimiser. Test optimiser passes with lina 5.0.

2012 jul 24
There was a concern that if the last link of the circular
buffer was current, that merge would give a wrong result.
This is not so, but the proper test had to be added to the
file testalloc.frt. This has been done only for the class
version. So a proper test for the stuff in the library remains
to be done, as with everything else in the library.
Stack comments added to the MEMORY wordset in the library.
An object oriented version also generated.

2012 aug 2
Stack comment checked in , version 5.68.

2012 aug 4
It appears to be comparatively easy to build lina with fasm
on linux. An easy feature is to use 'FORMAT ELF EXECUTABLE'
which foregoes the linking step.
Note that SECTIONS must now be called SEGMENT's.
Then at first it seems that
fasm insist on storing the whole 256 Megabyte dictionary.
However it is sufficient to snip everything in two segments.
The second has no data, so fasm stores no data in the image.
The segments needs no names. Memory must be enhanced with the
-m options to build an image with .25G memory (the largest possible
on 32 bits apparently.) A .25G Forth takes 5.3 sec to build as
.3 seconds for a .25M Forth.
Faster is it to do
  fasm lina.fas
  lina -g 256 lina256
Adapted fasm.m4 . Make gets missing files now from cvs, and has
a target flina.

2012 aug 7
Manipulations with symbolic links, such that fasm can assemble
wina.exe on linux using the command
fasm $s.fas -m300000
The memory extension is only needed because if the large memory
is configured in lina.cfg. Somehow fasm wants to allocate
that memory while assembling even if it doesn't put those in the
executable.

2012 aug 8
Revisit of the beer.frt example.
The dll's must be specified at run time. Therefore after the first
time a dll is loaded the entry is patched, such that from then
on the dll-library is a constant. Idem for the procedure that is
loaded from a library.
There is now one screen for LOAD-DLL: DLL-ADDRESS: and GET-ENV
This works for beer.frt with just WANT LOAD-DLL:

releasewina.bat has been adapted and now builds a windows executable
on linux.

2012 aug 12
LOAD-DLL: cs checked in.
In behalf of metacompiling the msp430 by WO and AN some facilities
added to blocks.frt. In particular replacing VOCABULARY and the
classic use of >IN with REFILL.
Furthermore unsigned thingies and such.
I can metacompile this stuff on windows.

2012 aug 19
Checked in.

Retrofitted those comments:
Accomodates a lot more words used in practical programs.
ci86.gnr cosmetic
fasm.m4 Case correct include
options.frt -t options needs NO-SECURITY
releasewina.bat Uses fasm
test.mak      Adapted calling tsuite.frt to loadable WORD

2012 aug 31
ciasdis.html and forthassembler.html contain duplicates.

It turns out that Nijhof has an Apple. xina is on my ftp
since 2008. Send a message to get it from there.

fasm seems to be able to assemble for 64 bit windows.
wina64.cfg created.
Looking into 64 build for windows. FASM accepts a PE64
format command. However, there are problems with the
cast to a QUAD, but maybe that is unnecessary.

2012 sep 1
Version 103 of lina is on the website. Version 103 of lina64
awaits a build of the executable on a 64 bit system.
It turns out that the QUAD keyword has to be replaced, in
the same vein as the LONG keyword. (See fasm.m4)
But then, surprisingly, FASM allows to build a 64 bit lina
on a 32 bit system.

2012 sep 21
The introduction in the manual about how to use it in
combination with stored programs is improved.
The Makefile builds lina64 using fasm, even on a 32
bits linux. The scripting crashed sometimes without even a
halfdecent errror message. This has been overhauled, and
the mechanism for interpreted control has no redefinition
messages. Also :F and :R for mutually recursive definitions
added.

2012 sep 25
Lots of small changes, up to version 5.105. $!-BD now loadable.
shift is undefined in prelude.m4, but that is not enough.
Some code improvements saving a few cells.
5.106 ci86.gnr 5.74 blocks.frt NIP is now in the kernel.

2012 oct 21
I should decide what -legacy- means. It is just a stupid term.
Maybe it should be -version4- with the meaning that if WANTED
(as the very first thing), things renamed should come back
(such as (WORD) $S ). Also the old behaviour of >IN should
come back, but then probably class can no longer be loaded
as is.
More difficult is version 5 behaviour. Old vocabularies
already behaved modern. Now legacy could mean old behavour.
It is probably best to have screens with -core- that load
words like WORD FIND REFILL $!-BD . They should at least
do no harm.
And -legacy- are the words renamed: $S (WORD) (PARSE)
VOCABULARY They do less harm.
Then there is -old_behaviour- the behaviour of version-4
IN and FORTH . This could totally mess up a system.

2012 oct 25

The version 5 of wina stands the test.
We can now give out the official release 5.
And use it for com-4e5.frt.

2012 oct 25
The version 5 of lina is download on my Debian system and
installed as lina32. The beta version 64 doesn't work!
It must be build using GNU tools, not FASM.

2012 oct 31
The version 5 of lina64 has been released to the website.

2012 nov 6
Trying to release wina.
First the old dpmi has been renamed. Now READdpmi.txt is missing
i.e. it is still to be filled in.
At last the offer to print a fortune cookie in the manuals
is withdrawn.

Release 5.0 for wina dll built and tested okay.
Using long lower case filenames in zip for wina.
Checked in last cosmetic updates in README's.

Is now on the website
2013 jan 2
The release was not marked in the cvs archive.
It now has. (Another problem, forgot to put that in the
log. It is now actually march.)

2013 mar 12
Two bugs found in D< and D0<. Remedied.
Making a test release for xina.
Added testxina target. testlina fails!
The test.m4 couldn't handle the many tests we
wanted in the labtest, remedied by adding a lot
of parameters in forall macro.

2013 mar 19
Added tests for D< etc. Checked in improved testing (more cases).
Checked in improved tests, also for DEPTH, slightly improved FACTOR,
QSORT for arrays.

2013 april 3
I have replaced the `` MOV EAX, OFFSET WARM '' by a `` LEA EAX, [WARM]''
The 32 bits version works as usual, but the 64 bits version didn't work and
shows no improvement. Still I think I leave it, as I hate those
OFFSET's. It has been checked by an infinite loop while scripting.
The code is 8D05. It is a bit suspect that the assembler assumes that
it can get away by just using a 32 bit value.

2013 april 16
Kentlane Wilson sends improvements. The most important one is the
transition to 64 bit system calls.
He has improved the save system screen for 64 bits.
I have tested the -g option and indeed can have a 8 Gbyte dictionary
space.
I have run stealconstant on the 64 bit system, and some __NR_ call
numbers have changed.

2013 april 22
Make the transition to other system calls, copied from Wilson.
Added constant_osc.m4 and constant_64.m4 to the archives.
Archived in cvs.

2013 april 23
Introduced screens for 32 and 64 bit numbers, and got symbolic
names for the __NR_ syscall numbers.
Turns out that moving from 32 bit calls to 64 bit calls, the data
structures become 64 bit, thus cells. The bottom line is less
differences between the two bit-sizes.
_newselect is used instead of nanosleep (that is available on the old
Suse system), because it has better precision. With 64 bit data
structures the old code keeps working on 64 bit.
What remains to be done is Wilson's improvements on screen for 64 bit
SAVE-SYSTEM. This kills the segments, where I hadn't succeeded.
He has also a SAVE-SYSTEM that introduces a .shrtab in a separate
file, that I keep under consideration.

2013 april 24
Introduced a named directory for the generic zip.
Removed the dependancy on constant.m4. The error message
will depend on the system (e.g. missing constant_64.m4).
All constantxx.m4 thingies are now targets, but they must
always be build by hand on the appropriate system.
With this out of the way, I can change the generic source
distribution to distributing a generic system, with some
of the most obvious samples pregenerated.
For the very most important examples (wina lina lina64)
I can build the executable on the development system,
using fasm, fasm+nasm+gas, and fasm. The last one may
not run.
I'm not willing to change system calls used in the
32 bit linux version. So stealconstant.c must be adapted
to generate a usable constant.m4 for all systems.
this is a separate step. Up till then those thingies are
source.
2013 april 25
I can not build the 64 bit assembler source for fasm.
The .fas files don't assemble. The reason is %R8 register
denotation. I've now fixed this for all assembler types.
The file build by fasm for 64 bit linux works / doesn't work.

2013 april 26
fasm was not known as an assembler in the Makefile,added.
make ci86.lina64.fas now works.
The reason that lina64 assembled with fas
doesn't work in 64 bit was problems with
the alignment. This became obvious with dumps, OK always
crashed.
The m4 files assumes that only 32 bit alignment
was possible. Fixed in snapshot 5d112.
All dnl's at ends in edited m4 files where divert(-1) is
used removed.
Snapshot 5d112 installed. The three important platforms can be
accomodated with fasm.

2013 may 10
Assembler alonehd.cfg assembles using fasm. 5d113.

2013 may 14
Continuing with a test of the booting system. It boots until
DF. It is hard to get a .lab file on a floppy because it is
too large to be without disk errors.
Trying to run mina.com. This doesn't work, it hangs the
computer, under Windows 3.1 and it hangs the emulator under
Linux dosemu.

2013 may 19
mina.com not only hangs in MS-DOS but it can't be assembled with
the nasm installed on MS-DOS. Nor can the 4.14 version in
\project\mina . What gives?
The EQU for the end of memory to make sure it allocates, is no
good. It must depend on _LARGE_. _LARGE_ was undefined for
_REAL_ because _BITS16_ was defined after _LARGE_ (defect in
postlude.m4). Now at least mina.com runs, but option -e gives
error 12 (hardly surprising after 10 years).

2013 jun 4
It bears mentionning. The 32 bit version of fasm on apple generates
an executable that can compile: flina -c hello.frt works.
However, after ``strip flina'' an unusable executable results.
Experiment with jonesforth.
2013 jun 10
Working hard on jonesforth
2013 jun 11
There is a problem with the idea of the elegant interpreter.
If a words is not a denotation the parse pointer must be left
after the blank after the word.
In QUIT the return information is totally lost, so also the
HANDLER must be zeroed, leaving precious little for ABORT to
do. Having DIGIT do more alleviates the burden from NUMBER.
Maybe IN[] NIP ?BLANK NOT 10 ?ERROR is worth a separate word.

2013 jun 11
The lina/jones Forth is a decendant of my ci86.gnr, i.e.
it contains documentation and tests. jones.cfg is a configuration
file like lina64.cfg and directs the generation of an assembler file.

I'm down to 260 words among them 68 code words, and 5000 commented lines.

I kept the tests up to date such that the lina/jones now passes three
tests:
    1. Hayes, with a preambule
    2. single precision Hayes
    3. tests generated from ci86.gnr by the build system.
I've removed the booting, windows, windows dpmi, mSDOS, OSX
conditional code from ci86.gnr, and with additional trimming
it is down to less than 5000 lines. This includes a reference
manual, the white box tests and none of jones-like educational material.

The preambule test guarantees that lina/jones can be expanded
to a fairly good ISO Forth, at least to the point that someone
using it that way, doesn't develop bad habits.
(Well, using string denotations,  "AAP" instead of S" AAP" C" AAP"
." AAP" .( AAP) may be considered a bad habit. Then put
    '" HIDDEN
in the preambule. Attention to this is drawn in a separate document
about "I like Forth, now what?".)

I've made a single precision Hayes test, to replace the Hayes
test. This test must be passed with no preambules.

This test driven development pays off. Some really small changes
triggered large test failings. I've 26 versions that all pass
the tests stored with them on cherry.
The great advantage of this approach is that I've something that
works, even if I stop right now.

In the educational section:
The only multiplication words are UM* and UM/MOD and probably SM/REM.
These are the only things involving doubles, and the
only reason is to be able to input and output unsigned singles.
The <# formatting is replaced by <% single formatting.

This is a pretty full Forth still. With a small preambule
it passes the Hayes test. I'm not sure whether I'll keep this
up. This requires keeping some nasty multiplication assembler
in the kernel as the preambule is in Forth.

The following words are candidates for removal from version 6.26.
Prefixes: A B C D E F
Normal: 2! 2@ D+ C/L VOC-LINK U< ?DUP 1+ BODY> (;) (;CODE)
  COUNT ." .( ERASE (FIND) [COMPILE] POSTPONE M* SM/REM
  XOS5 CREATE-FILE DELETE-FILE REPOSITION-FILE KEY KEY?
  TERMIO SET-TERM ?
Looping: DO LOOP +LOOP I J

The following control stuff is never used in the kernel
and could be had via INCLUDE, or EVALUATE of a large
string (or removed).
(BACK BACK) (FORWARD FORWARD)
BEGIN THEN UNTIL AGAIN REPEAT IF ELSE WHILE
DOES>

A SAVE-SYSTEM in an included facility would convince the
reader that even if lina/jones is a toy, a Forth based on
similar principles is not.

linajones has the elegant interpreter with one loop-construct
and one if-then-else construct.
2013 jun 18
Trying to use a pentium assembler to bring lina/jones up to
tsuite.frt level. Therefore we want DO/LOOP and UM/MOD
eliminated from the assembler. So we should have a way to
test it. So try using a simple assembler in the ciasdis
package and compare it to the large assembler. This fails
because ANDSI ORSI misses from the LAB file. This can be
easily added, but we really get side tracked too much.
So what I do is use the simple pentium assembler for the
moment, and consider the use of it in linajones as a
preliminary test.
2013 jun 20

2013 jul 11
The action with jonesforth, now yourforth, triggers
a number of small improvements, checked in.

2013 aug 13
Finally eliminated CFA>. ci86.gnr 6.115

2013 oct 23
Made a file release501.txt that explains the differences
introduced in release 5.0.1.
Made a file ciforth.m4 that transforms m4 into something
we always want exterminated.

2013 dec 3
At last the bug taken on, where shift-args fails in a
compiled program. Added CLS at last.

2014 jan 7

wina.bat has several defects:
-it uses linux line endings.
-%1% must be %1
- cd D:\XXX\XXX doesn't work. The D: must be selected separately.
- wina -c now fails because wina.bat is called recursively
  (or some such).
MARK-TIME ELAPSED etc. works most of the time on a system
where TICKS-PER-SECOND is negative, but
not always.
This reminds of a known bug:
: D< D- D0< ; is wrong: test-case $8000.. $7FFF.. D<

However DNEGATE D+ is a correct substitute for D-.
So we're at a loss here. A solution is at least at hand:
1 LSHIFT 1 RSHIFT .

Some experimenting with beer.frt. If it was build using the old
source there were problems. However the v

2014 feb 9
Trying to run/build xina.
It fails
2014 feb 10
xina can build again, thanks to information gotten
from my ftp site (2008).
Updated constant_osx.m4 and ci86.gnr, also cls introduced.
The blocks.frt contains an update of shift-args, that doesn't
interfere with get-env.

2014 feb 13
Latest OSX version tested at Diane's. Hayes discovers problems with
CREATE-FILE. This appears to be known and even solved in 5.39.
(But it is far from clear why this isn't solved in the latest version.)

2014 feb 14
The CREATE-FILE from Spykerman's archive at sourceforge implemented.
The nasm on cherry can create a macho32 object file, so it is sure
it assembles.
Added a releasexina.bat that makes an archive with tests and source
for xina.

2014 feb 15
Observation: the OSX XOSFORK is absolutely necessary because of a return
value in DX. Comment adapted. (Spykerman did a good job explaining this,
see 2008 may.)
It must be tested whether the Spykerman version can compile a program.
It probably does. The SAVE-SYSTEM block is fiercely adapted.
This block I now have copied into blocks.frt with ?OSX in the index line.
The READMExina.txt to the cvs archive.

2014 feb 27
The comparison for release 5.1 must be 2014 feb 26.
Did the decompilation test.

2014 feb 28
Continuing with the beach side edits. At last a good solution found
for the case-sensivity of the pentium assembler.
The option pair n| r| (normal/reverse) is rename n| a| .
This has consequences for ciasdis, the assembler in the lab file,
and for assembler.mi. All covered.
The following renames are made: >IN into PP and underscores prefixed to
LIMIT FIRST INIT as those names are very likely to be used in user
programs, have no established meaning in Forth, and are very seldomly
needed in an application.
testlina passes but SEE crashes.

2014 mar 5
The version 5.117 of ci86.gnr saved with about half of the beach edits,
and the change w.r.t. >IN and LIMIT FIRST INIT.
Proceeded till page 85. Discovery: if a comma must be made harmless
in _VERBOSE_ or some such, put it in curly brackets.
All beach edits have been done, and the result has been checked in.
_INIT wasn't done yet, but now it is.
Not all occurrences of LIMIT FIRST PREV in blocks.frt and options.frt
were changed. Now it is.

2014 mar 14
Second session with arie Kattenberg.
Arie's sytem passes testlina test.

2014 apr 19
Test of version 5 of xina at Diane's.
- the -o option is missing from the build comment.
- the -c option is attempted but fails as there is no ARGC.
I've tried -c with Roberts version and it fails, because screen 3
is destroyed (as is screen 2, during test).
So it is important to have a stealconstant run in an apple environment
and a test about how the arguments work.

2014 jun 13
Release 5.1 of lina 32 is out. Including release notes on the website.
lina.zip is renamed lina32.zip

2014 jun 18
The tests for lina64 go well. The number for the write system call
(to test XOS XOS5) was wrong, and the name of the AMD processor.
A deeper problem is that SYSTEM has a strange path.
This results in the failure of the test of EXIT-CODE .
The version 5.1 for 64 bits has been released.

2014 jun 24
The version 5.1 for windows wina has been released.

2014 jul 9
Trouble with the apple system, extremely slow (ls last 17 sec for 0.01
system time). It turns out that with not longer including sda in fstab
and eliminating also pear from nfs, this improves. Other cleanups made,
now . is at the end of the search order. This unveils a defect in test.mak
The lina must be taken from the current directory ./lina.
(Detected with PP in tsuite.out).

2014 oct 18
Welcome! The ciforth project is now hosted on sparc, and hopefully
it will be complemented by a ciarm project on the same server.
This log file is no longer called logboek.txt but logforth.txt
and this is the only file in MIGRATED that was changed compared to the apple.
This means that contributions are again accepted.
Building a lina32 using masm now fails. This was the default version.
fasm works like a charm but the -c option / SAVE-SYSTEM is not
yet adapted to FASM.
The only version that builds easily and works is glina64.
That must become the base version now.

To create a 32 bit version on a 64 bit system
you must use the -m version of the linker,
called emulation, in particular -melf_i386

In the Makefile all version are now with a suffix, or gonna be.

2014 oct 21
Building a 32 bits version on a 64 bit system of lina succeeds
including the test. There was a problem with using the locks
in cvs but no more. The trick was allowing world write access on
$(CVSROOT)/ciforth/cvsroot. The cvs commands within the Makefile
must be adorned with a cvsroot.
The tag MIGRATED is added to the cvs archive, marking the files
that belong to the version that was migrated.

2014 oct 23
make testlina64 works.

2014 oct 31
After having made ssort up to date (64 bits), I now can generate
a release again from cherry.

2014 nov 1
Tested wina with wine on the 64 bit system.
Some minor problems: Attempt to remove a 0x0D.
It is not documented whether it is there or not.
Left to the user to remove with -TRAILING.
The make targets testwina and testlina64 succeed.

2014 nov 3
Oops. The versions made by fasm lina32 and lina64 cannot
compile. SAVESYSTEM just doesn't work.
Also glina32 doesn't even compile.

2014 dec 2
DATA introduced and used in the block file.
memoize added to the block file.
D gives a duplicate when loading .FORMAT. (with D prefix)
Defect: adding :2 to the D thingy in FORMAT gives problems.

2014 dec 3
Fib now works with memoizer in the blocks file.
If WANT :2 is added, it crashes badly, even if it is
not used in format.
ALIAS deserves it own screen.
2VARIABLE added in the 2R@ screen.
emoize is in full testing.

2014 dec 4
:2 crashes because it doesn't find the previous word, and
tries to HIDE null. That is a crash. So we have to live with
the situation that this message comes as soon as we are
case-sensitive.

2014 dec 8
The random generator is 43 bits only. Adapted a version for
64 bits that at least generates a 32 bit random number.

2014 dec 16
Inspired by Williams I've implemented a dynamicstring library. This
leads to the discovery that GET-FILE should use a 6-th of the
remaining memory. The dynamicstring facility almost works, but
if we load the facility a second time, it prints the buffer a second
time and even tries to evaluate.

2015 jan 6
Mr. Sokolov sends a test for xina.
Checked in version 5.122 with DATA introduced, also in the LAB.
Problem, the texinfo file for xina will not generate an info file.

2015 jan 14
Received the Skol9obolv test. There were a few glitches concerning
version and the copying of the forth.lab.
The most important annoyance is that the version doesn't
determine whether the input is from a terminal, such that the output
f tsuite.frt is riddled with ok.
Also the test of SYSTEM EXIT-CODE failed because it did run ./lina.
Added this to the code and resend to Skobolev.

2015 deb 20
Attempt to cleanup the SEE package. Result in try.

2015 feb 24
See package totally cleaned up and checked.

2015 feb 27
At last we must publish 5.2 of ciforth.
I want addition of a coupole of things:
chs tri pyr for choose function, triangular
and pyamidal numbers and such
Rabbin prime test
cntbits function, ms bit function and use
it for sqrt, and a DSQRT.
Skoboleve  test comes back.
 - a file is created when a non-existing file is opened
 - BYE works including exit code. However here is
  mysterious problem with FORGET XX after that
That was all! Wht remains is checking the ability to
generate an executable and it can be released.
Added screen with strings to the lib for reference.

2015 mar 27
The problem Gerard Vriens has with version 5.1 is very serious.
lina32 gets killed immediately, without the message
killed
and error 137. (echo $?).
We have, from the same source, generated an executable assembler
programm, using gnu tools and the .s source. On the Debian system
it runs, on Fedora 6 it has the exact same behaviour as what I passed
along in the distribution.

2015 apr 8
I've added DLSHIFT DRSHIFT DU< to the library to easier accomodate the
bignum package.
Gerard Vriens reports that he can run lina on an other Linux system
that Fedora 6.
The following was triggered by the wish to run bignum.frt.
The code from FACTORS and JACOBI runs with only harness ina file
mhx.frt.
New forth.lab:
   REALLOC is really REALLOT
   added DU< DLSHIFT DRSHIFT
   Added 2CONSTANT
   BUFFER is rudimentary, removed
   Added {{ }} nested compile
   Added a LOCAL compatible with tForth
   Added a GET at the free STACK
For blocks.frt version 5.96.

2015 apr 15
Added a midi driver in forth.lab.  midi.frt can play the song of
Jones Jonesforth with different voices.

2015 apr 23
Added INLING, a namespace to be added to the library.
Committed midi, number theoretical functions and above.
Version 5.97.

2015 apr 24
Session (23 april) Apple of Willem van der Horst.
The byte benchmark does 0.29 ms.
In OSX I have added the detection of non existing files in
OPEN-FILE. OSX system passes all tests.

2015 may 12
Testing of release 1.2 both linux versions.
Adaptation of README@ina.txt and release5.2.txt.

2015 may 26
wina-5.2.zip and xina 5.2. are released.
All tests done for all 5.2 versions: lina32 lina64 xina wina
Forth web page adapted, with references to all 5.2 versions.
At my web page however the lina versions are still copies of 5.1.

2015 june 2
Trying to release lina32 and lina64. READMElina.* is rewritten.
The scripting old-style requries a split in two files mywc32
and mywc64. The both work with 5.2.
wc.script only works with release 5.1 What gives?
Test lina32 and lina64 and added releases to the www/page directory.
The wina release has been tested in full and reported in the testreport.txt
The xina release is still a snapshot.

2015 june 24
Session with Coos Haak. After the change to Debian 7 I could no longer
build 64 bits lina. This was needed because the distributed version
did not run. The problem is that the linker script refuses a 64 bit target.
The lina64/lina32 elf headers build with fasm where wrong, because the
dictionary starts a new section unnecessarily. Change in fasm.m4.
Session with Coos Haak. After the change to Debian 7 I could no longer
build 64 bits lina. This was needed because the distributed version
did not run. The problem is that the linker script refuses a 64 bit target.
Experimenting with the fasm build reveals that the only change needed
to use fasm build lina64 is that the sections must not be killed if
they are zero already, (provided there is only the one segment,like
said above).
There was also a remark about wc.script from Frans van de Markt.
I now tell the user to install lina properly before attempting the wc.script.
The readme is also refurbished.
This is release 5.2.1 with no changes in ci86.gnr and the above one line
in forth.lab.

2015 june 30

Session with Cees Nobel. There was a wrong executable in the xina
sitribution. With the correct distribution, Cees Nobel can run.
Tested the speed (ca 500 uS), the SIEVE and compilation.
defect: KEY doesn't respond until carriage return.
defect: installation to non-existing directory fails mysteriously, typing
the library file.
Defect: GET-ENV on the Apple is not implemented.

Tried to run com-4e6. This doesn't work at all, opening of a usb
serial line succeeds but reading from the handle has a defect.
Despite giving back a 9 there are no 9 chars read, as the buffer
is not overwritten.

2015 nov 24
Session with Coos. There was a complaint that THREAD-COT not longer
works. We must make a test for that.
This applies to released version 5.2.1
It turns out that I can find a threads.frt that works.

2015 nov 24
Threading has a problem w.r.t. turnkey/save-system. The stackframe
is destroyed, so it crashes immediately. Redesigning CVA, such that
the stack frame for a slave is completely in the dictionary.
ci86.gnr 5.127 : more careful with threading and STACK-SIZE now
correct.

2015 nov 25
A simple test for pre-emptive tasking fails on 32 bits with -a and
not with -e. The difference is in DO-DEBUG, probably INSTALL-TRAPS
64 bits fails always.
I had added an INLINING wordlist, to force to inline things.
There I used :R which replaced : instead of :2 that suppresses the warning.
It is incredible that so many tests still passed using that.
Furthermore it is better to set DECIMAL in the -syscall- screens.
blocks.frt is now at 5.103
With the correct syscall numbers the thread example at parpi works.
The system calls are to be checked for 64 bits.
I must systematically add all system calls needed to stealconstant.

2015 dec 2
I had deleted threads.frt that was in the cvs archive since 2002,
but now I've restored it.
There has been a lot of experimenting and the conclusiong is that
the setup in blocks.frt is sound. After working out the problems
with using SET's in the cooperative threads and problems around
the syscall numbers (?) in the preemptive threads, the threads for
32 bits run again, with the cloned area of the slave fully contained
in the main dictionary, such that it can be prey for FORGET.
This has been incorporated in the lab.

stealconstant.c cannot handle times, used N_time instead.
ciforth at 5.129 block.frt at 5.106
All multitasking work except preemptive 64 bits.

2015 dec 4
ciasdis request received. The last release is 1.0 and it works
on release 4.0.7. There has been work done on porting to 5.x
but it doesn't work. There is a nasty hangup somewhere in labelas.frt.

Apropos threading in 64 bits. If the CLONE_VM is not specified,
the cloning succeeds. CLONE_VM has been added to stealconstant.c
The 12 in 112 parameters for clone is the signal the main program
gets when the child dies. That is problematic for 64 bits, because the
WARM start doesn't work in 64 bits. I should fix that first.
A test
CREATE AAP   -2 CELLS +ORIGIN 'AAP >CFA ! AAP
reveals that the WARM start of lina64 is okay. However installing
that address as a signal handler fails.

2015 dec 5
Added a couple of screens to do regression tests.
REGRESS tests stack depth and parameters.
The task area's are now allocated in the dictionary.

2015 dec 11
I needed CS-ROLL for noforth meta compilation.
CS-ROLL wwith two items each is 2* ROLL. However my ROLL didn't work
as required. Fixed.

2016 jan 1
The documentation of error 20 is wrong. A DROP should be added.
The case about NO-SECURITY merits a place in common problems

2016 jan 8
Noforth compiles. The option -legacy- has been expanded and
does the following:
 The VOCABULARY structure is compatible with gforth etc.
 VOCABULARY exist. FORTH replaces the topmost etc.
 The parse area SOURCE is changed to start at zero.
 0>IN goes to the start of the line, REFILL to the
 start of the next line. This covers a remarkable part of
 old style source handling.

There is a screen -tricky-control- . This has AHEAD ,
the ability to jump out of DO LOOP with WHILE etc.
do-sys and orifg's on the control stack are made the
same size.
CS-ROLL has been added. SLITERAL didn't compile well.

2016 jan 18
nasm version of 64 bits lina works again and passes test.
The problems lies in the LDEMULATION thingy. It is added to
the Makefile. It has been tested whether any of those versions
works better with threadpet, but no.
nlina64 glina64 and lina64 (fasm) all work and can compile
hellow.frt.

2016 jan 20
Reinvestiaged threading in 64 bits. Downloaded an example,
see THREADS/threadpet.frt. Apparently the simple minded
cloning in assembler works. Experimentation reveals that
cloning returns a 0 or a 16 bit process counter in rax,
and that the base pointer (my return stack pointer, where
the HIP is saved) is not spoiled.

2016 jan 20
At last I have some clue about the problem why threads don't
work in 64 bits. It sysfaults at the NEXT of XOS.
This means that SI and/or BP are not saved properly.
If I save them in the USINI area, all is well, but that is not
re-entrant.
I don't need to save SI via BP in 64 bits. It turns out that with
storing into X15 all is well.

2016 jan 23
blocks.frt 5.109 ci86.gnr 5.131 allow threading pet in 64 bit.
Tested manually with the test section of the last threadpet.frt
in tools/THREADS.
blocks.frt 5.109 multiple words names after WANT.

2016 jan 26
The update of 23 jan failed. The new version of WANT was not yet saved.
Furthermore the tests failed because WANT was used. Changed those to
used WANTED, blocks.frt was already changed to use WANTED.
blocks.frt 5.110 ci86.gnr 5.132 allow threading pet in 64 bit.

2016 feb 11
Added [: (quotation). Also {{{ }}} that is a slim version of :NONAME

2016 feb 14
Fixes in behalf of release 5.3. Failure of SEE _pad on 64 bits.
5.133

2016 feb 16
5.3 release is a fact. Put on my website. Reference made on the Forth web
site.

2016 mar 23
blocks.frt : Removed :I from _m. ( must use INLINING ) XGCD split off
from PRIME? NIP introduced where possible.
%:m and D= introduced.

2016 apr 6
fp.frt created, a full floating point package. fpmath.frt in
$F/tools is a regression test. It also works on the AMD with
- L>F gets a sign extension
- DATA>F works with bytes
- next, gets prefix.

2016 apr 10
Committed a few things:
options.frt : better index lines, comment mistakes.
blocks.frt : NIP
blocks.frt :
    D= and DEC: in index line
    INLINING can be used with -m *m .. so no more :I
    XXGCD and 1/XMOD added
    PIPE added
    ALLOCATE use unsigned memory size
The file testfp.bat uses fpmathregress.frt to run the regression
test for floating point math under different circumstances.
They all pass. The fp package however still uses the _ character
for the exponent. This is fixed such that I can add
the package to the official version, checked in. 5.115

2016 may 15

2016 may 20
One of the reasons ciasdis no longer works lies with BAG.
BAG has been made with DATA while it uses DOES>.
Big bummer! Affects all versions since 5.2.1

With that removed assuming version 5.3.1 ciasdis passes all tests again
for 32 bit. The simple and non-Intel targets succeed (as80m as6809 and
alpha) for 64 bits.

2016 may 24
Continued progress with ciasdis.
Naming convention gset meaning generated set introduced.
Renaming done using symbolic links.
the testinstructionsets target can now be expanded.

2016 jun 14
Getting serious about the documentation in behalf of arm version
at Frans.
The following issues are moved away from this document, after
a check they were indeed solved:
INLINING 'SEE _pad' ACCEPT SET-SRC $! MOVE :I D< CHS
A number of FCR's are created: 1 .. 5
The following issue are solved here and now:
- end of block file, line nr is not correct
- copyright in screen 0 is old

2016 jun 15
FCR up til 22
Solved here and now :
 - PP referenced from SRC
 - ANDSI,
 -   Replace some OVER OVER with 2DUP
 - 'W' replaced by 'WOR' in manual.mi

There are a number of protfcr's. They must be pondered
whether those are real problems.

2016 jul 10
2001 aug 21 is the first day where the log is no longer trimmed to
64 characters. Fixed now.

2016 nov 16
In the course of a few weeks all edits that are marked in the printed
documentation have been done.

2016 nov 20
The analyser still works after adaption 4->5 mainly REQUIRE->WANT
Just two testcases fail, but the regression test is made valid again.
The colors show off.

2016 nov 21
A cvs archive is backuped up in the Dropbox.
xina 5.1 has been made official and added to the hcc website.

2016 dec 17
Since nov some improved versions of xina have been put on the
website.
Thanks to Chris I've discovered that forth.lab was no good.
Moreover he reports this for grow:
dyld: malformed mach-o image: __LINKEDIT has fileoff==0
which overlaps  mach_header
Abort trap: 6
This may be due to better checks.

2016 dec 19
Working with klis , checked out 5.2
Turns out that 5.2 32 bits doesn't work with fasm.
fasm cannot generate mach header. So the fasm version now
is adapted to ELF object:
  FORMAT ELF
  ...
  .text
  ...
  .bss
It then must be converted to a macho object, then linked with the
command that Spykerman provided.
This doesn't pan out. So we are forced to stay with the nasm assembler.

I managed to get everything converted to git.
1. get the /usr/local/cvsroot of sparc into a tar archive.
2. untar in subdirectory of scratch, rename that to cvs
3. apt-get install cvs-git
4. run
    git cvsimport -v -a -k -d `pwd`/cvs -C ciforth ciforth

2016 dec 20
Got rid of SEGMENT in names.m4 , SECTION_END everywhere.

2016 dec 21
The fasm.m4 and nasm.m4 now have proper OSX sections.
Tested against the original 5.2 files that Chris has been
testing. Modification of ci86.gnr in accordance:5.141.

2017 jan 10
The latest version has a defect in ALLOCATE that make that it looks
like there is zero space. Fixed in blocks.frt.  5.120.
The tests that compare against a version in the cvs archive are
akward. Introduced testcmp subdirectory to contain those files.
Marked everything as LASTCVS

2017 jan 14
Even testwina works, however a symbolic link must be made to
the include directory from fasm. An exciting possibility is to use
the include directory from fasmw. That may make a 64 bit version of
wina work.

2017 feb 21
With a better understanding of the mechanism of the ICALL in
64 bits windows, those ICALL's have been updated.
All call with 4 or more parameters can just put those parameters
on the stack as usual, but the first 4 (most accessable)
parameters must be copied into the registers rcx rdx R8 R9.
Now a call with 3 or less parameters requires that they are
filled up until there are 4. Then those param's must later be
nipped. (Return code comes on top.)
E.g. for 2 parameters
   >R >R _ _ R> R> ICALL  NIP NIP
This can't be done in ICALL because it doesn't know the number of
parameters. wina64 hangs/crashes on windows. It gives a window
indicating that it is not responding. Setting a REPEAT AGAIN
show that it starts and some dll calls survive.

2017 feb 28
Coos haak has downloaded a 64 bit debugger on his pc. With this
help we could see that the standard in/out handles were loaded.
The suddenly we got first light. It shows the .SIGNON and
it can execute a subsequent .SIGNON but other commands behave
eratically. In particular it gives error 48 an indication that
all disk blocks are locked.

2017 mar 5
Wasted some time getting info right. I have now texinfo.pdf in the
documents directory. See section 2.21 for what I tried (Installing
an info file). Changing the lina32 name to lina seems problematic.
As long as lina.info sits in /usr/share/info the command "info lina"
works nowadays. Note that dir in /usr/share/info is an info file
itself.

2017 mar 12
Euler592 reveals a bug in the modulo package (x^x).
_reduce_1 contains an error. Fortunately I build that program
also with the official program.

2017 mar 14
The 64 bit icall's in mswindows must be 128 bit aligned.
The 64 bit version of wina works now with an experimental version
of a PARS[  .. PAR1 .. PAR2 .. ICALL] mechanism.
The idea is to reserve a stack area by PARS[ at PARS.
The Forth stack is above that so it is protected. PARS is the stack
that is used by Windows. PAR1 fills in parameter1 and so for the
others. ICALL] calls windows like ICALL, using the stack at PARS
and switching back to the Forth stack after that.
The plan is to add this mechanism in wina32, which should make porting
easier.

2017 mar 28
REGRESS is made harmless in the -c option.
A PARS[ ICALL] mechanism is added to $f, in an RCS archive beneath
the git directory. It is gradually introduced and now covers all
except KEY KEY?. Those are not working properly, maybe a wine thing.
KEY? always gives TRUE. KEY handles normal char's and mostr control
characters, but behaves strange on <ESC> and ignores function keys.
GET-MODE gives B7.

2017 mar 29
Reordering around SYSTEM in ci86.gnr

2017 mar 30
KEY now uses PARS[ and ICALL], not for its factors GET-MDOE SET-MODE
and behaves still the same.
Transforming GET-MODE and SET-MODE runs into mysterious differences.
`make testwina ' still succeeds.

2017 mar 31
PARS[ is renamed to ICALL[. All words transformed.
Actually ready to be made assembler words.
Problems with KEY and KEY? under wine:
KEY behaves strange if <ESC> is pressed. KEY? always gives true.

2017 apr 4
The version with ICALL[ ICALL] is committed to git.
Now the sytem is made such that the OS words
use a pointer that resides on the
return stack as a frame pointer instead of a global PARS.
The PAR# words are now ;CODE words using DOPAR.
This was all still in wina32. Now the win64 source for .fas
is generated.
All test pass except SYSTEM first time. The reason is that the
shell is not filled in correctly.
It turns out that GET-ENV doesn't work in 64 bit modem because it
uses the old call mechanism. Filling in the correct %comspec%
still gives
"DIR" SYSTEM
? ciforth ERROR # 2 file not found
This may mean that the PATH is not pointing to a correct
executable, on a system with very annoying safety features that
destroys files without notice.
However the 32 bits Forth under Linux wine gives the same message.

2017 apr 6
The problem with SYSTEM is solved. Also midi.frt works under
wine.

2017 apr 7
ICALL[ renamed into CALL[ in order to start using CALL] .
Trying out CALL] with the midi example fails under 32 bit.
So for the moment this addition is present in a file "callclose".

2017 apr 8
CALL[ is made into a code definition, wina64.exe
is released in beta on my own website.

2017 apr 10
CALL] is added. At first it seemed not to be working, because it
was tested using sendmidi. The trick to fill in the address the
first time e.g. midiOutOpen was used made it fail, because
that used another CALL[ . The solution is to force this fetching
in midiopen by `` midiOutOpen DROP '' This works, at least in
32 bits.

2017 apr 11
SAVE-SYSTEM on windows 64 bits now works.
Other minor points : SHELL now has a default and uses backslashes.
64 bits wina doesn't try to compile cd , the OS-IMPORT screen
test for CALL] now not CALL.

2017 apr 26
Extensive test. The whole internal test for windows 64 bits succeeds.
Points improved:
- LAST-ERROR : proper test
- LOAD-DLL DLL-ADDRESS didn't work till now. Proper test.
- LOAD-DLL: DLL-ADDRESS: didn't work till now. Proper test.
- STDERR STDIN STDOUT : range enlarged. Tests pass now.

A turnkey system that connects to the OS directly, using
LOAD-DLL: DLL-ADDRESS: works. This is tested by using the
midi commands.

2017 mei 1
The debian archive is passed through lintian and some errors
are removed.

2017 mei 2
More lintian errors are removed.
The beta version of wina64 that is on the personal website has
been tested w.r.t. testreport.txt. There are no problems.
The tests around SYSTEM BYE and EXIT-CODE are reorganized.

2017 mei 4
The lintian error regarding static compile has been removed.
lintian gives 0 error, so ready.
2017 mei 5
Experimenting with wc.script reveals two defects:
1. GET-FILE must give an error if it cannot accomodatea file.
    read-file there must be replaced by:
    : READ-FILE   OVER >R READ-FILE OVER R> = ## ?ERROR ;
    The 6 can be replaced by 2. The 1000 - makes no sense and
    can be left out.

2. the -s options should allocate a static buffer and installs
    that in FAR-DP.
    SCRIPT-NAME $@ GET-FILE   HERE FAR-DP ! 10,000 ALLOT
    In the instructions one can suggest to increase the buffer
    by just ALLOT ting.

2017 jun 30

The usage of ssort is eliminated from the git archive.
Adding the file sortworddoc.frt.
I've cloned the archive or how they call that and eliminated all files
that are not needed for lina.

2017 jul 1
The cvs archive is accessible through anonymous ftp.
I've added a user anonymous in the CVSROOT/passwd and added
her also to the readers file.
The user existed, but had a shell for no good reason.
Changed that and ftp still works.

2017 jul 4
Discovery: alioth has cvs archives.
plan
- have a pgpsignature
   * size of Paul Wise's pgp  : 4096
   * install pgp
    * generate key
    * disk with backup

2017 jul 5
Made a motivation for a small source archive.
Looked into ssort

2017 jul 6
I still don't know how to use pgp for sending an signed email
gpg --detach-sig xxxx
en
gpg --verify xxxx.sig
work together to sign an archive.

Ik kan een geencrypte mail voor mij ontcijferen met
gpg -d
Ik krijg dan een geheimzinnige vraag voor een filenaam.
Ik kan ook de *.asc file in the attachment gebruiken.
Dan wordt de asc er afgehaald voor de cleartext.

2017 jul 10
* mail to admin@alioth.org
- msdos version of ssort in git

2017 aug 6
het lijkt onmogelijk om contact op te nemen met alioth.
Ik heb een account geopend als manipal-guest.
Hiermee wordt ik nog steeds als een anonymous beschouwd.

2017 aug 31
I've made a file lina.mak that can serve as an example for
the Makefile in a source distribution.
There is a target LINAZIP That doesn't belong in that file.

2017 sep 2
I must make a makesourcelina.bat in order to make a Debian
source distribution. It just copies all relevant file to
a subdirectory and tars it. It renames by leaving off the
ci86 prefix.
Otherwise it is similar to the LINAZIP target in the great Makefile.
I must have a separate Makefile for debian, called lina.mak.

README.lina must refer to just lina. This is also in accordance
with the future where there may be lina's for ARM etc.

2017 sep 7
At last we're zoomin in on making a source package for lina. The
first is to put the upstream archive lina-5.3.0.tgz somewhere and
unpack it. Then go to the subdirectory lina-5.3.0 and
type dh_make --createorig
This will prepare a xx.orig. alongside lina-5.3.0.tgz and a debian
directory with all sorts of templates that must be filled in.
Now adapt the package. In our case it is necessary to patch the path
in the assembler file and copy (link) all files that start with
ci86.
dpkg-source --commit
quilt refresh
dpkg-buildpackage -us -uc

2017 sep 10
Before publishing the .dsc file, I must first
- have an official lina source archive.
- build lina from that
I already have a facility for the first: "make LINAZIP". This makes
an archive with the .fas file as the source file.
In order to have an official lina source archive for 5.3.0 I went back
to RCS because I don't seem to know how to get back a tagged
git archive. I also manually added the comment that was removed
because fasm doesn't support block comment.
The archive was cloned into the makelinazip, then deleted and
a proper lina-5.3.0.tar.gz is present in the release directory.
The lina 5.3.0 archive texinfo was compared to the lina32 archive
and only the executable name was different. Also .html and assembler
was compared.
If is strange but ssort.exe shows up in git, but is not presented
in a checked out version.

2017 oct 8
At last trying to add an archive.
All is well except that lintian gives a mysterious message.
Maybe I've made a patch duplicate.
Anyway there is a release/dsc that contains even a pgp signed
dsc.asc
Published in mentors. In fact this solves ITP bug 859130 halfway.
.
2017 oct 9
It appears that you can address revisions as follows:
git diff REL-5-3-0 -- nasm.m4
NOTE 2018 feb 7 : can't get this to work.
NOTE 2018 jul 3 : must be CVS_REL-5-3-0 .

2017 oct 12
The following files are different w.r.t. the local git archive.

Makefile blocks.frt ci86.gnr ciforth.mi debian.sh glossary.texinfo
lina.1 linux.cfg logforth.txt mywc mywc32 mywc64
release/lina_5.3.0_i386.deb setenv sortworddoc.frt test.mak
testreport.txt
This is the origin branch.
It is a mess, so I change the development workflow:
The development branch is in cvs, the master branch is in git.
This means that I must put the Debian commits in cvs which is
not a big deal.
859130

2017 oct 16
It turns out that Gianfranco has answered me a long time ago.
I must close bug 859130 by having a request to sponsor bug.
Then upload to debian.mentors.net (not org)

2017 oct 17
I have filled in my C12C8A7A public key in my Debian account.
Apparently an upload works by signing both the changes and
the dsc. However this can only be retrofitted by debsign
that refuses to work.

   1. sign by the Debian account key : the changes file (!)
   2. dput has the options -o dryrun and -d debug and -s simulate

2017 oct 19
I managed to sign the package by using an explicit -k option to
debsign. The changes were accepted by dput in simulation.
Then I uploaded it. It doesnot show up directly at mentors page.
"
Uploading to mentors (via http to mentors.debian.net):
Uploading lina_5.3.0-1.dsc: done.
Uploading lina_5.3.0.orig.tar.gz: done.
Uploading lina_5.3.0-1.debian.tar.gz: done.
Uploading lina_5.3.0-1_i386.deb: done.
Uploading lina_5.3.0-1_i386.changes: done.
Successfully uploaded packages.
"

2017 oct 23
Adding the      1d9d14a1a290ce9cfa753af7d9cb928464ec2adf (2017jan17)
(improve beta release names)
54b6189e84851b30230c6f6a3c85e1d789f3c375 (cosmetic reordering)
git to the CVS archive marked GIT2017JAN17 and GITFEB19

4b5a1e5651a494d8ef8e1001a8beb4b707e775ab
The windows calls are via the ICALL[ ICALL] mechanism.
Couple of README's added and updated in behalf of git appearance.
Other small changes.
git to the CVS archive marked GIT2017APR4
This git change has also the release stuff and debian.sh but I
don't want to have that in CVS

2017 oct 25
Added the 25343e829c3819fc144f924bf7822bc11f6989f8 commit
with label GIT2017JUN30  concerning sortworddoc.frt to CVS
and corresponding changes to test.mak.
Made a list of things I want to be removed from the main
directory. The script likegit.bat does that and it is added in CVS.
It can be run each time CVS dir must look like git, in particular
for testing whether files are missing.

Now the Makefile is updatedin order not to use c-tools to build
the library from options.frt and blocks.frt. Also
    wordset.mi is now cleaned in 'make clean'
    likegit.bat added
forth.lab.orig is used to build the first version of toblk.
Forgotten to upload that.
Now toblk.c and fromblk.c are no longer used and can be moth-balled.

2017 oct 26
I forgot to upload forth.lab.orig.

In git likegit.bat is to be made permanent, resulting in directories
that contain snippets examples moth-balled optimiser etc.
Some files to be deleted are by accident already here.

In git the moves must actually take place
and we'll make a README for each.
git.bat that moves them in the git environment.

2017 oct 27
forth.lab.orig. has been renamed boot.lab and is uploaded.
This didn't work at first because cvs caused a one char offset.
5.2 is okay now.

2017 oct 28
Before proceeding some cleanup is in order:
  some things are duplicated in test.mak, e.g. handling fasm files etc.
  the excursion via .. is probably superfluous for the LINAZIP files.
  sortworddoc.frt must have $< instead of $^ , otherwise lina
  and forth.lab are included in the sort.
Checked in also in git.

Default for lina64 increased to 64 Megabyte.
Building with directory inside ciforth works and tested to generate
the same files than the old target LINA64ZIP.

Abandoning all changes in git:
  remove all files
  git reset --hard
  git clean -fd

The directory tree for the git archive has been reoriganised
This is not reflected in cvs.
GIT2017OCT29 tagged.

2017 nov 1
Apropos optimising:
    make lina-ana
    make testoptimiser
succeeds.
2017 nov 7
Optimising: it is clear what is wrong with TESTI. The constituents
should be optimised beforehand.
In lina.html in the first screen a remark about concepts added.

2017 nov 8
blocks.frt : decompilation no longer generates BRANCH.
Worked on burning down the git version.
A number of rather unimportant stuff has been moved to the ciforth directory
such that local git archives can be deleted. Inadvertantly I deleted
a directory that is now in ~/PROJECT/ciforthfrombackup being burned down.

2017 nov 10
The comment mechanism is update. M4 handles comments a blocks,
such that in .fas files it can be changed to single comment lines,
instead of suppressing it. Concerns:
Makefile ci86.gnr fasm.m4 gas.m4 masm.m4 nasm.m4

2017 nov 14
W.r.t. the building of a deb package of sept 7
dpkg-buildpackage -us -uc
must be replaced by just
dpkg-buildpackage
Otherwise the package will not be signed, and that must then be done
later somehow.
I've made a patched lina-5.3.0.tar.gz archive in project/debianlina
with the proposed Makefile and no lina executable.
Also a dosh that adds shell variable

2017 nov 14
With Coos Haak worked on parallel prime counting. 2 paralel now
works.

2017 nov 16
Off it goes.
Unpack the patched lina-5.3.0.tar.gz.

2017 nov 17
I have now gitjunk/ciforth. With a lina-5.3.0 with a Makefile and
no lina. This is the base for a package.

2017 nov 19
REGRESS misbehaves when testing caught exceptions.
This was due to the use of WHERE to keep track in DO-VERBOSE
The remedy is to use a separate variable. Done.
2, is now in the core.

2017 nov 24
Studying FSl.
My mergesort is a good candidate.
It took some time to have it working.
I adapted it such that LL< destroys its parameters.

2017 dec 4
I can't use my password for my pgp key.
So I created a new one.
Made a test for Diane to try it out.
There are two nits left.
No DIR-ENTRY for info
W: lina: extended-description-contains-empty-paragraph
W: lina: unknown-section contrib
E: lina: info-document-missing-dir-section usr/share/info/lina.info.gz
E: lina: info-document-missing-dir-entry usr/share/info/lina.info.gz
W: lina: manpage-has-bad-whatis-entry usr/share/man/man1/lina.1.gz
W: lina: executable-not-elf-or-script usr/share/doc/lina/examples/mywc32
N: 1 tag overridden (1 error)
All this was solved except the last.

2017 dec 5
This is all incorporated in a .dcs file.
It has been uploaded with dput and it tells that everything is okay.
No package shows up in my account. I've sent a message to
support@debian.mentors.com

2017 dec 15
Implemented include-file, see include-file.frt in tools.
This has been added to the screens.

2017 dec 17
I struggled with a test for MERGE-SORT. It turns out that
I can use SORT-VOC as a test. The id that I can use a prime
with primitive root 2 e.g 197 to generate a linked list somehow
didn't pan out. Anyhow the MERGE-SORT contains a design error
that < doesn't consume its arguments, and the stack comment is
wrong. blocks.frt 1.34 solves this and also reverse the order
of sorting in SORT-VOC, such that WORDS come out in alphabetic order.
blocks.frt fixes REGRESS, verbose regress no longer get upset by
exceptions.

2017 dec 18
hello.frt doesn't contain the nonstandard .", but it has the upcoming
" and TYPE. INCLUDE-FILE is added, with a lowercase include that
uses ot. REGRESS READ-FILE INCLUDE-FILE tests are added to
ciforth.lab.test. This was tricky because READ-FILE doesn't handle
files that don't end in ^J gracefully. Now changed hello.frt
to be usable. Version 5.134 of blocks.frt.

2017 dec 19
INCLUDE-FILE doesn't work properly with noforth.
A fresh effort requires that LOCK  can be used with disk buffers
without reading them from disk. The first step is making
THRU a loop over simple LOAD's. In 5.147.

2017 dec 19
Block locking without reading,
Comment w.r.t. buffer mechanism addapted. It is used in INCLUDE-FILE
by lines, in 1.45  ci86,gnr   5.148.

2017 dec 22
NAME must be redefined for line by line parsing. (INCLUDE-FILE block).
2, must not be in the library now it is in the kernel.
error 33 added: INPUT exhausted

2017 dec 30
Much work into a new release. buster installed.
The signing of my new package doesn't work. because of problems with
gpg.

2017 dec 31
Computer broke down

2018 jan 1
After clearing Cmos, replacing battery reseating memory etc.
it works again.
Added a removal of trailing spaces to the building.
gpg only accepts my secret key as root
Managed to sign the package as root.
Transported it from strawberry to cherry.

2018 jan 2
UPloaded. One error remaining. "Solved a wrong bug"
The gpg system doesn't work properly, I must use root account
to sign the package. One serious error remains.

2018 jan 6
Updated the package not mentoning the error. Now there is
one yellow mark left.  "A watch file is present but doesn't work"
Added a tag snapshot2017Oct29 to tag the latest git. Added a
source release to it and added binary distributions to it.

2018 jan 8
Edits to cifgen.mi.
Not yet checked in.

2018 jan 10
With the help of advise from Geert Stappers, the git
archive is now okay to have a debian program using it as a watch.
Added a tag, and based the distrbution on that tag,
Added a tag CSV_REL, made similar binary distribution for 5.3
(lina/wina).

2018 jan 12
Time out w.r.t. packaging, Geert Stappers.
Trying to formulate a lesson about literals.

2018 jan 15
Test results from Coos Haak for 64 bits windows.
It is discovered that there is no default command intepreter
for _DLL_ , only _PC_. In fact _DLL_ _PC_ are conflicting.

2018 jan 18
Checked in:
blocks.frt contained annoying type. labtest extended.
checked in: (for debian release)
lina.mak releaselina.bat
checked in: textual stuff induced by Debian  ci86.gnr 5.149

2018 jan 24
The initialisation of the MEMORY wordset is done properly,
adding the word heapify. blocks.frt agree with the label
OKAY2 in tools/ALLOCATE. INIT-ALLOC uses up one quarter
of the memory. Also a test added.
At the same time FIB added to calculate Fibonacci

Initialisation for MEMORY wordset separate from loading the wordset,
error detection improved.
Fixed: index lines of screens loaded during debugging
Fibonacci added.

2018 jan 25
* Assembler switches to CASE-SENSITIVE, MEASURE-PRIME always loads.
* FINIT is always done in loading the fp system

2018 jan 30
- check whether the orig file is somehow modified.

2018 feb 6
Test of 64 bit wina.
* testwina64files.1 contains wina.exe instead of wina64.exe
* -e doesn't work, because of INSTALL-TRAPS
* -c doesn;t work TURNKEY NOT PRESENT
* prompt message misses AMD...
* CALL[ CALL] No actual test but a message
* GET-ENV fails (known: library)
* mysterious message: regression test
Building a program didn't work. It turns out that barring the
early publication of the 64 bit wina, the screen that does it
was lost. It is reintroduced in blocks.frt.

2018 feb 7
We want the git archive up to date.
First thing is to updating the comment mechanism.
This done by cvs diff -D 20171109 -D 20171111 and apply that
to the latest git version.  Done.
Secondly: the change to the cifgen docs and texinfo and
lina.1.
texinfo : direntry must be added and references to top must be Top.

wina64.exe succeeds the regression test testwina64files.1 ,
assuming the same command like wina32.exe in the Makefile.

2018 feb 9
Documentation cifgen.mi ciforth.mi and lina.1 are transferred
to the git directory.

2018 feb 11
Modifications in behalf of compiling noforth to the git directory
git directory pushed to github.
Explanation at git hub.

The problem with nested use of RW-BUFFER. It diesn't end there.
If a windows call is in progress, and e.g. _gev must call
windows to find a call address, there is also a problem
with recursive use of PARS.
A simple solution is just to save PARS on the return stack.
Another solutions is to introduce RTUCK and R2@.

2018 feb 12
I tried to make LOAD-DLL and DLL-ADDRESS fully re-entrant by not using
RW-BUFFER to store their zero-ended names using ZEN, but storing
the names in buffer reserved by CALL[. Furthermore PARS is save
and restored via the return stack. This is still in 5.153.
Still GET-ENV needs a `` _gev DROP '' to make it work the first
time. The reason is that LOAD-DLL DLL-ADDRESS and GET-ENV
still use the same stack frame at DSP-256. So the change
made just doesn't work. There is no choice but to document
the restriction that within CALL[ CALL] absolutely no
recursive calls on MS-WINDOWS are allowed, and that a
subroutine name is potentially a call in compiled program.
blocks.frt 5.152 : the comment is incorrect!

2018 feb 13
CREATE-FILE in Linux now allways makes a 755 file and ignores fam.
TIME&DATE GET-ENV and midi all tested in 64 bit.

2018 feb 14
64 bit wina toegevoegd aan git

2018 feb 15
ci86.lina.labtest renamed to ci86.lina.labtest.
test.mak all test targets include that test, cleanup.

2018 feb 23
Feared that MERGE-SORT was no good. However tested 5.3.0 version.
Now there is a mergesort.tst in the tools directory.
The usage comment was wrong!

2018 feb 27
The quotations using { } are tested on the forth lisp
of Probst and checked in. Can now decompile { } too.
Introduced >ALLOC. Both added to test.
COLD crashes no more, by only installing the user variables
the first time.

2018 mar 2
Message to bdale, a request for sponsorship. Using gpg.
gpg --clearsign message

2018 mar 5
The command to build from a .dsc file is
    dpkg-source -x myprogram.dsc

2018 mar 11
Contact with Phil Burke of pforth lead to a response.
He is interested. I've returned an explanation.
Added a wiki page for MERGESORT.

2018 mar 12
Phil Burke tries to stimulate Bardeen.
There is now a debiansrc.bat that generates a src archive.
It is too hard to make reasonable commands to generate ps pdf info,
so it includes those files.
The filename decided for the extraction directory is extract.mak
The filename decide for the Makefile in the main directory is debian.mak
Can now make a source distrbution by makesrc.bat.
A usable lina- 5.3.0.tar.gz is placed in debinalina/2018mar

2018 mar 13
Testing EXIT-CODE leads to a way to avoid using the -f options.
This is introduced into the lina code. The same code works for
wina in a separate command but not in the automatic test, so
it is commented out with a dnl.
The 64 bits code didn't even compile.

2018 mar 26
Building a distributie on kiwi has succeeded, however
the file seems to be known as AMD.
the makefiles have to be added
.texinfo still contains a spurious top without capital.
the library name has to be patched.

2018 mar 27
The files makesrc.bat extract.mak and debian.mak now
generate a source distribution where two makefiles are
to be added. These files are in the latest cvs distribution.
From debians viewpoint they are patches.

2018 mar 28
Uploaded a reasonable version.

2018 mar 30
New (final) version of the files makesrc.bat extract.mak and debian.mak
uploaded.

2018 mar 31
FILE-POSITION was missing. Added it, but alone for LINUX_N.
The SEEK_CUR is hard coded as 1, adding the stealing has still
to be done.

2018 apr 8
Working on ocr, I discovered that INIT-ALLOC GET-FILE can result
in a corrupt link chain for ALLOCATE, the count for the file
name enters into the last address. This is solved by a couple
of ALIGNED/ALIGN. In particular the heapified block in
INIT-ALLOC is now an multiple of CELL and GET-FILE starts
with alignment.

2018 may 3
In euler566 it is dicovered that the experimental version
cannot load euler566.frt if the memory is enhanced above
4 Gbyte.
Made the loading of -fp- somewhat more sensible.

2018 may 22
Uploaded a deb file to debian -2 with lots of errors in the
watch file.
2018 may 23
Uploaded a deb file to debian -2 without a watch file.
For me this archive is perfect.

2018 may 25
I dare not look at Geert Stappers responses.
26th there is a meeting of the linux user group.

Plan for the constant.m4 thing.
1. all relevant files (constant_32.m4 constant_64.m4 constant_osx.m4
are in the archive and considered source w.r.t. ciforth.)
2. makefile constant.m4 target just copies constant_32.m4.
3. all making of constant (stealconstant.c etc.) is moved to
 a different project.

2018 jun 4
Geert has made an example for me. I only need to fill in project
and archive. I made a watch file and had to change the tags directory
from Geert to the actual release directory. There it goes again.
Because no source are changed, we can just put the watch in the
debian subdirectory. Then goto  lina-5.3.0
en type "dpkg build-package -k$GPGKEY"
The GPGKEY comes from ". dosh". After the pass phrase is ready
we can ship it to cherry using
    dput mentors lina_5.3.0-2_amd64.changes
(because mentors is present in dput.cf , remember.)
That has been done. mentors still thinks the watch file is
no good.

2018 jun 5
While waiting for the verdict of Geert Stappers, I thought maybe do
something useful. WORDLIST really belongs in the kernel, because
it is dependent on whether we want a sourcefield and an extra field.
It also has B_DUMMY. Is has been moved now from blocks.frt to
the kernel and used within NAMESPACE. This triggers a rewrite
of the documentation and also's. ORDER now handles anonymous wid's.

2018 jun 11
At last a totally green version of lina is uploaded to mentors.

2018 jun 12
Geert Stappers insists that lina-5.3.0.tar.gz is not an acceptable
source. That means I've no longer a sponsor. Or at least he
thinks all of the github website should be included.
optimiser.frt : If a branch ends at a next, the code can not be
concatenated with other expansion, but it can with single words.
This is TESTIA that is added. It looks as if there is no
problem (or no longer) with EXIT.

2018 jun 14
Tedious debugging of optimiser. An obvious failure of correcting
branch offsets was caused by a 1+ error. TESTI.
There is now considerable more grip and a note about how to handle
EXIT and LEAVE.
It will probably be necessary to expand NIP because it is and
ugly bastard of a juggler and annihilator.
: test OR EXIT XOR ; still not optimises.

2018 jun 19
Start with multi-threading under windows. in tools/threads/windows
A windows thread can be created.

2018 jun 21
Working on THREAD-PET for windows.

2018 jul 3
stealconstant.c and strerror.c removed from the archives and
moved to the project stealconstant.c

============
Notes for release 5.4
Before 2017 oct 20
* NIP introduced where possible in the library
* Inlining removed from modulo package.
After  2017 oct 20
* SORT-VOC no longer results in anti-alphabetic order
* Regress now can be used to test words that catch exceptions.
* Usage of MERGE-SORT -- stack diagram -- changed.
* 2, in the kernel, so default no longer a number, removed in library
* hello.frt uses " and TYPE, no more ." and has OS-dependant line ending
* CASE-INSENSITIVE now also does numbers.
* THRU is now a loop of LOAD 's. Affect DO-DEBUG
* LOCK locks a buffer without reading from disk, in behalf of files
* INCLUDE-FILE added that reads by lines, proper REFILL, proper NAME
* introduce error for input exhausted in SCAN-WORD
* textual and example improvement
* (MEMORY wordset) added INIT-ALLOC c.s.
* (MEMORY wordset) size and address now may be negative.
* Assembler switches to CASE-SENSITVE, MEASURE-PRIME always loads.
* FINIT is always done in loading the fp system
* WANT DO-DEBUG CASE-INSENSITIVE now runs DO-DEBUG CASE-INSENSITIVE
* GET-ENV didn't work the first time,
* LOAD-DLL LOAD-ADDRESS ca now be called from between CALL[ CALL]
* Better default command interpreter for modern MS-Windows
- ? move TUCK to kernel?
- with 6.0 the fp package should be introduced
- 6.0 floored division and comprehensive tests for GCD XGCD c.s.
* CREATE-FILE makes a file with no read access.
* add >ALLOC ,, ADD-ALLOC  maybe use it internally.
* Add a test for merge, inorder to be able to modify mergesort
* COMMENT/ENDCOMMENT has become _COMMENTED({ }) such that
    fasm can handle it.
* lina / 1 load / COLD / WORDS crashed, no more.
- TICKS misbehaves on a 4Ghz machine/32 bit
- decompilation improvements: nested THEN , IF/WHILE , loose {
* FILE-POSITION was missing
- SEEK_CUR must be in stealconstant
- errno is a global variable in libc, it shouldn't be in ciforth docs.
- the -l option must be retested, in behalf of COLD
* WORDLIST must be added to the kernel (B_DUMMY SOURCE_FIELD)
- NAMESPACE must refer to PREVIOUS
- CORRECT-BRANCHES in optimiser.frt is wrong.
- 0.E leaves a zero on the data stack
- are S>F D>F missing?
- WANT ASSEMBLER crashes a wina64 5.3.0 after -e
- Document that ;CODE cooperates with DATA
- ;CODE needs added ` LATEST HIDDEN '
- replace max-user with last-user
===========================
Greg Egan
Schild's ladder.
--
What remains sortworddoc.frt is not up to date.


- M:r  endclass-p

- filter reduce(fold) map are useful words to add.
  It can be used by bags on the stack
  DSP@ >R 1 2 3 4 5 R>
  generates a bag at DSP@


+ALIAS should be in core
+TRIAD must become a loadable extension.
+I must remake VALUE as an alias of CONSTANT. Make the optimiser
    understand that VALUES are not constant. Never patch DFA's of
    constants again.

+ Get-file should check for memory overflow.
+ there may be an improved version of sortworddoc.frt
Write the article for allocate using a objects and thingies.

Suppose sda1 is a sandisk.
dd if=binary.bin of=/dev/sda1

issues:
* maybe add INCLUDE to the kernel
* -e in lina.1 should be the normal option.
  INCLUDE SEE LOCATE DUMP CASESENSITIVE
- the definition generated by :R should be hidden.
  then it can be redefined several times and RESTORED works.
 - add
~> https://www.forth.com/starting-forth/
 > https://sourceforge.net/projects/thinking-forth
Scripting under MS-windows:
    -s : trimline must be: CF: "?LI <trim>" EVALUATE
    documentation
