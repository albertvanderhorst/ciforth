



: (EMIT) DUP 32 < IF &\ EMIT BASE @ SWAP 8 BASE ! 0 <# # # # #> TYPE BASE ! ELSE EMIT THEN ;
: .s 128 0 DO I OVER BIT? IF I (EMIT) THEN LOOP DROP ;
: .FOR DUP RE-COMPILED = IF
    @+ 'FORTRACK-DUMMY = IF CR "^ : MATCHING AT START" TYPE THEN
THEN ;
: .DOLLAR  DUP @ 'CHECK$ = IF CELL+ CR "$ : MATCHING AT END" TYPE THEN ;
: .EXACT DUP @ 'ADVANCE-EXACT = IF
     CELL+ DUP $@ CR TYPE @+ + ALIGNED THEN ;
: .CHAR DUP @ 'ADVANCE-CHAR = IF   CELL+ DUP "[ " TYPE .s " ]" TYPE MAX-SET + THEN ;
: .A? DUP @ 'ADVANCE? = IF CR "? OF " TYPE      CELL+ .CHAR THEN ;
: .A* DUP @ 'ADVANCE* = IF CR "* OF " TYPE      CELL+ .CHAR THEN ;
: .A+ DUP @ 'ADVANCE+ = IF CR "+ OF " TYPE      CELL+ .CHAR THEN ;

: .A< DUP @ 'CHECK< = IF CR "START OF WORD"  TYPE      CELL+ THEN ;
: .A> DUP @ 'CHECK> = IF CR "END OF WORD"  TYPE      CELL+ THEN ;

: .A() DUP @ 'HANDLE() = IF CELL+ @+ DUP 2 < IF DROP EXIT THEN
1 AND IF "END" ELSE "START" THEN CR TYPE " OF SUBSTING" TYPE      THEN ;

: .RE .FOR BEGIN DUP @ WHILE
.DOLLAR  .EXACT .CHAR .A? .A* .A+ .A< .A> .A()
REPEAT DROP ;

: .Z BEGIN C@+ DUP WHILE EMIT REPEAT 2DROP ;

: .RE-COMPILED RE-COMPILED .RE ;
: .sm SET-MATCHED .s ;


  '.RE IS .RE-C
  '.Z IS .Zm
